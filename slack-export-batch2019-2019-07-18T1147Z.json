[
{"datetime": "2019-03-21T03:49:22Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "subtype": "channel_join", "text": "<@UCZKNV9FB> has joined the channel", "ts": "1553140162.000200", "type": "message", "user": "UCZKNV9FB"}
,{"datetime": "2019-03-21T03:56:51Z", "name": "mohanasankari.g", "real_name": "Mohana Sankari.G", "subtype": "channel_join", "text": "<@UH34M9FCG> has joined the channel", "ts": "1553140611.000400", "type": "message", "user": "UH34M9FCG"}
,{"datetime": "2019-03-21T04:05:02Z", "name": "prabhakar.g", "real_name": "Prabhakar Ganesan", "subtype": "channel_join", "text": "<@UH5GSHZ9Q> has joined the channel", "ts": "1553141102.000600", "type": "message", "user": "UH5GSHZ9Q"}
,{"datetime": "2019-03-21T04:10:31Z", "name": "sanjeevi.p", "real_name": "sanjeevi", "subtype": "channel_join", "text": "<@UH5DG3BA7> has joined the channel", "ts": "1553141431.000800", "type": "message", "user": "UH5DG3BA7"}
,{"datetime": "2019-03-21T04:14:00Z", "name": "gopalakrishnan.a", "real_name": "Gopalakrishnan Ayyasamy", "subtype": "channel_join", "text": "<@UH5FT99QU> has joined the channel", "ts": "1553141640.001000", "type": "message", "user": "UH5FT99QU"}
,{"datetime": "2019-03-21T04:17:11Z", "name": "gowtham.mani", "real_name": "Gowtham M", "subtype": "channel_join", "text": "<@UH5FUC5C4> has joined the channel", "ts": "1553141831.001200", "type": "message", "user": "UH5FUC5C4"}
,{"datetime": "2019-03-21T04:18:03Z", "name": "devi.perinbaraj", "real_name": "Devi", "subtype": "channel_join", "text": "<@UH5GX7LR0> has joined the channel", "ts": "1553141883.001400", "type": "message", "user": "UH5GX7LR0"}
,{"datetime": "2019-03-21T04:22:14Z", "name": "kavinprasath.g", "real_name": "Kavin Prasath G", "subtype": "channel_join", "text": "<@UH5FW4EVA> has joined the channel", "ts": "1553142134.001900", "type": "message", "user": "UH5FW4EVA"}
,{"attachments": [{"fallback": "www.javatpoint.com: Interface in Java - Javatpoint", "from_url": "https://www.javatpoint.com/interface-in-java", "id": 1, "original_url": "https://www.javatpoint.com/interface-in-java", "service_name": "www.javatpoint.com", "text": "Interface in Java, why use interface with examples and marker/tagged java interface with difference between abstract class and java interface, understanding relationship between class and interfaces, java interface example,what is marker in java, tagged interface in java.", "title": "Interface in Java - Javatpoint", "title_link": "https://www.javatpoint.com/interface-in-java"}], "client_msg_id": "e4e93411-d783-4e19-b98c-a9bf11d0c8b0", "datetime": "2019-03-21T05:12:26Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.javatpoint.com/interface-in-java>", "ts": "1553145146.002100", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "www.javatpoint.com: Java Nested Interface - javatpoint", "from_url": "https://www.javatpoint.com/nested-interface", "id": 1, "original_url": "https://www.javatpoint.com/nested-interface", "service_name": "www.javatpoint.com", "text": "An interface which is declared within another interface or class is known as nested interface. The nested interfaces are used to group related interfaces so that they can be easy to maintain. The nested interface must be referred by the outer interface or class. It can't be accessed directly.", "title": "Java Nested Interface - javatpoint", "title_link": "https://www.javatpoint.com/nested-interface"}], "client_msg_id": "da8c3dae-a00a-4f6c-a981-d36c8ae0c2e5", "datetime": "2019-03-21T05:12:46Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.javatpoint.com/nested-interface>", "ts": "1553145166.002400", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "Can we define a class inside a Java interface", "from_url": "https://www.tutorialspoint.com/Can-we-define-a-class-inside-a-Java-interface", "id": 1, "original_url": "https://www.tutorialspoint.com/Can-we-define-a-class-inside-a-Java-interface", "service_icon": "https://www.tutorialspoint.com/favicon.ico", "service_name": "tutorialspoint.com", "text": "Can we define a class inside a Java interface - Yes you can define a class inside an interface In general if the methods of the interface use this class and if we are not using it anywhere else we will declare a class within an interface Exampleinterface Library void issueBook Book b voi...", "thumb_height": 96, "thumb_url": "https://www.tutorialspoint.com/scripts/img/logo-footer.png", "thumb_width": 100, "title": "Can we define a class inside a Java interface", "title_link": "https://www.tutorialspoint.com/Can-we-define-a-class-inside-a-Java-interface"}], "client_msg_id": "9454099b-737f-47e5-b037-7c68ee3aea8b", "datetime": "2019-03-21T05:12:57Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.tutorialspoint.com/Can-we-define-a-class-inside-a-Java-interface>", "ts": "1553145177.002700", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "www.javatpoint.com: Java 8 Default Methods - javatpoint", "from_url": "https://www.javatpoint.com/java-default-methods", "id": 1, "original_url": "https://www.javatpoint.com/java-default-methods", "service_name": "www.javatpoint.com", "text": "Java 8 Default Methods with examples and topics on functional interface, anonymous class, lambda for list, lambda for comparable, default methods, method reference, java date and time, java nashorn, java optional, stream, filter etc.", "title": "Java 8 Default Methods - javatpoint", "title_link": "https://www.javatpoint.com/java-default-methods"}], "client_msg_id": "0109945e-4578-424f-8261-078dbb6c89e9", "datetime": "2019-03-21T05:17:36Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.javatpoint.com/java-default-methods>", "ts": "1553145456.003000", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "www.javatpoint.com: Java 9 Interface Private Methods - javatpoint", "from_url": "https://www.javatpoint.com/java-9-interface-private-methods", "id": 1, "original_url": "https://www.javatpoint.com/java-9-interface-private-methods", "service_name": "www.javatpoint.com", "text": "Java 9 Interface Private Methods with examples and topics on functional interface, anonymous class, lambda for list, lambda for comparable, default methods, method reference, java date and time, java nashorn, java optional, stream, filter etc.", "title": "Java 9 Interface Private Methods - javatpoint", "title_link": "https://www.javatpoint.com/java-9-interface-private-methods"}], "client_msg_id": "a0a3946a-f53d-4dae-91dd-33aa4e047556", "datetime": "2019-03-21T05:31:17Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.javatpoint.com/java-9-interface-private-methods>", "ts": "1553146277.003300", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "bbcc94a0-8c69-4d16-9e28-50ed4ce995e3", "datetime": "2019-03-22T03:27:56Z", "name": "gowtham.mani", "real_name": "Gowtham M", "team": "TD1J2QS86", "text": "interface behaviour{\n    void user();\n    void name();\n    void details();\n    void location();\n}\nabstract class Good implements behaviour{\n\n     Good(){\n     System.out.println(\"ABstract constructor\");\n    }\n    public void name(){\n        System.out.println(\"Gowtham\");\n    }\n}\nclass Bad extends Good{\n    int x;\n    Bad(){\n        //super();\n        System.out.println(\"Bad constructor\");\n    }\n    Bad(int x){\n        this();\n        System.out.println(\"parameterized bad constructor\");\n    }\n    public void user(){\n        System.out.println(\"Good\");\n    }\n\n    public void details(){\n        System.out.println(\"Active\");\n    }\n    public void location(){\n        System.out.println(\"Coimbatore\");\n    }\n}\nclass Test5{\n    public static void main(String[] args){\n    Bad ob=new Bad(5);\n    ob.user();\n    ob.name();\n    ob.details();\n    ob.location();\n    }\n}", "ts": "1553225276.000100", "type": "message", "user": "UH5FUC5C4"}
,{"attachments": [{"fallback": "www.javatpoint.com: Java Inner Class  - javatpoint", "from_url": "https://www.javatpoint.com/java-inner-class", "id": 1, "original_url": "https://www.javatpoint.com/java-inner-class", "service_name": "www.javatpoint.com", "text": "Java inner class or nested class with member inner class, anonymous inner class, local inner class and java static nested class.", "title": "Java Inner Class  - javatpoint", "title_link": "https://www.javatpoint.com/java-inner-class"}], "client_msg_id": "63cb80f5-78b5-487c-8ada-a618863de7cd", "datetime": "2019-03-25T04:00:08Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.javatpoint.com/java-inner-class>", "ts": "1553486408.000200", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "www.tutorialspoint.com: Java Inner classes", "from_url": "https://www.tutorialspoint.com/java/java_innerclasses.htm", "id": 1, "original_url": "https://www.tutorialspoint.com/java/java_innerclasses.htm", "service_icon": "https://www.tutorialspoint.com/favicon.ico", "service_name": "www.tutorialspoint.com", "text": "Java Inner classes - Learn Java in simple and easy steps starting from basic to advanced concepts with examples including Java Syntax Object Oriented Language, Methods, Overriding, Inheritance, Polymorphism, Interfaces, Packages, Collections, Networking, Multithreading, Generics, Multimedia, Serialization, GUI.", "title": "Java Inner classes", "title_link": "https://www.tutorialspoint.com/java/java_innerclasses.htm"}], "client_msg_id": "7026bf20-a7d6-4367-a872-a2412b25f0ac", "datetime": "2019-03-25T04:00:15Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.tutorialspoint.com/java/java_innerclasses.htm>", "ts": "1553486415.000600", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "439x244px image", "from_url": "https://topjavatutorial.com/wp-content/uploads/2016/02/Java-inner-class-definitions.png", "id": 1, "image_bytes": 90040, "image_height": 244, "image_url": "https://topjavatutorial.com/wp-content/uploads/2016/02/Java-inner-class-definitions.png", "image_width": 439, "original_url": "https://topjavatutorial.com/wp-content/uploads/2016/02/Java-inner-class-definitions.png"}], "client_msg_id": "3bf2876c-473c-46a4-a32f-5dbdc7eddff0", "datetime": "2019-03-25T04:00:47Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://topjavatutorial.com/wp-content/uploads/2016/02/Java-inner-class-definitions.png>", "ts": "1553486447.000900", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "Learn Programming Language Step By Step: Java nested class overview - Java Tutorials - c4learn.com", "from_url": "http://www.c4learn.com/java/java-nested-class-overview/", "id": 1, "image_bytes": 52652, "image_height": 250, "image_url": "http://pics.c4learn.com/2013/10/Types-of-Nested-Classes.png", "image_width": 503, "original_url": "http://www.c4learn.com/java/java-nested-class-overview/", "service_icon": "http://www.c4learn.com/tutorials/wp-content/themes/porto/porto/images/logo/favicon.ico", "service_name": "Learn Programming Language Step By Step", "text": "When we declares a class within the body of another class or interface then class is called as nested class. Three types of inner classes \u2013 There are two types of nested classes \u00a0: static inner classes and non-static nested classes. Non-static nested classes are called inner classes. Three Types of the Inner Classes are \u2026", "title": "Java nested class overview - Java Tutorials - c4learn.com", "title_link": "http://www.c4learn.com/java/java-nested-class-overview/", "ts": 1381565427}], "client_msg_id": "28bd5f05-c98d-499a-be9e-5ea6d4fc1aee", "datetime": "2019-03-25T04:01:08Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<http://www.c4learn.com/java/java-nested-class-overview/>", "ts": "1553486468.001200", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "bb828da1-bce7-4fe9-af3e-8db4d971eaf8", "datetime": "2019-03-25T04:20:01Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "Why can't we instantiate an interface or an abstract class in java?", "ts": "1553487601.001500", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "www.javatpoint.com: Java Array - Javatpoint", "from_url": "https://www.javatpoint.com/array-in-java", "id": 1, "original_url": "https://www.javatpoint.com/array-in-java", "service_name": "www.javatpoint.com", "text": "Java array or array in java with single dimensional and multidimensional array with examples and copying array, array length, passing array to method in java and so forth.", "title": "Java Array - Javatpoint", "title_link": "https://www.javatpoint.com/array-in-java"}], "client_msg_id": "aecf3262-27aa-44fb-8fee-219862b77896", "datetime": "2019-03-26T04:12:35Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.javatpoint.com/array-in-java>", "ts": "1553573555.000200", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "a80b7f7c-fbe9-47d7-b739-b2a0ad259e83", "datetime": "2019-03-26T09:20:51Z", "name": "gowtham.mani", "real_name": "Gowtham M", "team": "TD1J2QS86", "text": "/**\n * StringArray\n */\nimport java.util.Scanner;\n\npublic class StringArray {\n\n    // static String a[]={\"Bike\",\"Car\",\"pulsar\",\"R15\"};\n    static String a[] = new String[2];\n    // a[0]=\"Bike\";\n\n    public static void main(String[] args) {\n        selectOptions();\n        // create();\n        // display();\n        // getOne();\n        // update();\n        // display();\n        // remove();\n        // display();\n    }\n\n    static void selectOptions() {\n        System.out.println(\"Select Options\");\n        System.out.println(\"1.Create\\t2.Display\\t3.Getone\\t4.Update\\t5.Remove\");\n        System.out.println(\"Select Your Option\");\n        Scanner scan = new Scanner(<http://System.in|System.in>);\n        int myOption = scan.nextInt();\n        switch (myOption) {\n        case 1:\n            create();\n            selectOptions();\n            break;\n        case 2:\n            display();\n            selectOptions();\n            break;\n        case 3:\n            getOne();\n            selectOptions();\n            break;\n        case 4:\n            update();\n            selectOptions();\n            break;\n        case 5:\n            remove();\n            selectOptions();\n            break;\n        default:\n            selectOptions();\n            break;\n        }\n    }\n\n    static void getOne() {\n        System.out.println(\"getOne\");\n        System.out.println(\"Enter Name to find:\");\n        Scanner scan = new Scanner(<http://System.in|System.in>);\n        String findName = scan.nextLine();\n        for (String var : a) {\n            if (findName.equals(var)) {\n                System.out.println(findName);\n                break;\n            }\n        }\n    }\n\n    static void create() {\n        System.out.println(\"create\");\n        for (int i = 0; i &lt; a.length; i++) {\n            System.out.println(\"Enter name:\");\n            Scanner scan = new Scanner(<http://System.in|System.in>);\n            String inputName = scan.nextLine();\n            a[i] = inputName;\n        }\n\n    }\n\n    static void display() {\n        System.out.println(\"display\");\n        for (String var : a) {\n            System.out.println(var);\n        }\n    }\n\n    static void update() {\n        System.out.println(\"update\");\n        System.out.println(\"Enter Name to update:\");\n        Scanner scan = new Scanner(<http://System.in|System.in>);\n        String findName = scan.nextLine();\n        System.out.println(\"Enter New Name:\");\n        scan = new Scanner(<http://System.in|System.in>);\n        String updateName = scan.nextLine();\n        for (int i = 1; i &lt; a.length; i++) {\n            if (findName.equals(a[i])) {\n                a[i] = updateName;\n                break;\n            }\n        }\n    }\n\n    static void remove() {\n        System.out.println(\"Remove\");\n        System.out.println(\"Enter Name to Remove:\");\n        Scanner scan = new Scanner(<http://System.in|System.in>);\n        String findName = scan.nextLine();\n        for (int i = 0; i &lt; a.length; i++) {\n            if (findName.equals(a[i])) {\n                a[i] = \"\";\n                break;\n            }\n        }\n    }\n}", "ts": "1553592051.000500", "type": "message", "user": "UH5FUC5C4"}
,{"datetime": "2019-03-26T11:08:03Z", "display_as_bot": false, "files": [{"created": 1553598483, "display_as_bot": false, "edit_link": "https://kgisltraining.slack.com/files/UH5HZUYTC/FHA0K8RSQ/-.txt/edit", "editable": true, "external_type": "", "filetype": "text", "has_rich_preview": false, "id": "FHA0K8RSQ", "is_external": false, "is_public": true, "is_starred": false, "lines": 39, "lines_more": 34, "mimetype": "text/plain", "mode": "snippet", "name": "-.txt", "permalink": "https://kgisltraining.slack.com/files/UH5HZUYTC/FHA0K8RSQ/-.txt", "permalink_public": "https://slack-files.com/TD1J2QS86-FHA0K8RSQ-759508082b", "pretty_type": "Plain Text", "preview": "import java.util.Arrays;\n\n/**\n * FindMins\n */", "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>import java.util.Arrays;</pre></div>\n<div><pre></pre></div>\n<div><pre>/**</pre></div>\n<div><pre> * FindMins</pre></div>\n<div><pre> */</pre></div>\n</div>\n</div>\n", "preview_is_truncated": false, "public_url_shared": false, "size": 960, "timestamp": 1553598483, "title": "Untitled", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FHA0K8RSQ/-.txt", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FHA0K8RSQ/download/-.txt", "user": "UH5HZUYTC", "username": ""}], "name": "amirthavalli.r", "real_name": "Amirthavalli R", "text": "", "ts": "1553598483.000700", "type": "message", "upload": true, "user": "UH5HZUYTC"}
,{"client_msg_id": "469b4c3c-8ec2-4b45-a805-c7a27d967595", "datetime": "2019-03-26T12:11:56Z", "name": "ramya.a", "real_name": "Ramya Ayyanar", "team": "TD1J2QS86", "text": "public class ArrayMin {\n\n    public static void main(String[] args) {\n        int a[] = {  23,4, 43, 5,2, 54 };\n        int min = a[0];\n        int secondMin = a[0];\n        for (int i = 0; i &lt; a.length; i++) {\n\n            if (min &gt; a[i]) {\n                secondMin = min;\n                min = a[i];\n\n                // System.out.println(\"Min values:\" + min);\n            }\n            // secondMin=min;\n            else if (secondMin &gt; a[i]) {\n                secondMin = a[i];\n                // System.out.println(\"Min values:\" + secondMin);\n            }\n        }\n        System.out.println(\"Min: \" + min);\n        System.out.println(\"SecondMin: \" + secondMin);\n    }\n    // min(a);\n}", "ts": "1553602316.001100", "type": "message", "user": "UH5GTPK52"}
,{"client_msg_id": "ef961734-2c10-4f24-bcbb-b65e1b352fc2", "datetime": "2019-03-27T09:47:58Z", "name": "prabhakar.g", "real_name": "Prabhakar Ganesan", "team": "TD1J2QS86", "text": "<http://www.javawithus.com/tutorial/array-of-objects>", "ts": "1553680078.001500", "type": "message", "user": "UH5GSHZ9Q"}
,{"attachments": [{"fallback": "Java Array of Objects", "from_url": "http://www.tutorialdost.com/Java-Programming-Tutorial/15-Java-Array-of-Object.aspx", "id": 1, "original_url": "http://www.tutorialdost.com/Java-Programming-Tutorial/15-Java-Array-of-Object.aspx", "service_icon": "http://www.tutorialdost.com/images/favicon.ico", "service_name": "tutorialdost.com", "text": "An object is a variable of class type. As we know, an array is a collection of similar type, threrfore an array can be a collection of class type.", "title": "Java Array of Objects", "title_link": "http://www.tutorialdost.com/Java-Programming-Tutorial/15-Java-Array-of-Object.aspx"}], "client_msg_id": "396cf6b0-9410-40bf-bd7e-09f8466be7c1", "datetime": "2019-03-27T09:48:07Z", "name": "prabhakar.g", "real_name": "Prabhakar Ganesan", "team": "TD1J2QS86", "text": "<http://www.tutorialdost.com/Java-Programming-Tutorial/15-Java-Array-of-Object.aspx>", "ts": "1553680087.001700", "type": "message", "user": "UH5GSHZ9Q"}
,{"datetime": "2019-03-27T10:05:19Z", "display_as_bot": false, "files": [{"created": 1553681119, "display_as_bot": false, "edit_link": "https://kgisltraining.slack.com/files/UH5GSHZ9Q/FHBT7CZDK/-.txt/edit", "editable": true, "external_type": "", "filetype": "text", "has_rich_preview": false, "id": "FHBT7CZDK", "is_external": false, "is_public": true, "is_starred": false, "lines": 142, "lines_more": 137, "mimetype": "text/plain", "mode": "snippet", "name": "-.txt", "permalink": "https://kgisltraining.slack.com/files/UH5GSHZ9Q/FHBT7CZDK/-.txt", "permalink_public": "https://slack-files.com/TD1J2QS86-FHBT7CZDK-ee37e2aac5", "pretty_type": "Plain Text", "preview": "\n/**\n* StringArray\n*/\nimport java.util.Scanner;", "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre></pre></div>\n<div><pre>/**</pre></div>\n<div><pre>* StringArray</pre></div>\n<div><pre>*/</pre></div>\n<div><pre>import java.util.Scanner;</pre></div>\n</div>\n</div>\n", "preview_is_truncated": true, "public_url_shared": false, "size": 4063, "timestamp": 1553681119, "title": "Untitled", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FHBT7CZDK/-.txt", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FHBT7CZDK/download/-.txt", "user": "UH5GSHZ9Q", "username": ""}], "name": "prabhakar.g", "real_name": "Prabhakar Ganesan", "text": "", "ts": "1553681119.002400", "type": "message", "upload": true, "user": "UH5GSHZ9Q"}
,{"client_msg_id": "77390c60-f46a-42f6-8490-27f37b8980d4", "datetime": "2019-03-27T11:00:43Z", "name": "devi.perinbaraj", "real_name": "Devi", "team": "TD1J2QS86", "text": "import java.util.*;\nimport java.util.Scanner;\n\npublic class FinalAtm{\n    static int a[]={1001, 50000};\n    public static void main(String[] args){\n\n        selectoptions();\n\n    }\n\n    static void selectoptions(){\n        System.out.println(\"1.withdraw\\t2.updatepin\");\n        Scanner scan= new Scanner(<http://System.in|System.in>);\n        int myOption = scan.nextInt();\n        switch (myOption){\n            case 1:\n             withdraw();\n            selectoptions();\n              break;\n            case 2:\n            updatepin();\n            break;\n            default:\n            System.out.println(\"Retry\");\n            break;\n\n        }\n        scan.close();\n    }\n\n    static void updatepin(){\n        System.out.println(\"Enter old pin\");\n        Scanner scan1= new Scanner(<http://System.in|System.in>);\n        int oldPin = scan1.nextInt();\n        System.out.println(\"Enter New pin:\");\n        int newPin = scan1.nextInt();\n        for (int i = 0; i &lt; a.length; i++){\n        if(oldPin==(a[i])){\n            a[i]=newPin;\n        System.out.println(\"Success\");\n        selectoptions();\n        }}\n        scan1.close();\n\n\n    }\n    static void withdraw(){\n        System.out.println(\"Enter your pin\");\n        Scanner inp = new Scanner(<http://System.in|System.in>);\n        int pin= inp.nextInt();\n        for (int var : a) {\n            if (pin==var) {\n                System.out.println(\"Enter Amount\");\n                int wd = inp.nextInt();\n                int c = a[1] - wd;\n                System.out.println(\"Available balance Rs.\" + c);\n            }\n\n\n\n        }\n\n\n\n }\n}", "ts": "1553684443.002800", "type": "message", "user": "UH5GX7LR0"}
,{"client_msg_id": "fd595876-4beb-436a-a7ed-43e4cb1b9fce", "datetime": "2019-03-27T11:39:14Z", "name": "devi.perinbaraj", "real_name": "Devi", "team": "TD1J2QS86", "text": "public class Employee_Array {\npublic static void main(String[] args) {\n    Employee employees[]=new Employee[2];\n    for (Employee var : employees) {\n        System.out.println(var);\n    }\n    for(int i=0;i&lt;employees.length;i++){\n        employees[i]=new Employee();\n\n    }\n    for (Employee var : employees) {\n        System.out.println(var);\n    }\n    for(int i=0;i&lt;employees.length;i++){\n        employees[i]=new Employee(i,\"name\"+i);\n\n    }\n    for (Employee var : employees) {\n        System.out.println(var);\n    }\n\n}\n\n}", "ts": "1553686754.003000", "type": "message", "user": "UH5GX7LR0"}
,{"datetime": "2019-03-27T11:39:54Z", "display_as_bot": false, "files": [{"created": 1553686794, "display_as_bot": false, "edit_link": "https://kgisltraining.slack.com/files/UH6PEE5RA/FH2UJVDKK/atm_pgm.txt/edit", "editable": true, "external_type": "", "filetype": "text", "has_rich_preview": false, "id": "FH2UJVDKK", "is_external": false, "is_public": true, "is_starred": false, "lines": 156, "lines_more": 151, "mimetype": "text/plain", "mode": "snippet", "name": "ATM_PGM.txt", "permalink": "https://kgisltraining.slack.com/files/UH6PEE5RA/FH2UJVDKK/atm_pgm.txt", "permalink_public": "https://slack-files.com/TD1J2QS86-FH2UJVDKK-439564ef99", "pretty_type": "Plain Text", "preview": "//package com.logics;\n\nimport java.util.Scanner;\n\nclass Atmm {", "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>//package com.logics;</pre></div>\n<div><pre></pre></div>\n<div><pre>import java.util.Scanner;</pre></div>\n<div><pre></pre></div>\n<div><pre>class Atmm {</pre></div>\n</div>\n</div>\n", "preview_is_truncated": true, "public_url_shared": false, "size": 4231, "timestamp": 1553686794, "title": "ATM PGM", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FH2UJVDKK/atm_pgm.txt", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FH2UJVDKK/download/atm_pgm.txt", "user": "UH6PEE5RA", "username": ""}], "name": "hajashariff.a", "real_name": "Haja Shariff A", "text": "", "ts": "1553686794.003100", "type": "message", "upload": true, "user": "UH6PEE5RA"}
,{"client_msg_id": "5ffb63fd-f056-4bbb-911f-39d97b9b33e5", "datetime": "2019-03-27T12:25:52Z", "name": "devi.perinbaraj", "real_name": "Devi", "team": "TD1J2QS86", "text": "import com.sun.xml.internal.bind.v2.runtime.RuntimeUtil.ToStringAdapter;\n\nclass Employee{\n    private int id;\n   private String name;\n   private String update;\n   Employee(int id ,String name,String update){\n       this.id=id;\n       this.name=name;\n       this.update=update;\n\n       }\n       Employee(){\n\n       }\n\n/**\n * @return the name\n */\npublic String getName() {\n\treturn name;\n}\n/**\n * @param name the name to set\n */\npublic void setName(String name) {\n\tthis.name = name;\n}\n/**\n * @return the id\n */\npublic int getId() {\n\treturn id;\n}\n/**\n * @param id the id to set\n */\npublic void setId(int id) {\n\tthis.id = id;\n}\n//@Override\npublic String toString() {\n    return id +\" \"+ name;\n}\n/**\n * @return the update\n */\npublic String getUpdate() {\n\n        return update;\n}\n/**\n * @param update the update to set\n */\npublic void setUpdate(int update) {\n\tthis.update = update;\n}\n\n}", "ts": "1553689552.003500", "type": "message", "user": "UH5GX7LR0"}
,{"attachments": [{"fallback": "www.tutorialspoint.com: Java.util.Arrays Class", "from_url": "https://www.tutorialspoint.com/java/util/java_util_arrays.htm", "id": 1, "original_url": "https://www.tutorialspoint.com/java/util/java_util_arrays.htm", "service_icon": "https://www.tutorialspoint.com/favicon.ico", "service_name": "www.tutorialspoint.com", "text": "Java.util.Arrays Class - Learning Java.util Packages in simple and easy steps : A beginner's tutorial containing complete knowledge of all the classes, interfaces, enumerations and exceptions have been explained with examples for beginners to advanced java programmers.", "title": "Java.util.Arrays Class", "title_link": "https://www.tutorialspoint.com/java/util/java_util_arrays.htm"}], "client_msg_id": "da31bee7-b247-43d0-aa9c-55385d9f3564", "datetime": "2019-03-28T06:25:53Z", "name": "prabhakar.g", "real_name": "Prabhakar Ganesan", "team": "TD1J2QS86", "text": "<https://www.tutorialspoint.com/java/util/java_util_arrays.htm>", "ts": "1553754353.000200", "type": "message", "user": "UH5GSHZ9Q"}
,{"datetime": "2019-03-28T06:55:20Z", "display_as_bot": false, "files": [{"created": 1553756120, "display_as_bot": false, "edit_link": "https://kgisltraining.slack.com/files/UH5GSHZ9Q/FHDAPHQVB/-.txt/edit", "editable": true, "external_type": "", "filetype": "text", "has_rich_preview": false, "id": "FHDAPHQVB", "is_external": false, "is_public": true, "is_starred": false, "lines": 41, "lines_more": 36, "mimetype": "text/plain", "mode": "snippet", "name": "-.txt", "permalink": "https://kgisltraining.slack.com/files/UH5GSHZ9Q/FHDAPHQVB/-.txt", "permalink_public": "https://slack-files.com/TD1J2QS86-FHDAPHQVB-d5fe4770e2", "pretty_type": "Plain Text", "preview": "import java.util.Arrays;\n\n/**\n * ArrayClass\n */", "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>import java.util.Arrays;</pre></div>\n<div><pre></pre></div>\n<div><pre>/**</pre></div>\n<div><pre> * ArrayClass</pre></div>\n<div><pre> */</pre></div>\n</div>\n</div>\n", "preview_is_truncated": true, "public_url_shared": false, "size": 1316, "timestamp": 1553756120, "title": "Untitled", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FHDAPHQVB/-.txt", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FHDAPHQVB/download/-.txt", "user": "UH5GSHZ9Q", "username": ""}], "name": "prabhakar.g", "real_name": "Prabhakar Ganesan", "text": "", "ts": "1553756120.000400", "type": "message", "upload": true, "user": "UH5GSHZ9Q"}
,{"datetime": "2019-03-28T09:01:40Z", "name": "swetha.m", "real_name": "Swetha Muralidharan", "subtype": "channel_join", "text": "<@UHE66045V> has joined the channel", "ts": "1553763700.000800", "type": "message", "user": "UHE66045V"}
,{"client_msg_id": "21137618-f7dd-48ca-85c2-17a944be8ff8", "datetime": "2019-03-29T04:01:38Z", "display_as_bot": null, "files": [{"id": "FHEETDEMS", "mode": "hidden_by_limit"}], "name": "sanjeevi.p", "real_name": "sanjeevi", "text": "", "ts": "1553832098.000900", "type": "message", "upload": true, "user": "UH5DG3BA7"}
,{"attachments": [{"fallback": "dzone.com: Top 10 Methods for Java Arrays - DZone Java", "from_url": "https://dzone.com/articles/top-10-methods-java-arrays", "id": 1, "image_bytes": 21577, "image_height": 230, "image_url": "https://dzone.com/themes/dz20/images/ArticleImg_1.jpg", "image_width": 370, "original_url": "https://dzone.com/articles/top-10-methods-java-arrays", "service_icon": "https://dzone.com/themes/dz20/images/favicon.png", "service_name": "dzone.com", "text": "The following are top 10 methods for Java Array. They are the most voted questions from stackoverflow. 0. Decalre an array String[] aArray = new String[5];...", "title": "Top 10 Methods for Java Arrays - DZone Java", "title_link": "https://dzone.com/articles/top-10-methods-java-arrays"}], "client_msg_id": "1f484df2-1f52-4a81-a2cd-674b7dd3ce79", "datetime": "2019-04-01T09:35:50Z", "name": "sasikumar.b", "real_name": "Sasikumar.b", "team": "TD1J2QS86", "text": "<https://dzone.com/articles/top-10-methods-java-arrays>", "ts": "1554111350.000200", "type": "message", "user": "UGX13S9GR"}
,{"client_msg_id": "8aae33f2-65e6-4f0d-982a-6e06af828e0b", "datetime": "2019-04-01T09:35:57Z", "name": "sasikumar.b", "real_name": "Sasikumar.b", "team": "TD1J2QS86", "text": "<https://mvnrepository.com/artifact/org.apache.commons/commons-lang3/3.8.1>", "ts": "1554111357.000500", "type": "message", "user": "UGX13S9GR"}
,{"client_msg_id": "570138dd-0630-42cc-9a11-e65f673f2109", "datetime": "2019-04-01T09:37:39Z", "display_as_bot": false, "files": [{"created": 1554111459, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "xml", "has_rich_preview": false, "id": "FH8DVQEU9", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "text/plain", "mode": "hosted", "name": "settings.xml", "permalink": "https://kgisltraining.slack.com/files/UGX13S9GR/FH8DVQEU9/settings.xml", "permalink_public": "https://slack-files.com/TD1J2QS86-FH8DVQEU9-ca7a4b4f95", "pretty_type": "XML", "public_url_shared": false, "size": 3449, "timestamp": 1554111459, "title": "settings.xml", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FH8DVQEU9/settings.xml", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FH8DVQEU9/download/settings.xml", "user": "UGX13S9GR", "username": ""}], "name": "sasikumar.b", "real_name": "Sasikumar.b", "text": "", "ts": "1554111459.000800", "type": "message", "upload": true, "user": "UGX13S9GR"}
,{"client_msg_id": "1848c4e0-add1-4f3e-8f8c-23160fcd6923", "datetime": "2019-04-02T04:09:34Z", "name": "prabhakar.g", "real_name": "Prabhakar Ganesan", "team": "TD1J2QS86", "text": "Good Morning", "ts": "1554178174.000200", "type": "message", "user": "UH5GSHZ9Q"}
,{"client_msg_id": "d0e1b9c8-53f9-4d9c-b181-74d73d101e20", "datetime": "2019-04-02T04:09:39Z", "name": "prabhakar.g", "real_name": "Prabhakar Ganesan", "team": "TD1J2QS86", "text": "package com.kgisl.qs1;\n\nimport java.util.Arrays;\n\nimport org.apache.commons.lang3.ArrayUtils;\n\n/**\n * Hello world!\n *\n */\npublic class App {\n    // static String[] names = new String[2];\n    static String[] names ={\"element0\",\"element1\"};\n    public static void main(String[] args) {\n        displayNames();\n        displayOneName();\n        updateName();\n        deleteName();\n    }\n\n    static void create() {\n        System.out.println(\"create\");\n    }\n\n    static void displayNames() {\n        System.out.println(\"displayNames\");\n        System.out.println(ArrayUtils.toString(names));\n    }\n\n    static void displayOneName() {\n        System.out.println(\"displayOneName\");\n        String findName = \"element0\";\n        // System.out.println(ArrayUtils.indexOf(names, findName));\n        System.out.println(names[ArrayUtils.indexOf(names, findName)]);\n    }\n\n    static void updateName() {\n        System.out.println(\"updateName\");\n        String findName = \"element0\";\n        String updateName = \"element0000\";\n        //System.out.println(ArrayUtils.indexOf(names, findName));\n        names[ArrayUtils.indexOf(names, findName)] = updateName;\n        displayNames();\n    }\n\n    static void deleteName() {\n        System.out.println(\"deleteName\");\n        String findName = \"element0000\";\n        // String[] newArray = ArrayUtils.remove(names, ArrayUtils.indexOf(names, findName));\n        // System.out.println(ArrayUtils.toString(newArray));\n        String[] newArray=ArrayUtils.removeElement(names, findName);\n        System.out.println(ArrayUtils.toString(newArray));\n    }\n}", "ts": "1554178179.000400", "type": "message", "user": "UH5GSHZ9Q"}
,{"client_msg_id": "e08897b4-aa79-48fe-9cc4-48e2b13d7bb6", "datetime": "2019-04-04T11:35:48Z", "name": "giriprasath.j", "real_name": "Giriprasath J", "team": "TD1J2QS86", "text": "package com.kgisl.javaarraylist;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\n/**\n * Hello world!\n *\n */\npublic class App {\n    static ArrayList&lt;String&gt; names = new ArrayList&lt;String&gt;();\n    static ArrayList&lt;String&gt; names1 = new ArrayList&lt;String&gt;();\n    static String name1 = \"Devi\";\n    static String name2 = \"Kavin\";\n\n    public static void main(String[] args) {\n        create();\n        display();\n        getName();\n        removeif();\n        // removeNameInLastIndex();\n        // removeName();\n        updateName();\n        // display();\n        toarray();\n        toarrayAsType();\n        arrayClone();\n        arrayContains();\n        clearAll();\n    }\n\n    static void create() {\n        // names.ensureCapacity(3);\n        System.out.println(names.isEmpty());\n        names.add(\"Giri\");\n        names.add(\"Sasi\");\n        names.add(\"Kannan\");\n        names.add(\"Sasi\");\n        names.add(\"Gowtham\");\n        names.add(\"Sasi\");\n\n        names1.add(name1);\n        names1.add(name2);\n\n        names.addAll(names1);\n\n    }\n\n    static void display() {\n        System.out.println(names);\n    }\n\n    static void getName() {\n        String findName = \"Sasi\";\n        int findNameIdx = names.indexOf(findName);\n        System.out.println(names.get(findNameIdx));\n    }\n\n    static void removeName() {\n        String findName = \"Sasi\";\n        int findNameIdx = names.indexOf(findName);\n        names.remove(findNameIdx);\n        System.out.println(names);\n    }\n\n    static void removeNameInLastIndex() {\n        String findName = \"Sasi\";\n        int findNameIdx = names.lastIndexOf(findName);\n        names.remove(findNameIdx);\n        System.out.println(names);\n    }\n\n    static void updateName() {\n        String findName = \"Kannan\";\n        String updateName = \"Kannan R\";\n        int findNameIdx = names.indexOf(findName);\n        names.set(findNameIdx, updateName);\n        System.out.println(names);\n    }\n\n    static void toarray() {\n        System.out.println(\"******** toArray ********\");\n        Object[] arr = names.toArray();\n        System.out.println(Arrays.toString(arr));\n    }\n\n    static void toarrayAsType() {\n        System.out.println(\"******** toarrayAsType ********\");\n        String[] myArray = names.toArray(new String[0]);\n        // String[] arr = (String)names.toArray();\n        System.out.println(Arrays.toString(myArray));\n    }\n\n    static void arrayClone() {\n        System.out.println(\"******** arrayClone ********\");\n        Object arrayClone = names.clone();\n        System.out.println(arrayClone.toString());\n    }\n\n    static void arrayContains() {\n        String findName = \"Sasi 1\";\n        System.out.println(names.contains(findName));\n    }\n\n    static void removeif(){\n        System.out.println(\"******** removeif ********\");\n        names.removeIf( x -&gt; x == \"Sasi\" );\n        System.out.println(names);\n    }\n\n    // static void removeRange(){\n    //     System.out.println(\"******** removeRange ********\");\n    //     // names.removeRange(1, 4);\n    //     // System.out.println(names);\n    //     List&lt;Integer&gt; al = new ArrayList&lt;Integer&gt;();\n    //     al.add(10);\n    //     al.add(20);\n    //     al.add(30);\n    //     al.add(1);\n    //     al.add(2);\n    //     al.removeRange(1, 4);\n    // }\n\n    static void clearAll() {\n        System.out.println(names.isEmpty());\n        names.clear();\n        System.out.println(names.isEmpty());\n    }\n\n}", "ts": "1554377748.000400", "type": "message", "user": "UHL7N6QQN"}
,{"client_msg_id": "c7ae21a2-3cf7-4f33-94e6-d5d6ac22378b", "datetime": "2019-04-04T12:36:18Z", "name": "kannan.r", "real_name": "kannan Ramakrishnan", "team": "TD1J2QS86", "text": "package com.kgisl.pgm;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class App\n{ public static void main( String[] args ){\n\n    ArrayList&lt;String&gt;  al = new ArrayList&lt;String&gt;();\n    al.add(\"kannan\");\n    al.add(\"nivi\");\n    al.add(\"ramya\");\n\n    Collections.sort(al);\n    System.out.println(\"sorting A 2 z\"+al);\n     Collections.sort(al,Collections.reverseOrder()); //reverseOrder\n    System.out.println(\"reverseOrder\"+al);\n\n}}", "ts": "1554381378.001000", "type": "message", "user": "UHN5D2Q92"}
,{"client_msg_id": "e30eefda-8891-4bfd-97b1-287bb463c2b3", "datetime": "2019-04-04T13:04:58Z", "name": "kannan.r", "real_name": "kannan Ramakrishnan", "team": "TD1J2QS86", "text": "package com.kgisl.pgm;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class App\n{ public static void main( String[] args ){\n\n    ArrayList&lt;String&gt;  al = new ArrayList&lt;String&gt;();\n    al.add(\"kannan\");\n    al.add(\"nivi\");\n    al.add(\"ramya\");\n    al.add(\"mahi\");\n    al.add(\"nidhya\");\n    al.add(\"mohana\");\n\n    System.out.println(al);\n     ArrayList &lt;String&gt; sb =new ArrayList&lt;String&gt;();\n\n     System.out.println(al.subList(2,4 ));\n     //hear 2is start value and upto 4 index\n     System.out.println(al.subList(5,6 ));\n}}", "ts": "1554383098.001200", "type": "message", "user": "UHN5D2Q92"}
,{"client_msg_id": "1e826ecb-d1a2-48ff-9a72-6ab10b514d39", "datetime": "2019-04-05T06:05:30Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "1. Write a C# Sharp program that takes a number and a width also a number, as input and then displays a triangle of that width, using that number. \nTest Data\nEnter a number: 6 \nEnter the desired width: 6 \nExpected Output :\n\n666666                                                      \n66666                                                           \n6666                                                                  \n666                                                        \n66                                                                  \n6 \n\n2. Write a C# Sharp program that takes two numbers as input and perform an operation (+,-,*,x,/) on them and displays the result of that operation. \n\nTest Data\nInput first number: 20\nInput operation: - \nInput second number: 12\nExpected Output :\n20 - 12 = 8\n\n3. Write a C# Sharp program to find the largest of three numbers. \nTest Data :\nInput the 1st number :25 \nInput the 2nd number :63 \nInput the 3rd number :10 \nExpected Output :\nThe 2nd Number is the greatest among three\n\n4. Write a C# Sharp program to find the eligibility of admission for a professional course based on the following criteria: \nMarks in Maths &gt;=65\nMarks in Phy &gt;=55\nMarks in Chem&gt;=50\nTotal in all three subject &gt;=180\nor\nTotal in Math and Subjects &gt;=140\n\nTest Data : \nInput the marks obtained in Physics :65 \nInput the marks obtained in Chemistry :51 \nInput the marks obtained in Mathematics :72\nExpected Output :\nThe candidate is eligible for admission.\n\n5. Write a program in C# Sharp which is a Menu-Driven Program to perform a simple calculation. \n\nTest Date and Expected Output \nEnter the first Integer :10 \nEnter the second Integer :2 \n\nHere are the options : \n1-Addition. \n2-Substraction. \n3-Multiplication. \n4-Division. \n5-Exit. \n\nInput your choice :3 \nThe Multiplication of 10 and 2 is: 20\n\n6. Write a program in C# Sharp to read n number of values in an array and display it in reverse order. \nTest Data : \nInput the number of elements to store in the array :3 \nInput 3 number of elements in the array : \nelement - 0 : 2 \nelement - 1 : 5 \nelement - 2 : 7 \nExpected Output: \nThe values store into the array are: \n2 5 7 \nThe values store into the array in reverse are : \n7 5 2\n\n7. Write a program in C# Sharp to find the sum of all elements of the array. \nTest Data : \nInput the number of elements to be stored in the array :3 \nInput 3 elements in the array : \nelement - 0 : 2 \nelement - 1 : 5 \nelement - 2 : 8 \nExpected Output : \nSum of all elements stored in the array is : 15\n\n8. Write a program in C# Sharp to count the frequency of each element of an array. \nTest Data : \nInput the number of elements to be stored in the array :3 \nInput 3 elements in the array : \nelement - 0 : 25 \nelement - 1 : 12 \nelement - 2 : 43 \nExpected Output : \nFrequency of all elements of array : \n25 occurs 1 times \n12 occurs 1 times \n43 occurs 1 times\n\n9. Write a program in C# Sharp to find maximum and minimum element in an array. \nTest Data : \nInput the number of elements to be stored in the array :3 \nInput 3 elements in the array : \nelement - 0 : 45 \nelement - 1 : 25 \nelement - 2 : 21 \nExpected Output : \nMaximum element is : 45 \nMinimum element is : 21\n\n10. Write a program in C# Sharp to sort elements of the array in descending order. \nTest Data : \nInput the size of array : 3 \nInput 3 elements in the array : \nelement - 0 : 5 \nelement - 1 : 9 \nelement - 2 : 1\nExpected Output : \nElements of the array in sorted descending order: \n9 5 1\n\n11. Write a program in C# Sharp to delete an element at desired position from an array. \nTest Data : \nInput the size of array : 5 \nInput 5 elements in the array in ascending order: \nelement - 0 : 1 \nelement - 1 : 2 \nelement - 2 : 3 \nelement - 3 : 4 \nelement - 4 : 5 \nInput the position where to delete: 3 \nExpected Output : \nThe new list is : 1 2 4 5\n\n12. Write a program in C# Sharp to find the second largest element in an array. \nTest Data : \nInput the size of array : 5 \nInput 5 elements in the array : ", "ts": "1554444330.001000", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "1e826ecb-d1a2-48ff-9a72-6ab10b514d39", "datetime": "2019-04-05T06:05:30Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "element - 0 : 2 \nelement - 1 : 9 \nelement - 2 : 1 \nelement - 3 : 4 \nelement - 4 : 6 \nExpected Output : \nThe Second largest element in the array is: 6", "ts": "1554444330.001100", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "9ba7e72c-8c7d-4778-8256-57b708f6b397", "datetime": "2019-04-05T11:27:55Z", "name": "prabhakar.g", "real_name": "Prabhakar Ganesan", "team": "TD1J2QS86", "text": "package com.kgisl.ex3;\n\nimport java.lang.reflect.Field;\nimport java.util.ArrayList;\npublic class Test {\n\n    public static void main(String[] args) throws Exception {\n        ArrayList&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;(5);\n        for (int i = 0; i &lt; 10; i++) {\n            list.add(i);\n            System.out.format(\"Size: %2d, Capacity: %2d%n\",\n                              list.size(), getCapacity(list));\n        }\n    }\n\n    static int getCapacity(ArrayList&lt;Integer&gt; list) throws Exception {\n        // Field x = Student1.class.getDeclaredField(\"rollno\");\n        Field d = ArrayList.class.getDeclaredField(\"elementData\");\n        d.setAccessible(true);\n        return ((Object[]) d.get(list)).length;\n    }\n}", "ts": "1554463675.002000", "type": "message", "user": "UH5GSHZ9Q"}
,{"client_msg_id": "6401894e-9817-46e3-991b-d1e58c15bb62", "datetime": "2019-04-08T08:49:28Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "package com.kgisl.qs1;\n\npublic class Student {\n    private int rollno;\n    private String name;\n\n    Student(int rollno, String name) {\n        this.rollno = rollno;\n        this.name = name;\n    }\n\n    /**\n     * @return the name\n     */\n    public String getName() {\n        return name;\n    }\n\n    /**\n     * @param name the name to set\n     */\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    /**\n     * @return the rollno\n     */\n    public int getRollno() {\n        return rollno;\n    }\n\n    /**\n     * @param rollno the rollno to set\n     */\n    public void setRollno(int rollno) {\n        this.rollno = rollno;\n    }\n\n    @Override\n    public String toString() {\n        return \"rollno:\" + rollno + \" name:\" + name;\n    }\n}", "ts": "1554713368.000400", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "8c787064-8220-48c1-ada5-af7a3caea969", "datetime": "2019-04-08T08:49:39Z", "is_starred": true, "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "package com.kgisl.qs1;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class StudentDemo {\n    public static ArrayList&lt;Student&gt; studentList = new ArrayList&lt;Student&gt;();\n    static Student newStudent=new Student(502, \"name\");\n    static Student updateStudent=new Student(502, \"updatename\");\n    public static void main(String[] args) {\n        StudentDemo s=new StudentDemo();\n        s.loadStudents();\n        s.getAllStudents();\n        s.getStudent(12);\n        s.newStudent(newStudent);\n        s.updateStudent(502,updateStudent);\n        s.removeStudent(101);\n    }\n\n    StudentDemo(){\n        loadStudents();\n    }\n\n    public void loadStudents() {\n        studentList.add(new Student(101, \"ramu\"));\n        studentList.add(new Student(12, \"Divya\"));\n        studentList.add(new Student(11, \"Janani\"));\n    }\n\n    public List&lt;Student&gt; getAllStudents() {\n        System.out.println(studentList);\n        return studentList;\n    }\n\n    public Student getStudent(int rollno) {\n        for (Student student : studentList) {\n            if (student.getRollno() == rollno) {\n                System.out.println(String.valueOf(student.getRollno())+student.getName());\n                return student;\n            }\n        }\n\n        return getStudent(0);\n\n    }\n\n    public void newStudent(Student student) {\n        studentList.add(newStudent);\n        getAllStudents();\n        System.out.println(studentList);\n    }\n\n    public void updateStudent(int rollno, Student updateStudent) {\n        for (Student student : studentList) {\n            if (student.getRollno() == rollno) {\n                System.out.println(studentList.indexOf(student));\n                studentList.set(studentList.indexOf(student),updateStudent);\n            }\n        }\n        getAllStudents();\n        System.out.println(studentList);\n    }\n\n    public void removeStudent(int rollno) {\n        for (Student student : studentList) {\n            if (student.getRollno() == rollno) {\n                System.out.println(studentList.indexOf(student));\n                studentList.remove(studentList.indexOf(student));\n            }\n            break;\n        }\n        getAllStudents();\n        System.out.println(studentList);\n    }\n\n}", "ts": "1554713379.000600", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "HowToDoInJava: JUnit Tutorial - HowToDoInJava", "from_url": "https://howtodoinjava.com/junit-4/", "id": 1, "original_url": "https://howtodoinjava.com/junit-4/", "service_icon": "https://cdn1.howtodoinjava.com/wp-content/uploads/2015/05/howtodoinjava_logo-55696c1cv1_site_icon-256x256.png", "service_name": "HowToDoInJava", "text": "JUnit is a unit testing framework for the Java programming language. This page lists down all junit tutorials on this website. This page will be updated in time to time, as a new post is published.", "thumb_height": 200, "thumb_url": "https://cdn1.howtodoinjava.com/wp-content/uploads/2015/04/howtodoinjava_logo-e1434552355773.png", "thumb_width": 200, "title": "JUnit Tutorial - HowToDoInJava", "title_link": "https://howtodoinjava.com/junit-4/"}], "client_msg_id": "2cc27609-52b4-430d-b1ce-68a7066c466f", "datetime": "2019-04-09T06:32:01Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://howtodoinjava.com/junit-4/>", "ts": "1554791521.000700", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "d305cd04-a91b-4e81-b58e-5bd1d87e96fc", "datetime": "2019-04-09T10:02:16Z", "is_starred": true, "name": "sasikumar.b", "real_name": "Sasikumar.b", "team": "TD1J2QS86", "text": "package com.kgisl.qs1;\n\n/**\n * Calculator\n */\npublic class Calculator {\n\n    public int add(int x, int y) {\n        return x + y;\n    }\n    public int sub(int x, int y) {\n        return x - y;\n    }\n    public int mul(int x, int y) {\n        return x * y;\n    }\n    public int div(int x, int y) {\n        return x / y;\n    }\n}\n\n\npackage com.kgisl.qs1;\n\nimport static org.junit.Assert.assertEquals;\n\nimport org.junit.Test;\n\n/**\n * CalculatorTest\n */\npublic class CalculatorTest {\n    Calculator c = new Calculator();\n\n    @Test\n    public void addTest() {\n        int actual=c.add(10, 20);\n        int expected=30;\n        assertEquals(expected, actual);\n    }\n\n    @Test\n    public void subTest() {\n        int actual=c.sub(10, 20);\n        int expected=-10;\n        assertEquals(expected, actual);\n    }\n\n    @Test\n    public void mulTest() {\n        int actual=c.mul(10, 20);\n        int expected=200;\n        assertEquals(expected, actual);\n    }\n\n    @Test\n    public void divTest() {\n        int actual=c.div(100, 20);\n        int expected=5;\n        assertEquals(expected, actual);\n    }\n}\n\n\npackage com.kgisl.qs1;\n\nimport static org.junit.Assert.assertEquals;\n\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.List;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.junit.runners.Parameterized;\nimport org.junit.runners.Parameterized.Parameters;\n\n/**\n * CalculatorTest\n */\n@RunWith(Parameterized.class)\npublic class CalculatorParamsTest {\n    private int fn;\n    private int sn;\n\n    Calculator c = new Calculator();\n\n    public CalculatorParamsTest(int fn, int sn) {\n        this.fn = fn;\n        <http://this.sn|this.sn> = sn;\n    }\n\n    @Parameters\n    public static Collection input() {\n\n        return Arrays.asList(new Object[][] { { 10, 20 }, { 30, 40 } });\n    }\n\n    @Test\n    public void addTest() {\n        int actual = c.add(fn, sn);\n        int expected = fn + sn;\n        assertEquals(expected, actual);\n    }\n\n    @Test\n    public void subTest() {\n        int actual = c.sub(fn, sn);\n        int expected = fn - sn;\n        assertEquals(expected, actual);\n    }\n\n    @Test\n    public void mulTest() {\n        int actual = c.mul(fn, sn);\n        int expected = fn * sn;\n        assertEquals(expected, actual);\n    }\n\n    @Test\n    public void divTest() {\n        // int actual = c.div(fn, sn);\n        // int expected = fn/sn;\n        // assertEquals(expected, actual);\n        System.out.println(fn);\n        System.out.println(sn);\n        int actual = c.div(fn, sn);\n        int expected = 10 / 20;\n        assertEquals(expected, actual);\n    }\n}", "ts": "1554804136.001000", "type": "message", "user": "UGX13S9GR"}
,{"client_msg_id": "953aa424-084e-46fa-b580-84d2f7568166", "datetime": "2019-04-09T11:36:07Z", "name": "baraneetharan.r", "reactions": [{"count": 1, "name": "+1", "users": ["UHN5D2Q92"]}], "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "By default maven uses maven-surefire-plugin:2.12.4. Some of the maven commands may not work with the following error.\n**********************************************************************************\nFailed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.12.4:test\n**********************************************************************************\n\nAdd the following plugin to get rid of this error\n\n\n&lt;plugin&gt;\n        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n        &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;\n        &lt;version&gt;3.0.0-M3&lt;/version&gt;\n&lt;/plugin&gt;\n\n\nMaven commands to run test classes and methods\n**********************************************\nRun all test methods with in test package\nmvn test\n\nRun all test methods in a class\nmvn -Dtest=StudentDemoTest test\n\nRun one test method in a class\nmvn -Dtest=StudentDemoTest#getAllStudentsTest test\n\nRun multiple test methods in a class\nmvn -Dtest=StudentDemoTest#getAllStudentsTest+getStudentTest test\n\nRun all test methods in multiple test classes\nmvn -Dtest=\"StudentDemoTest,CalculatorTest\" test\n\nRun selected test methods in multiple test classes\nmvn -Dtest=\"StudentDemoTest#getAllStudentsTest+getStudentTest,CalculatorTest\" test\n\nRun all test methods in multiple test classes using expression\nmvn -Dtest=\"*Test\" test\n\nRun all test Clases from subdirectory, eg: /doc/ You can use command:\nmvn -Dtest=*/doc/* test", "ts": "1554809767.001200", "type": "message", "user": "UCZKNV9FB"}
,{"datetime": "2019-04-09T11:37:31Z", "display_as_bot": false, "files": [{"created": 1554809851, "display_as_bot": false, "edit_link": "https://kgisltraining.slack.com/files/UCZKNV9FB/FHHQFER89/-.java/edit", "editable": true, "external_type": "", "filetype": "java", "has_rich_preview": false, "id": "FHHQFER89", "is_external": false, "is_public": true, "is_starred": false, "lines": 64, "lines_more": 59, "mimetype": "text/plain", "mode": "snippet", "name": "-.java", "permalink": "https://kgisltraining.slack.com/files/UCZKNV9FB/FHHQFER89/-.java", "permalink_public": "https://slack-files.com/TD1J2QS86-FHHQFER89-595c304e36", "pretty_type": "Java", "preview": "package com.kgisl.qs1;\n\nimport java.util.ArrayList;\nimport java.util.List;\n", "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-keyword\">package</span> <span class=\"cm-def\">com</span>.<span class=\"cm-variable\">kgisl</span>.<span class=\"cm-variable\">qs1</span>;</pre></div>\n<div><pre>&#8203;</pre></div>\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">java</span>.<span class=\"cm-variable\">util</span>.<span class=\"cm-variable\">ArrayList</span>;</pre></div>\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">java</span>.<span class=\"cm-variable\">util</span>.<span class=\"cm-variable\">List</span>;</pre></div>\n</div>\n</div>\n", "preview_is_truncated": true, "public_url_shared": false, "size": 1450, "timestamp": 1554809851, "title": "Untitled", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FHHQFER89/-.java", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FHHQFER89/download/-.java", "user": "UCZKNV9FB", "username": ""}], "name": "baraneetharan.r", "real_name": "baraneetharan", "text": "", "ts": "1554809851.001600", "type": "message", "upload": true, "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "JUnit Parameterized Test with Example using @Parameters", "from_url": "https://www.guru99.com/junit-parameterized-test.html", "id": 1, "original_url": "https://www.guru99.com/junit-parameterized-test.html", "service_name": "guru99.com", "text": "Parameterized test enables developer to execute the same test over and over again using different values. It helps developer to save time in executing same test which differs only in their inputs and", "title": "JUnit Parameterized Test with Example using @Parameters", "title_link": "https://www.guru99.com/junit-parameterized-test.html"}], "datetime": "2019-04-09T12:02:23Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.guru99.com/junit-parameterized-test.html>", "ts": "1554811343.002100", "type": "message", "user": "UCZKNV9FB"}
,{"datetime": "2019-04-09T12:07:05Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "A static method belongs to the class rather than object of a class. A static method invoked without the need for creating an instance of a class. static method can access static data member and can change the value of it.\n", "ts": "1554811625.002300", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "GeeksforGeeks: Static methods vs Instance methods in Java - GeeksforGeeks", "from_url": "https://www.geeksforgeeks.org/static-methods-vs-instance-methods-java/", "id": 1, "original_url": "https://www.geeksforgeeks.org/static-methods-vs-instance-methods-java/", "service_icon": "https://www.geeksforgeeks.org/wp-content/uploads/gfg_200X200.png", "service_name": "GeeksforGeeks", "text": "Instance Method Instance method are methods which require an object of its class to be created before it can be called. To invoke a instance\u2026 Read More \u00bb", "thumb_height": 200, "thumb_url": "https://www.geeksforgeeks.org/wp-content/uploads/gfg_200X200.png", "thumb_width": 200, "title": "Static methods vs Instance methods in Java - GeeksforGeeks", "title_link": "https://www.geeksforgeeks.org/static-methods-vs-instance-methods-java/", "ts": 1481298987}], "datetime": "2019-04-09T12:08:53Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.geeksforgeeks.org/static-methods-vs-instance-methods-java/>", "ts": "1554811733.002400", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "4d89c4e5-1a91-429c-9444-ea021b7cddee", "datetime": "2019-04-09T12:36:03Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "Do it Yourself", "ts": "1554813363.002800", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "8ca80757-c41c-4511-9a21-d7d78e1fd895", "datetime": "2019-04-09T12:36:04Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "Create ArrayList from array\n\nHow do You remove repeated elements from ArrayList?", "ts": "1554813364.003000", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "675309fe-bf79-4735-b969-5769ff8512df", "datetime": "2019-04-10T08:49:51Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "Java - Method executed prior to Default Constructor\n***************************************************\npublic class ChkCons {\n\n    int var = getVal();\n\n    ChkCons() {\n        System.out.println(\"I'm Default Constructor.\");\n    }\n\n    public int getVal() {\n        System.out.println(\"I'm in Method.\");\n        return 10;\n    }\n\n    public static void main(String[] args) {\n\n        ChkCons c = new ChkCons();\n\n    }\n\n}\nOUTPUT :\n\nI'm in Method.\nI'm Default Constructor.\n\nInstance variable initialization expressions such as int var = getVal(); are evaluated after the super class constructor is executed but prior to the execution of the current class constructor's body.\nTherefore getVal() is called before the body of the ChkCons constructor is executed\n\nIn what order do static blocks and initialization blocks execute when using inheritance?\n****************************************************************************************\npublic class Parent {\n    public Parent() {\n        System.out.println(\"Parent Constructor\");\n    }\n    static {\n        System.out.println(\"Parent static block\");\n    }\n    {\n        System.out.println(\"Parent initialisation  block\");\n    }\n}\n\npublic class Child extends Parent {\n    {\n        System.out.println(\"Child initialisation block\");\n    }\n    static {\n        System.out.println(\"Child static block\");\n    }\n\n    public Child() {\n        System.out.println(\"Child Constructor\");\n    }\n    public static void main(String[] args) {\n        new Child();\n    }\n}\nThe output of the above code will be\n\nParent static block\nChild static block\nParent initialization  block\nParent Constructor\nChild initialization block\nChild Constructor\n\nThere are several rules in play\n\nstatic blocks are always run before the object is created, so that's why you see print messages from both parents and child static blocks\nnow, when you are calling constructor of the subclass (child), then this constructor implicitly calls super(); before executing it's own constructor. Initialization block comes into play even before the constructor call, so that's why it is called first. So now your parent is created and the program can continue creating child class which will undergo the same process.\n\nExplanations:\n\nStatic block of parent is executed first because it is loaded first and static blocks are called when the class is loaded.", "ts": "1554886191.001800", "type": "message", "user": "UCZKNV9FB"}
,{"datetime": "2019-04-10T08:50:53Z", "display_as_bot": false, "files": [{"created": 1554886253, "display_as_bot": false, "edit_link": "https://kgisltraining.slack.com/files/UCZKNV9FB/FHV6U9JGN/junit_parameterised_test.pl/edit", "editable": true, "external_type": "", "filetype": "perl", "has_rich_preview": false, "id": "FHV6U9JGN", "is_external": false, "is_public": true, "is_starred": false, "lines": 63, "lines_more": 58, "mimetype": "text/plain", "mode": "snippet", "name": "junit_parameterised_test.pl", "permalink": "https://kgisltraining.slack.com/files/UCZKNV9FB/FHV6U9JGN/junit_parameterised_test.pl", "permalink_public": "https://slack-files.com/TD1J2QS86-FHV6U9JGN-3577a19156", "pretty_type": "Perl", "preview": "package com.kgisl.qs1;\n\n/**\n * Calculator\n */", "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-keyword\">package</span> <span class=\"cm-meta\">com</span><span class=\"cm-operator\">.</span><span class=\"cm-meta\">kgisl</span><span class=\"cm-operator\">.</span><span class=\"cm-meta\">qs1</span>;</pre></div>\n<div><pre>&#8203;</pre></div>\n<div><pre><span class=\"cm-operator\">/</span><span class=\"cm-operator\">**</span></pre></div>\n<div><pre> <span class=\"cm-operator\">*</span> <span class=\"cm-meta\">Calculator</span></pre></div>\n<div><pre> *<span class=\"cm-operator\">/</span></pre></div>\n</div>\n</div>\n", "preview_is_truncated": true, "public_url_shared": false, "size": 1344, "timestamp": 1554886253, "title": "junit parameterised test", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FHV6U9JGN/junit_parameterised_test.pl", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FHV6U9JGN/download/junit_parameterised_test.pl", "user": "UCZKNV9FB", "username": ""}], "name": "baraneetharan.r", "real_name": "baraneetharan", "text": "", "ts": "1554886253.002000", "type": "message", "upload": true, "user": "UCZKNV9FB"}
,{"client_msg_id": "cdcc59a5-9ce5-4d39-b5c5-5899fcb297d9", "datetime": "2019-04-10T11:58:40Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "import static org.junit.Assert.assertEquals;\n\n// import static junit.framework.Assert.assertEquals;\n\n******************************************************************************************\n\nJUnit 3.X: junit.framework.Assert\n\nJUnit 4.X: org.junit.Assert\n\nPrefer the newest one, especially when running JDK5 and higher with annotation support.\n\n******************************************************************************************\n\nThe old method (of JUnit 3) was to mark the test-classes by extending junit.framework.TestCase. That inherited junit.framework.Assert itself and your test class gained the ability to call the assert methods this way.\nSince version 4 of JUnit, the framework uses Annotations for marking tests. So you no longer need to extend TestCase. But that means, the assert methods aren't available. But you can make a static import of the new Assert class. That's why all the assert methods in the new class are static methods. So you can import it this way:\n\nimport static org.junit.Assert.*;\nAfter this static import, you can use this methods without prefix.\n\nAt the redesign they also moved to the new package org.junit that follows better the normal conventions for package naming.\n\n******************************************************************************************", "ts": "1554897520.003200", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "d97fabd7-571c-4371-969d-0a458c34e9a9", "datetime": "2019-04-11T10:42:15Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "Do it Yourself", "ts": "1554979335.001000", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "8d189cd6-10c7-4457-aaaf-babc672e4bca", "datetime": "2019-04-11T10:42:17Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "Combine two arraylists\nfind unique values\nfind common values\nCollection&lt;String&gt; listOne = new ArrayList(Arrays.asList(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"));\nCollection&lt;String&gt; listTwo = new ArrayList(Arrays.asList(\"a\", \"b\", \"d\", \"e\", \"f\", \"gg\", \"h\"));", "ts": "1554979337.001200", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "264d7792-8ffe-498d-9625-adab1c7a2495", "datetime": "2019-04-11T11:07:50Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://git-scm.com/download/win>", "ts": "1554980870.001500", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "a4b1e78d-8ae7-4992-afe3-6ae59e799ab0", "datetime": "2019-04-12T04:30:11Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "import java.util.Arrays;\nimport java.util.List;\nimport java.util.ArrayList;\n\nclass HowForEachWorks1 {\n    public static void main(String[] args) {\n        ArrayList list1=new ArrayList();\n        List&lt;Integer&gt; numberList = Arrays.asList(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\n        for (Integer i : numberList) {\n            if ((i &amp; 1)==0) {\n                System.out.println(i);\n            }\n\n        }\n    }\n\n}", "ts": "1555043411.000100", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "638x479px image", "from_url": "https://image.slidesharecdn.com/java8-141003090600-phpapp02/95/functional-java-8-in-everyday-life-9-638.jpg?cb=1412327296", "id": 1, "image_bytes": 102980, "image_height": 479, "image_url": "https://image.slidesharecdn.com/java8-141003090600-phpapp02/95/functional-java-8-in-everyday-life-9-638.jpg?cb=1412327296", "image_width": 638, "original_url": "https://image.slidesharecdn.com/java8-141003090600-phpapp02/95/functional-java-8-in-everyday-life-9-638.jpg?cb=1412327296"}], "client_msg_id": "3708aab1-854a-477f-991a-55a883ce2da5", "datetime": "2019-04-12T05:39:55Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://image.slidesharecdn.com/java8-141003090600-phpapp02/95/functional-java-8-in-everyday-life-9-638.jpg?cb=1412327296>", "ts": "1555047595.000300", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "Java 8 Tutorial: Streams Part 1", "from_url": "https://www.slideshare.net/martyhall/java-8-tutorial-streams-part-1", "id": 1, "original_url": "https://www.slideshare.net/martyhall/java-8-tutorial-streams-part-1", "service_icon": "https://public.slidesharecdn.com/favicon.ico?d8e2a4ed15", "service_name": "slideshare.net", "text": "Please email <mailto:hall@coreservlets.com|hall@coreservlets.com> for info on how to arrange customized courses on general Java programming (for C++/C#/etc. programmers), Java 8 features (fo\u2026", "thumb_height": 432, "thumb_url": "https://cdn.slidesharecdn.com/ss_thumbnails/java-8-streams-part-1-130716111100-phpapp02-thumbnail-4.jpg?cb=1471448870", "thumb_width": 768, "title": "Java 8 Tutorial: Streams Part 1", "title_link": "https://www.slideshare.net/martyhall/java-8-tutorial-streams-part-1"}], "client_msg_id": "c31e0b62-dbf3-4ce2-aa2d-31993d55d66a", "datetime": "2019-04-12T06:04:06Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.slideshare.net/martyhall/java-8-tutorial-streams-part-1>", "ts": "1555049046.000600", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "www.javatpoint.com: Java 8 Stream - javatpoint", "from_url": "https://www.javatpoint.com/java-8-stream", "id": 1, "original_url": "https://www.javatpoint.com/java-8-stream", "service_name": "www.javatpoint.com", "text": "Java 8 Stream with examples and topics on functional interface, anonymous class, lambda for list, lambda for comparable, default methods, method reference, java date and time, java nashorn, java optional, stream, filter etc.", "title": "Java 8 Stream - javatpoint", "title_link": "https://www.javatpoint.com/java-8-stream"}], "client_msg_id": "24aaec4f-0bbf-4c93-945d-bdffa58a3e86", "datetime": "2019-04-12T06:04:19Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.javatpoint.com/java-8-stream>", "ts": "1555049059.000900", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "566x320px image", "from_url": "https://2.bp.blogspot.com/-tFyvqQwhpFQ/WZp6467TqrI/AAAAAAAAPnY/AfdnCrqViQ4dJQ6jUAXnF-thOTuT-apYQCLcBGAs/s640/What%2Bare%2Bthe%2Bcore%2Bstream%2Boperations%2Bof%2BJava%2B8%2BStream%2B%2BStreams%2Bin%2BJava%2B8.jpg", "id": 1, "image_bytes": 29993, "image_height": 320, "image_url": "https://2.bp.blogspot.com/-tFyvqQwhpFQ/WZp6467TqrI/AAAAAAAAPnY/AfdnCrqViQ4dJQ6jUAXnF-thOTuT-apYQCLcBGAs/s640/What%2Bare%2Bthe%2Bcore%2Bstream%2Boperations%2Bof%2BJava%2B8%2BStream%2B%2BStreams%2Bin%2BJava%2B8.jpg", "image_width": 566, "original_url": "https://2.bp.blogspot.com/-tFyvqQwhpFQ/WZp6467TqrI/AAAAAAAAPnY/AfdnCrqViQ4dJQ6jUAXnF-thOTuT-apYQCLcBGAs/s640/What%2Bare%2Bthe%2Bcore%2Bstream%2Boperations%2Bof%2BJava%2B8%2BStream%2B%2BStreams%2Bin%2BJava%2B8.jpg"}], "client_msg_id": "0fbe1021-457b-430c-b203-b77710c3e2d9", "datetime": "2019-04-12T06:04:36Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://2.bp.blogspot.com/-tFyvqQwhpFQ/WZp6467TqrI/AAAAAAAAPnY/AfdnCrqViQ4dJQ6jUAXnF-thOTuT-apYQCLcBGAs/s640/What%2Bare%2Bthe%2Bcore%2Bstream%2Boperations%2Bof%2BJava%2B8%2BStream%2B%2BStreams%2Bin%2BJava%2B8.jpg>", "ts": "1555049076.001200", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "16d4041f-f301-46f0-9114-344bd5be2ed0", "datetime": "2019-04-12T06:05:08Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "import java.util.*;\nimport java.util.Arrays;\nimport java.util.function.Consumer;\n\nclass HowForEachWorks {\n\n    public static void main(String[] args) {\n        List&lt;String&gt; disneyCharacters = Arrays.asList(\"Micky\", \"Donald\", \"Minnie\", \"Aurora\", \"Winnie\", \"Pluto\");\n\n        /*Consumer&lt;String&gt; con = new Consumer&lt;String&gt;() {\n            public void accept(String s) {\n                System.out.println(s);\n            }\n        };*/\n\n        //Consumer&lt;String&gt; con = s -&gt; System.out.println(s);\n        //disneyCharacters.forEach(con);\n        //disneyCharacters.forEach(s-&gt;System.out.println(s));\n\n\n        // call by method\n        disneyCharacters.forEach(System.out::println);\n\n    }\n}\n```\n\n```\npackage com.kg.lambdaapp;\n\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.ArrayList;\n\nclass HowForEachWorks1 {\n    public static void main(String[] args) {\n        ArrayList list1=new ArrayList();\n        List&lt;Integer&gt; numberList = Arrays.asList(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\n        for (Integer i : numberList) {\n            if ((i &amp; 1)==0) {\n                System.out.println(i);\n            }\n\n        }\n    }\n\n}\n```", "ts": "1555049108.001500", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "064cb67a-12ad-47f1-a330-a86e7e9c43b3", "datetime": "2019-04-12T06:05:41Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "This is classic OOP style of hiding method implementations from the caller.\nThe caller simply passes a variable to the method which then does something with the value of the variable\nand returns another value or produces a side effect as it is in our case.\n\n\nclass LambdaDemo {\n\n    public void printSomething(String something) {\n        System.out.println(something);\n    }\n\n    public static void main(String[] args) {\n        LambdaDemo lambdaDemo = new LambdaDemo();\n        String something = \"Learning Lambda\";\n        lambdaDemo.printSomething(something);\n    }\n}\n\n\nsee an equivalent implementation that uses behavior passing other than variable passing.\nTo achieve this, we have to create a functional interface that defines that abstracts the behavior instead of a method.\nA functional interface is an interface that has only one method:\n\npackage com.kg.lambdaapp;\n\ninterface Printer {\n    void print(String val);\n}\n\nclass LambdaDemo {\n\n    public void printSomething(String something, Printer printer) {\n        //System.out.println(something);\n        printer.print(something);\n    }\n\n    public static void main(String[] args) {\n        LambdaDemo lambdaDemo = new LambdaDemo();\n        Printer printer = new Printer() {\n            @Override\n            public void print(String val) {\n                System.out.println(val);\n            }\n        };\n        String something = \"Learning Lambda\";\n        lambdaDemo.printSomething(something, printer);\n    }\n}\n\npublic void print(String toPrint) {\n                System.out.println(toPrint);\n            }\n\nlambda expressions\n\npackage com.kg.lambdaapp;\n\ninterface Printer {\n    void print(String val);\n}\n\nclass LambdaDemo {\n\n    public void printSomething(String something, Printer printer) {\n        //System.out.println(something);\n        printer.print(something);\n    }\n\n    public static void main(String[] args) {\n        LambdaDemo lambdaDemo = new LambdaDemo();\n        Printer printer = (String toPrint) -&gt; {\n                System.out.println(toPrint);\n\n        };\n        String something = \"Learning Lambda\";\n        lambdaDemo.printSomething(something, printer);\n    }\n}\n\n(String toPrint) -&gt; {\n                System.out.println(toPrint);\n\n        }", "ts": "1555049141.001700", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "beginnersbook.com: Java 8 Interface Changes \u2013 default method and static method", "from_url": "https://beginnersbook.com/2017/10/java-8-interface-changes-default-method-and-static-method/", "id": 1, "original_url": "https://beginnersbook.com/2017/10/java-8-interface-changes-default-method-and-static-method/", "service_icon": "https://beginnersbook.com/wp-content/uploads/2016/03/favicon2.png", "service_name": "beginnersbook.com", "text": "Prior to java 8, interface in java can only have abstract methods. All the methods of interfaces are public &amp; abstract by default. Java 8 allows the", "title": "Java 8 Interface Changes \u2013 default method and static method", "title_link": "https://beginnersbook.com/2017/10/java-8-interface-changes-default-method-and-static-method/", "ts": 1507022496}], "client_msg_id": "3d07921f-e4fe-48b7-8689-e59e1b7b08b3", "datetime": "2019-04-12T06:05:55Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://beginnersbook.com/2017/10/java-8-interface-changes-default-method-and-static-method/>", "ts": "1555049155.001900", "type": "message", "user": "UCZKNV9FB"}
,{"datetime": "2019-04-15T04:00:40Z", "display_as_bot": false, "files": [{"created": 1555300840, "display_as_bot": false, "edit_link": "https://kgisltraining.slack.com/files/UCZKNV9FB/FHJFPGTFD/java8streamsmethods.java/edit", "editable": true, "external_type": "", "filetype": "java", "has_rich_preview": false, "id": "FHJFPGTFD", "is_external": false, "is_public": true, "is_starred": false, "lines": 125, "lines_more": 120, "mimetype": "text/plain", "mode": "snippet", "name": "Java8StreamsMethods.java", "permalink": "https://kgisltraining.slack.com/files/UCZKNV9FB/FHJFPGTFD/java8streamsmethods.java", "permalink_public": "https://slack-files.com/TD1J2QS86-FHJFPGTFD-ac15458267", "pretty_type": "Java", "preview": "package com.kgfsl.stream;\n\nimport java.util.ArrayList;\nimport java.util.Comparator;\nimport java.util.List;", "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-keyword\">package</span> <span class=\"cm-def\">com</span>.<span class=\"cm-variable\">kgfsl</span>.<span class=\"cm-variable\">stream</span>;</pre></div>\n<div><pre>&#8203;</pre></div>\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">java</span>.<span class=\"cm-variable\">util</span>.<span class=\"cm-variable\">ArrayList</span>;</pre></div>\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">java</span>.<span class=\"cm-variable\">util</span>.<span class=\"cm-variable\">Comparator</span>;</pre></div>\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">java</span>.<span class=\"cm-variable\">util</span>.<span class=\"cm-variable\">List</span>;</pre></div>\n</div>\n</div>\n", "preview_is_truncated": true, "public_url_shared": false, "size": 5029, "timestamp": 1555300840, "title": "Java8StreamsMethods", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FHJFPGTFD/java8streamsmethods.java", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FHJFPGTFD/download/java8streamsmethods.java", "user": "UCZKNV9FB", "username": ""}], "name": "baraneetharan.r", "real_name": "baraneetharan", "text": "", "ts": "1555300840.000300", "type": "message", "upload": true, "user": "UCZKNV9FB"}
,{"datetime": "2019-04-15T05:25:20Z", "display_as_bot": false, "files": [{"created": 1555305920, "display_as_bot": false, "edit_link": "https://kgisltraining.slack.com/files/UCZKNV9FB/FHVV17J93/person.java/edit", "editable": true, "external_type": "", "filetype": "java", "has_rich_preview": false, "id": "FHVV17J93", "is_external": false, "is_public": true, "is_starred": false, "lines": 24, "lines_more": 19, "mimetype": "text/plain", "mode": "snippet", "name": "person.java", "permalink": "https://kgisltraining.slack.com/files/UCZKNV9FB/FHVV17J93/person.java", "permalink_public": "https://slack-files.com/TD1J2QS86-FHVV17J93-f8788e282f", "pretty_type": "Java", "preview": "package com.kgfsl.stream;\nclass Person\n{\n    private String name;\n    private int age;", "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-keyword\">package</span> <span class=\"cm-def\">com</span>.<span class=\"cm-variable\">kgfsl</span>.<span class=\"cm-variable\">stream</span>;</pre></div>\n<div><pre><span class=\"cm-keyword\">class</span> <span class=\"cm-def\">Person</span></pre></div>\n<div><pre>{</pre></div>\n<div><pre>    <span class=\"cm-keyword\">private</span> <span class=\"cm-variable-3\">String</span> <span class=\"cm-variable\">name</span>;</pre></div>\n<div><pre>    <span class=\"cm-keyword\">private</span> <span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">age</span>;</pre></div>\n</div>\n</div>\n", "preview_is_truncated": false, "public_url_shared": false, "size": 382, "timestamp": 1555305920, "title": "person", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FHVV17J93/person.java", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FHVV17J93/download/person.java", "user": "UCZKNV9FB", "username": ""}], "name": "baraneetharan.r", "real_name": "baraneetharan", "text": "", "ts": "1555305920.000600", "type": "message", "upload": true, "user": "UCZKNV9FB"}
,{"client_msg_id": "2122c070-3cc0-442e-ba94-60ad4f65e61e", "datetime": "2019-04-15T05:34:19Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "Do it Yourself", "ts": "1555306459.001200", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "cb62c941-de4a-4ee3-ac20-3ff905ec5e53", "datetime": "2019-04-15T05:34:20Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "concurrency, parallelism, thread and process\nsocket vs port\n\nfind odd even in single line java", "ts": "1555306460.001300", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "e33b91a4-2579-46e2-ba3a-54d613d8f90e", "datetime": "2019-04-15T09:42:50Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.function.Consumer;\nimport java.util.function.Predicate;\n\n/**\n * LambdaDemo\n */\npublic class LambdaDemo1 {\n    public static void main(String[] args) {\n\n        List&lt;Integer&gt; numberList = Arrays.asList(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\n        Predicate&lt;Integer&gt; odd=new Predicate&lt;Integer&gt;() {\n            @Override\n            public boolean test(Integer t) {\n                return t%2!=0;\n            }\n        };\n\n        // Predicate&lt;Integer&gt; odd=x-&gt;x%2!=0;\n        // Predicate&lt;Integer&gt; even=x-&gt;x%2==0;\n\n        numberList.stream().filter(odd).forEach(System.out::println);\n        numberList.stream().filter(odd.negate()).forEach(System.out::println);\n    }\n\n\n}", "ts": "1555321370.002000", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "www.javatpoint.com: Java Comparator - javatpoint", "from_url": "https://www.javatpoint.com/Comparator-interface-in-collection-framework", "id": 1, "original_url": "https://www.javatpoint.com/Comparator-interface-in-collection-framework", "service_name": "www.javatpoint.com", "text": "Java Comparator interface is used to order the user-defined class objects, compare() method, collection class, java comporator example, Example of Comparator interface in collection framework.", "title": "Java Comparator - javatpoint", "title_link": "https://www.javatpoint.com/Comparator-interface-in-collection-framework"}, {"fallback": "www.javatpoint.com: Difference between Comparable and Comparator - javatpoint", "from_url": "https://www.javatpoint.com/difference-between-comparable-and-comparator", "id": 2, "original_url": "https://www.javatpoint.com/difference-between-comparable-and-comparator", "service_name": "www.javatpoint.com", "text": "Difference between Comparable and Comparator or Difference between Comparator and Comparable in Java, java collection framework Comparable and Comparator with examples.", "title": "Difference between Comparable and Comparator - javatpoint", "title_link": "https://www.javatpoint.com/difference-between-comparable-and-comparator"}, {"fallback": "Digizol: Java Sorting: Comparator vs Comparable Tutorial", "from_url": "https://www.digizol.com/2008/07/java-sorting-comparator-vs-comparable.html", "id": 3, "image_bytes": 243822, "image_height": 250, "image_url": "https://3.bp.blogspot.com/-sbgx9TdJQSI/WcpLFYKbCiI/AAAAAAAAB-g/voW66ukDavMJL4RIeoN6-y8YNLwF5aJ2QCLcBGAs/w1200-h630-p-k-no-nu/java-comparator-vs-comparable.jpg", "image_width": 476, "original_url": "https://www.digizol.com/2008/07/java-sorting-comparator-vs-comparable.html", "service_icon": "https://www.digizol.com/favicon.ico", "service_name": "Digizol", "text": "Java sorting feature is achievable via Comparator as well as Comparable. But they have their specific identities and duties.", "title": "Java Sorting: Comparator vs Comparable Tutorial", "title_link": "https://www.digizol.com/2008/07/java-sorting-comparator-vs-comparable.html"}], "client_msg_id": "66dbcaea-280f-4a50-8161-6cb0ba1e3aac", "datetime": "2019-04-15T10:55:52Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "*Comparable*\n\nA comparable object is capable of comparing itself with another object. The class itself must implements the java.lang.Comparable interface in order to be able to compare its instances.\n\n*Comparator*\n\nA comparator object is capable of comparing two different objects. The class is not comparing its instances, but some other class\u2019s instances. This comparator class must implement the java.util.Comparator interface.\n\n<https://www.javatpoint.com/Comparator-interface-in-collection-framework>\n<https://www.javatpoint.com/difference-between-comparable-and-comparator>\n\n<https://www.digizol.com/2008/07/java-sorting-comparator-vs-comparable.html>", "ts": "1555325752.002500", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "6cd388ae-911b-4ee4-bc48-136ca20260f2", "datetime": "2019-04-16T03:41:55Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://docs.oracle.com/javase/8/docs/api/?java/lang/FunctionalInterface.html>", "ts": "1555386115.000300", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "2ec83b76-ff24-4caf-9f1d-6749fb0d178b", "datetime": "2019-04-16T05:45:08Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "JSR\nJCP\nJEP\n\nJava 8 vs java 9\nopen jdk vs oracle jdk\nJava 8 / 9 features", "ts": "1555393508.000700", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "820475f6-bc6c-4c2b-aac5-2442a0aa6c96", "datetime": "2019-04-17T04:10:35Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "Do it Yourself", "ts": "1555474235.000500", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "c767a2f0-f551-49d6-a628-13fb65e7a6a6", "datetime": "2019-04-17T04:10:35Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "id, name, college, department, year, mark1, mark2, mark3\n\nFirst 3 colleges\nLast 3 colleges\nCollege wise toppers\nTop 3 departments\nDepartment wise average", "ts": "1555474235.000600", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "Java PDF Blog: Java 8 Method References explained in 5 minutes", "from_url": "https://blog.idrsolutions.com/2015/02/java-8-method-references-explained-5-minutes/", "id": 1, "original_url": "https://blog.idrsolutions.com/2015/02/java-8-method-references-explained-5-minutes/", "service_icon": "https://blog.idrsolutions.com/wp-content/uploads/2018/12/idr-logo-300x300.jpg", "service_name": "Java PDF Blog", "text": "in this article Ernest explains Java 8 Method References in 5 Minutes.", "thumb_height": 377, "thumb_url": "https://blog.idrsolutions.com/wp-content/uploads/2018/06/blog-logo.png", "thumb_width": 651, "title": "Java 8 Method References explained in 5 minutes", "title_link": "https://blog.idrsolutions.com/2015/02/java-8-method-references-explained-5-minutes/", "ts": 1423134054}], "client_msg_id": "7f30e0b5-1561-437d-b19c-688a6513191f", "datetime": "2019-04-17T04:23:40Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://blog.idrsolutions.com/2015/02/java-8-method-references-explained-5-minutes/>", "ts": "1555475020.000800", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "1786c771-810c-4f66-a202-05ec2dee28f1", "datetime": "2019-04-17T09:02:35Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "*Spread Syntax*\nTake a look at how the spread syntax can spread an array\n\nvar parts = ['shoulders', 'knees'];\nvar lyrics = ['head', ...parts, 'and', 'toes']; // [\"head\", \"shoulders\", \"knees\", \"and\", \"toes\"]", "ts": "1555491755.002700", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "Stack Overflow: What's the difference between map and flatMap methods in Java 8?", "from_url": "https://stackoverflow.com/questions/26684562/whats-the-difference-between-map-and-flatmap-methods-in-java-8", "id": 1, "original_url": "https://stackoverflow.com/questions/26684562/whats-the-difference-between-map-and-flatmap-methods-in-java-8", "service_icon": "https://cdn.sstatic.net/Sites/stackoverflow/img/favicon.ico?v=4f32ecc8f43d", "service_name": "Stack Overflow", "text": "In Java 8, what's the difference between Stream.map and Stream.flatMap methods?", "thumb_height": 316, "thumb_url": "https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded", "thumb_width": 316, "title": "What's the difference between map and flatMap methods in Java 8?", "title_link": "https://stackoverflow.com/questions/26684562/whats-the-difference-between-map-and-flatmap-methods-in-java-8"}], "client_msg_id": "b8da61bf-190d-41ee-8829-c52b949acf33", "datetime": "2019-04-17T09:03:30Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://stackoverflow.com/questions/26684562/whats-the-difference-between-map-and-flatmap-methods-in-java-8>", "ts": "1555491810.002900", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "276ca2fc-d36c-4267-b024-ca65e66d8be1", "datetime": "2019-04-17T09:04:12Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "*Java 8 Optional Class*", "ts": "1555491852.003400", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "www.tutorialspoint.com: Java 8 Optional Class", "from_url": "https://www.tutorialspoint.com/java8/java8_optional_class.htm", "id": 1, "original_url": "https://www.tutorialspoint.com/java8/java8_optional_class.htm", "service_icon": "https://www.tutorialspoint.com/favicon.ico", "service_name": "www.tutorialspoint.com", "text": "Java 8 Optional Class - Learn Java 8 in simple and easy steps starting from basic to advanced concepts with examples including Overview, Environment Setup, Lambda Expressions, Method Reference, Functional Interfaces, Default methods, Streams, Optional Class, Nashorn JavaScript Engine, New Date Time API, Base64.", "title": "Java 8 Optional Class", "title_link": "https://www.tutorialspoint.com/java8/java8_optional_class.htm"}, {"fallback": "beginnersbook.com: Java 8 Optional Class", "from_url": "https://beginnersbook.com/2017/10/java-8-optional-class/", "id": 2, "original_url": "https://beginnersbook.com/2017/10/java-8-optional-class/", "service_icon": "https://beginnersbook.com/wp-content/uploads/2016/03/favicon2.png", "service_name": "beginnersbook.com", "text": "In Java 8, we have a newly introduced Optional class in java.util package. This class is introduced to avoid NullPointerException that we frequently", "title": "Java 8 Optional Class", "title_link": "https://beginnersbook.com/2017/10/java-8-optional-class/", "ts": 1507629343}], "client_msg_id": "487b9178-b2ea-43d7-a1fd-c18a81b14f13", "datetime": "2019-04-17T09:04:15Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.tutorialspoint.com/java8/java8_optional_class.htm>\n<https://beginnersbook.com/2017/10/java-8-optional-class/>", "ts": "1555491855.003600", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "f8a7571e-87ba-4a9f-bffc-2a54d3af6944", "datetime": "2019-04-24T04:04:10Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "CAPITALIZATION OF IDENTIFIERS\nThere are two standard capitalization patterns for identifiers, particularly \u201cmultiple\nword\u201d identifiers:\ncamel case: First word begins with a lowercase letter, additional words begin\nwith uppercase letters (finalTotal)\nPascal case: All words begin with an uppercase letter (FinalTotal)\nThe code in this chapter uses the following convention for creating identifiers (examples included):\nSimple variables \u2013 camel case: speed, time, finalTotal\nNamed constants - all uppercase: PI, FREEZING_POINT\nMethod names \u2013 camel case: myMethod, getInput\nClass names \u2013 Pascal case: MyClass\nObject names \u2013 camel case: myObject\nThe underscore character is not used except for named constants. Occasionally, however,\nwe\u2019ll use single capital letters for identifiers in quick code fragments.", "ts": "1556078650.000100", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "GitHub: baraneetharan/javatest", "from_url": "https://github.com/baraneetharan/javatest/blob/master/javatest", "id": 1, "original_url": "https://github.com/baraneetharan/javatest/blob/master/javatest", "service_icon": "https://a.slack-edge.com/bfaba/img/unfurl_icons/github.png", "service_name": "GitHub", "text": "Contribute to baraneetharan/javatest development by creating an account on GitHub.", "thumb_height": 420, "thumb_url": "https://avatars2.githubusercontent.com/u/5837908?s=400&v=4", "thumb_width": 420, "title": "baraneetharan/javatest", "title_link": "https://github.com/baraneetharan/javatest/blob/master/javatest"}], "client_msg_id": "2d1b4b0e-d311-478d-b9d0-b86625046107", "datetime": "2019-04-24T09:00:36Z", "is_starred": true, "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://github.com/baraneetharan/javatest/blob/master/javatest>", "ts": "1556096436.000300", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "7c328b12-e5f9-4a21-bf55-255357d56dbe", "datetime": "2019-04-24T12:56:08Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "set HTTP_PROXY=<http://10.100.1.124:3128>\nset HTTPS_PROXY=<http://10.100.1.124:3128>\n\ngit config --global http.proxy 10.100.1.124:3128\ngit config --global https.proxy 10.100.1.124:3128\n\nnpm config set proxy <http://10.100.1.124:3128>\nnpm config set https-proxy <http://10.100.1.124:3128>", "ts": "1556110568.000700", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "GitHub: baraneetharan/javatest", "from_url": "https://github.com/baraneetharan/javatest", "id": 1, "original_url": "https://github.com/baraneetharan/javatest", "service_icon": "https://a.slack-edge.com/bfaba/img/unfurl_icons/github.png", "service_name": "GitHub", "text": "Contribute to baraneetharan/javatest development by creating an account on GitHub.", "thumb_height": 420, "thumb_url": "https://avatars2.githubusercontent.com/u/5837908?s=400&v=4", "thumb_width": 420, "title": "baraneetharan/javatest", "title_link": "https://github.com/baraneetharan/javatest"}], "client_msg_id": "d16588a7-34c3-459c-ac16-47b8d3755884", "datetime": "2019-04-26T13:03:02Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://github.com/baraneetharan/javatest>", "ts": "1556283782.000200", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "e1cee2d1-5060-4a35-9afe-5ab2f0055c08", "datetime": "2019-04-26T13:04:13Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "git push -f origin &lt;branch&gt;\n\ngit rm -r dependency-reduced-pom.xml\ngit commit -m \"Remove dependency-reduced-pom.xml\"\ngit push -u origin master", "ts": "1556283853.000500", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "96c0651e-3d5b-4060-9e4d-0adabcf13718", "datetime": "2019-04-26T13:04:55Z", "display_as_bot": false, "files": [{"created": 1556283895, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "text", "has_rich_preview": false, "id": "FHW3CMQBC", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "text/plain", "mode": "hosted", "name": ".gitignore", "permalink": "https://kgisltraining.slack.com/files/UCZKNV9FB/FHW3CMQBC/.gitignore", "permalink_public": "https://slack-files.com/TD1J2QS86-FHW3CMQBC-92f57648ed", "pretty_type": "Plain Text", "public_url_shared": false, "size": 292, "timestamp": 1556283895, "title": ".gitignore", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FHW3CMQBC/.gitignore", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FHW3CMQBC/download/.gitignore", "user": "UCZKNV9FB", "username": ""}], "name": "baraneetharan.r", "real_name": "baraneetharan", "text": "", "ts": "1556283895.000600", "type": "message", "upload": true, "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "Testing Excellence: Different Ways to Iterate Through a Map in Java Including Java 8 ForEach", "from_url": "https://www.testingexcellence.com/4-different-ways-iterate-map-java/", "id": 1, "original_url": "https://www.testingexcellence.com/4-different-ways-iterate-map-java/", "service_icon": "https://www.testingexcellence.com/wp-content/uploads/2018/04/cropped-te-icon.svg_-180x180.png", "service_name": "Testing Excellence", "text": "Looping over a Map in Java. In this post we look at different ways we can iterate through a map in Java including Java 8 forEach loop as well as iterator.", "thumb_height": 458, "thumb_url": "https://www.testingexcellence.com/wp-content/uploads/2016/01/java-loop-map.png", "thumb_width": 458, "title": "Different Ways to Iterate Through a Map in Java Including Java 8 ForEach", "title_link": "https://www.testingexcellence.com/4-different-ways-iterate-map-java/", "ts": 1454179538}], "client_msg_id": "bbf325c1-89c0-4565-a548-af30ba979ea8", "datetime": "2019-04-29T04:44:06Z", "name": "sasikumar.b", "real_name": "Sasikumar.b", "team": "TD1J2QS86", "text": "<https://www.testingexcellence.com/4-different-ways-iterate-map-java/>", "ts": "1556513046.000900", "type": "message", "user": "UGX13S9GR"}
,{"attachments": [{"fallback": "GeeksforGeeks: How to iterate any Map in Java - GeeksforGeeks", "from_url": "https://www.geeksforgeeks.org/iterate-map-java/", "id": 1, "original_url": "https://www.geeksforgeeks.org/iterate-map-java/", "service_icon": "https://www.geeksforgeeks.org/wp-content/uploads/gfg_200X200.png", "service_name": "GeeksforGeeks", "text": "There are generally five ways of iterating over a Map in Java. In this article, we will discuss all of them and also look at\u2026 Read More \u00bb", "thumb_height": 200, "thumb_url": "https://www.geeksforgeeks.org/wp-content/uploads/gfg_200X200.png", "thumb_width": 200, "title": "How to iterate any Map in Java - GeeksforGeeks", "title_link": "https://www.geeksforgeeks.org/iterate-map-java/", "ts": 1498729768}], "client_msg_id": "e49dddae-7700-49ec-89b3-0802726f438a", "datetime": "2019-04-29T04:44:21Z", "name": "sasikumar.b", "real_name": "Sasikumar.b", "team": "TD1J2QS86", "text": "<https://www.geeksforgeeks.org/iterate-map-java/>", "ts": "1556513061.001200", "type": "message", "user": "UGX13S9GR"}
,{"attachments": [{"fallback": "Stack Overflow: Printing a java map Map - How?", "from_url": "https://stackoverflow.com/questions/36782231/printing-a-java-map-mapstring-object-how", "id": 1, "original_url": "https://stackoverflow.com/questions/36782231/printing-a-java-map-mapstring-object-how", "service_icon": "https://cdn.sstatic.net/Sites/stackoverflow/img/favicon.ico?v=4f32ecc8f43d", "service_name": "Stack Overflow", "text": "How to I print information from a map that has the object as the value? I have created the following map: Map&lt;String, Object&gt; objectSet = new HashMap&lt;&gt;(); The object has its own clas...", "thumb_height": 316, "thumb_url": "https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded", "thumb_width": 316, "title": "Printing a java map Map - How?", "title_link": "https://stackoverflow.com/questions/36782231/printing-a-java-map-mapstring-object-how"}], "client_msg_id": "ea6422a1-65ef-4137-a99a-142c6227ad06", "datetime": "2019-04-29T04:45:14Z", "name": "sasikumar.b", "real_name": "Sasikumar.b", "team": "TD1J2QS86", "text": "<https://stackoverflow.com/questions/36782231/printing-a-java-map-mapstring-object-how>", "ts": "1556513114.001500", "type": "message", "user": "UGX13S9GR"}
,{"client_msg_id": "3a91fb52-670a-4016-a458-7d78b6db1354", "datetime": "2019-04-29T05:43:47Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://docstore.mik.ua/orelly/java-ent/jnut/figs/JN3_1101.gif>\n<https://javarevisited.blogspot.com/2011/12/read-and-write-text-file-java.html>\n<https://www.geeksforgeeks.org/file-handling-in-java-with-crud-operations/>\n<http://www.authorstream.com/Presentation/AANILL-2976585-day-io-streams/>\n<https://www.mkyong.com/tutorials/java-io-tutorials/>", "ts": "1556516627.003500", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "www.javatpoint.com: Java File Class - javatpoint", "from_url": "https://www.javatpoint.com/java-file-class", "id": 1, "original_url": "https://www.javatpoint.com/java-file-class", "service_name": "www.javatpoint.com", "text": "Java File Class for beginners and professionals with examples on Java IO or Input Output in Java with input stream, output stream, reader and writer class. The <http://java.io|java.io> package provides api to reading and writing data.", "title": "Java File Class - javatpoint", "title_link": "https://www.javatpoint.com/java-file-class"}, {"fallback": "www.javatpoint.com: Java FileInputStream Class - javatpoint", "from_url": "https://www.javatpoint.com/java-fileinputstream-class", "id": 2, "original_url": "https://www.javatpoint.com/java-fileinputstream-class", "service_name": "www.javatpoint.com", "text": "Java FileInputStream Class for beginners and professionals with examples on Java IO or Input Output in Java with input stream, output stream, reader and writer class. The <http://java.io|java.io> package provides api to reading and writing data.", "title": "Java FileInputStream Class - javatpoint", "title_link": "https://www.javatpoint.com/java-fileinputstream-class"}, {"fallback": "www.javatpoint.com: Java FileOutputStream Class - javatpoint", "from_url": "https://www.javatpoint.com/java-fileoutputstream-class", "id": 3, "original_url": "https://www.javatpoint.com/java-fileoutputstream-class", "service_name": "www.javatpoint.com", "text": "Java FileOutputStream Class for beginners and professionals with examples on Java IO or Input Output in Java with input stream, output stream, reader and writer class. The <http://java.io|java.io> package provides api to reading and writing data.", "title": "Java FileOutputStream Class - javatpoint", "title_link": "https://www.javatpoint.com/java-fileoutputstream-class"}], "client_msg_id": "656d37e2-fd9c-4e79-9bc7-5aad3a231e26", "datetime": "2019-04-29T05:57:55Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.javatpoint.com/java-file-class>\n<https://www.javatpoint.com/java-fileinputstream-class>\n<https://www.javatpoint.com/java-fileoutputstream-class>", "ts": "1556517475.004300", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "ff65e2ba-00de-4bda-be96-e90592b67d5c", "datetime": "2019-04-29T06:01:38Z", "name": "ramya.a", "real_name": "Ramya Ayyanar", "team": "TD1J2QS86", "text": "File Read and Write:", "ts": "1556517698.005000", "type": "message", "user": "UH5GTPK52"}
,{"client_msg_id": "40f8fb45-1a1a-47b3-b525-4862e27e4bae", "datetime": "2019-04-29T06:01:42Z", "name": "ramya.a", "real_name": "Ramya Ayyanar", "team": "TD1J2QS86", "text": "package com.kgisl.data;\n\nimport java.io.*;\n\npublic class FileRead {\n    public static void main(String[] args) throws Exception {\n        File f = new File(\"D:\\\\Ramya\\\\ReadFiles.txt\");\n        BufferedReader br = new BufferedReader(new FileReader(f));\n        String s;\n        while ((s = br.readLine()) != null) {\n            System.out.println(s);\n        }\n\n        String str = \"File writing here\";\n        FileWriter fw = new FileWriter(\"D:\\\\Ramya\\\\wirten2.txt\");\n        for (int i = 0; i &lt; str.length(); i++) {\n            fw.write(str);\n            System.out.println(\"Successfully written..\");\n            fw.close();\n        }\n    }\n}", "ts": "1556517702.005200", "type": "message", "user": "UH5GTPK52"}
,{"datetime": "2019-04-29T10:10:19Z", "inviter": "UCZKNV9FB", "name": "jeevitha.yuvaraj", "real_name": "Jeevitha Yuvaraj", "subtype": "channel_join", "text": "<@UHXJZBPTM> has joined the channel", "ts": "1556532619.005500", "type": "message", "user": "UHXJZBPTM"}
,{"attachments": [{"fallback": "Stack Abuse: Libraries for Reading and Writing CSVs in Java", "fields": [{"short": true, "title": "Written by", "value": "Jean Fernando"}, {"short": true, "title": "Filed under", "value": "java"}], "from_url": "https://stackabuse.com/libraries-for-reading-and-writing-csvs-in-java/", "id": 1, "original_url": "https://stackabuse.com/libraries-for-reading-and-writing-csvs-in-java/", "service_icon": "https://stackabuse.com/assets/images/apple-touch-icon.png?v=9cbe29b744", "service_name": "Stack Abuse", "text": "Introduction CSV stands for Comma Separated Values, a method of formatting data which has been used even before the use of personal computers became widespread. The format gained popularity because the first computers used punched cards to process data, and comma separated values are easier to 'punch' in than traditional", "title": "Libraries for Reading and Writing CSVs in Java", "title_link": "https://stackabuse.com/libraries-for-reading-and-writing-csvs-in-java/", "ts": 1550500500}, {"fallback": "Stack Abuse: Reading and Writing CSVs in Java", "fields": [{"short": true, "title": "Written by", "value": "Jean Fernando"}, {"short": true, "title": "Filed under", "value": "java"}], "from_url": "https://stackabuse.com/reading-and-writing-csvs-in-java/", "id": 2, "original_url": "https://stackabuse.com/reading-and-writing-csvs-in-java/", "service_icon": "https://stackabuse.com/assets/images/apple-touch-icon.png?v=9cbe29b744", "service_name": "Stack Abuse", "text": "Introduction This is the first article in a short series dedicated to Libraries for Reading and Writing CSVs in Java. Reading and Writing CSVs in Core Java Owning to the popularity and widespread use of CSV as a format for data transfer, there are many parser libraries that can be", "title": "Reading and Writing CSVs in Java", "title_link": "https://stackabuse.com/reading-and-writing-csvs-in-java/", "ts": 1550499540}, {"fallback": "JournalDev: OpenCSV CSVReader CSVWriter Example - JournalDev", "from_url": "https://www.journaldev.com/12014/opencsv-csvreader-csvwriter-example", "id": 3, "original_url": "https://www.journaldev.com/12014/opencsv-csvreader-csvwriter-example", "service_icon": "https://cdn.journaldev.com/wp-content/uploads/2018/12/cropped-512x512-transparent-180x180.png", "service_name": "JournalDev", "text": "OpenCSV Example Tutorial. CSVReader Example, CSVWriter example, convert CSV to java object, CsvToBean, OpenCSV Maven, jar download.", "thumb_height": 315, "thumb_url": "https://www.journaldev.com/wp-content/uploads/2016/07/opencsv-csvreader-csvwriter-example.jpg", "thumb_width": 560, "title": "OpenCSV CSVReader CSVWriter Example - JournalDev", "title_link": "https://www.journaldev.com/12014/opencsv-csvreader-csvwriter-example", "ts": 1468084615}], "client_msg_id": "bbc7de12-f4b2-4f1a-a1c8-8c2e295cf2e5", "datetime": "2019-04-30T06:58:09Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://stackabuse.com/libraries-for-reading-and-writing-csvs-in-java/>\n<https://stackabuse.com/reading-and-writing-csvs-in-java/>\n<https://www.journaldev.com/12014/opencsv-csvreader-csvwriter-example>", "ts": "1556607489.006100", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "eb97c28d-91df-4cfb-9cb8-24821590052e", "datetime": "2019-04-30T10:46:47Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "import java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.util.Scanner;\n\n/**\n* Scanner1\n*/\npublic class Scanner1 {\n\n   public static void main(String[] args) {\n       String file = \"sample.txt\";\n       FileReader fr;\n       try {\n           fr = new FileReader(file);\n           BufferedReader buffer = new BufferedReader(fr);\n           String line;\n           long length = 0;\n           try {\n               while ((line = buffer.readLine()) != null) {\n                   if (line.isEmpty()) {\n                       break;\n                   }\n                   System.out.println(line);\n                   length += line.length();\n               }\n           } catch (IOException e) {\n               // TODO Auto-generated catch block\n               e.printStackTrace();\n           }\n       } catch (FileNotFoundException e) {\n           // TODO Auto-generated catch block\n           e.printStackTrace();\n       }\n\n   }\n}\n\n\n\n\n\n\n\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.util.Scanner;\n\n/**\n* Scanner1\n*/\npublic class Scanner1 {\n\n   public static void main(String[] args) {\n       String file = \"sample.txt\";\n       FileReader fr;\n       try {\n           fr = new FileReader(file);\n           BufferedReader buffer = new BufferedReader(fr);\n           String line;\n           long length = 0;\n           String[] data1 = null;\n           try {\n               while ((line = buffer.readLine()) != null) {\n                   // if (line.isEmpty()) {\n                   // break;\n                   // }\n                   data1 = line.split(\",\");\n                   for (String var : data1) {\n                       System.out.println(var);\n                   }\n                   length += line.length();\n               }\n\n           } catch (IOException e) {\n               // TODO Auto-generated catch block\n               e.printStackTrace();\n           }\n       } catch (FileNotFoundException e) {\n           // TODO Auto-generated catch block\n           e.printStackTrace();\n       }\n\n   }\n}", "ts": "1556621207.006400", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "3d5136b7-b5a3-4129-970a-f551a457f965", "datetime": "2019-05-02T07:25:14Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "String line;\n          long length = 0;\n          String[] data1 = null;\n          try {\n              while ((line = buffer.readLine()) != null) {\n                  // if (line.isEmpty()) {\n                  // break;\n                  // }\n                  data1 = line.split(\",\");\n                  for (String var : data1) {\n                      System.out.println(var);\n                  }\n                  length += line.length();\n              }\n\t\t\t  \n<https://stackabuse.com/reading-and-writing-csvs-in-java/>\n<https://www.callicoder.com/assets/images/post/large/apache-poi-classes-and-interfaces.jpg>\n<https://www.guru99.com/images/AdvanceSelenium/071514_0711_AllAboutExc5.png>\n<https://en.wikipedia.org/wiki/Apache_POI>\n<https://poi.apache.org/components/spreadsheet/>\n<https://howtodoinjava.com/apache-commons/readingwriting-excel-files-in-java-poi-tutorial/>", "ts": "1556781914.000200", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "ba7a67e2-0c70-4be3-84ea-a91b26a37188", "datetime": "2019-05-02T07:25:23Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "&lt;dependency&gt;\n      &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;\n      &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt;\n      &lt;version&gt;4.1.0&lt;/version&gt;\n    &lt;/dependency&gt;", "ts": "1556781923.000400", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "5ad7bfc8-cab3-4bd8-ac5d-6fc2268409c1", "datetime": "2019-05-02T07:26:31Z", "display_as_bot": false, "files": [{"created": 1556781991, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "java", "has_rich_preview": false, "id": "FJEB70V62", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "text/plain", "mode": "hosted", "name": "App.java", "permalink": "https://kgisltraining.slack.com/files/UCZKNV9FB/FJEB70V62/app.java", "permalink_public": "https://slack-files.com/TD1J2QS86-FJEB70V62-990adcfa06", "pretty_type": "Java", "public_url_shared": false, "size": 2032, "timestamp": 1556781991, "title": "App.java", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJEB70V62/app.java", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJEB70V62/download/app.java", "user": "UCZKNV9FB", "username": ""}], "name": "baraneetharan.r", "real_name": "baraneetharan", "text": "ApachePOIRead", "ts": "1556781991.000500", "type": "message", "upload": true, "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "GeeksforGeeks: enum in Java - GeeksforGeeks", "from_url": "https://www.geeksforgeeks.org/enum-in-java/", "id": 1, "original_url": "https://www.geeksforgeeks.org/enum-in-java/", "service_icon": "https://www.geeksforgeeks.org/wp-content/uploads/gfg_200X200.png", "service_name": "GeeksforGeeks", "text": "Enumerations serve the purpose of representing a group of named constants in a programming language. For example the 4 suits in a deck of playing\u2026 Read More \u00bb", "thumb_height": 200, "thumb_url": "https://www.geeksforgeeks.org/wp-content/uploads/gfg_200X200.png", "thumb_width": 200, "title": "enum in Java - GeeksforGeeks", "title_link": "https://www.geeksforgeeks.org/enum-in-java/", "ts": 1474885053}], "client_msg_id": "065156db-2151-4e5b-a4ad-a0130d2318f1", "datetime": "2019-05-02T08:51:00Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "new File(\"D:\\\\baranee\\\\java\\\\mavenprojects\\\\excelpoi\\\\src\\\\main\\\\resources\\\\Book1.xlsx\"));\nnew File(\"src/main/resources/Book1.xlsx\"));\nenum in java\n<https://www.geeksforgeeks.org/enum-in-java/>\ncell.getCellType()", "ts": "1556787060.000900", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "060f4202-93d1-4e2c-ae1c-d31a46c7c2d4", "datetime": "2019-05-03T04:42:14Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "package com.kgisl.excelpoi;\n\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.util.Iterator;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.TreeMap;\n\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.CellType;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.xssf.usermodel.XSSFSheet;\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\n\n/**\n * WriteExcelFile\n */\npublic class WriteExcelFile {\n\n    public static void main(String[] args) {\n        // Blank workbook\n        XSSFWorkbook workbook = new XSSFWorkbook();\n\n        // Create a blank sheet\n        XSSFSheet sheet = workbook.createSheet(\"Employee Data\");\n\n        // This data needs to be written (Object[])\n        Map&lt;String, Object[]&gt; data = new TreeMap&lt;String, Object[]&gt;();\n        data.put(\"1\", new Object[] { \"ID\", \"NAME\", \"LASTNAME\", \"M1\", \"M2\", \"M3\" });\n        data.put(\"2\", new Object[] { 1, \"Amit\", \"Shukla\", 10, 20, 30 });\n        data.put(\"3\", new Object[] { 2, \"Lokesh\", \"Gupta\", 15, 25, 35 });\n        data.put(\"4\", new Object[] { 3, \"John\", \"Adwards\", 20, 30, 40 });\n        data.put(\"5\", new Object[] { 4, \"Brian\", \"Schultz\", 30, 35, 45 });\n\n        // Row header = sheet.createRow(0);\n        // header.createCell(4).setCellValue(\"Total\");\n        // // Row dataRow = sheet.createRow(1);\n\n        // // dataRow.createCell(4).setCellFormula(\"A2*B2*C2\");\n\n        // // sheet.getRow(17).createCell(4);\n        // // sheet.getRow(17).getCell(4).setCellValue(\"NEWCOLUMN\");\n\n        // Iterate over data and write to sheet\n        Set&lt;String&gt; keyset = data.keySet();\n        int rownum = 0;\n        for (String key : keyset) {\n            Row row = sheet.createRow(rownum++);\n            Object[] objArr = data.get(key);\n            int cellnum = 0;\n\n            for (Object obj : objArr) {\n                Cell cell = row.createCell(cellnum++);\n                if (obj instanceof String)\n                    cell.setCellValue((String) obj);\n                else if (obj instanceof Integer)\n                    cell.setCellValue((Integer) obj);\n            }\n            // Cell newcell = row.createCell(row.getLastCellNum(), CellType.STRING);\n            Cell totcell = row.createCell(row.getLastCellNum(), CellType.NUMERIC);\n            if (row.getRowNum() == 0) {\n                totcell.setCellValue(\"Total\");\n            } else {\n                // totcell.setCellFormula(\"SUM(D2:F2)\");\n                double m1 = row.getCell(3).getNumericCellValue();\n                double m2 = row.getCell(4).getNumericCellValue();\n                double m3 = row.getCell(5).getNumericCellValue();\n                totcell.setCellValue(m1+m2+m3);;\n            }\n        }\n        try {\n            // Write the workbook in file system\n            FileOutputStream out = new FileOutputStream(new File(\"writeexcel.xlsx\"));\n            workbook.write(out);\n            out.close();\n            System.out.println(\"File written successfully on disk.\");\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}", "ts": "1556858534.000200", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "844ab112-28a5-4671-8af3-e6b296635499", "datetime": "2019-05-03T09:20:07Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "Conditional Formatting", "ts": "1556875207.000700", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "ab9c2c73-3393-485e-aa82-b3ebb254d8e0", "datetime": "2019-05-03T09:20:08Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "public static void formatting(){\n        SheetConditionalFormatting sheetCF = sheet.getSheetConditionalFormatting();\n\n        // //Condition 1: Cell Value Is   greater than  70   (Blue Fill)\n        // ConditionalFormattingRule rule1 = sheetCF.createConditionalFormattingRule(<http://ComparisonOperator.GT|ComparisonOperator.GT>, \"70\");\n        // PatternFormatting fill1 = rule1.createPatternFormatting();\n        // fill1.setFillBackgroundColor(IndexedColors.BLUE.index);\n        // fill1.setFillPattern(PatternFormatting.SOLID_FOREGROUND);\n\n        //Condition 2: Cell Value Is  less than      50   (Green Fill)\n        ConditionalFormattingRule rule2 = sheetCF.createConditionalFormattingRule(<http://ComparisonOperator.LT|ComparisonOperator.LT>, \"40\");\n        PatternFormatting fill2 = rule2.createPatternFormatting();\n        fill2.setFillBackgroundColor(IndexedColors.RED.index);\n        fill2.setFillPattern(PatternFormatting.SOLID_FOREGROUND);\n\n        CellRangeAddress[] regions = {\n                CellRangeAddress.valueOf(\"D1:D5\"),CellRangeAddress.valueOf(\"E1:E5\"),CellRangeAddress.valueOf(\"F1:F5\")\n        };\n\n        sheetCF.addConditionalFormatting(regions,  rule2);\n\n    }", "ts": "1556875208.000900", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "85d20569-c51a-4403-bd38-288a5d14ec8c", "datetime": "2019-05-03T12:58:31Z", "display_as_bot": false, "files": [{"converted_pdf": "https://files.slack.com/files-tmb/TD1J2QS86-FJ24EG9MY-f7382b0714/results_converted.pdf", "created": 1556888310, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "xlsx", "has_rich_preview": false, "id": "FJ24EG9MY", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "mode": "hosted", "name": "results.xlsx", "permalink": "https://kgisltraining.slack.com/files/UCZKNV9FB/FJ24EG9MY/results.xlsx", "permalink_public": "https://slack-files.com/TD1J2QS86-FJ24EG9MY-5c1dac9018", "pretty_type": "Excel Spreadsheet", "public_url_shared": false, "size": 11722, "thumb_pdf": "https://files.slack.com/files-tmb/TD1J2QS86-FJ24EG9MY-f7382b0714/results_thumb_pdf.png", "thumb_pdf_h": 1286, "thumb_pdf_w": 909, "timestamp": 1556888310, "title": "results.xlsx", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJ24EG9MY/results.xlsx", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJ24EG9MY/download/results.xlsx", "user": "UCZKNV9FB", "username": ""}], "name": "baraneetharan.r", "real_name": "baraneetharan", "text": "", "ts": "1556888311.001400", "type": "message", "upload": true, "user": "UCZKNV9FB"}
,{"client_msg_id": "a3395256-e5c2-437d-98fa-51f20c52a361", "datetime": "2019-05-03T12:58:54Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "package com.kgisl.excelpoi;\n\n/**\n * Marks\n */\npublic class Marks {\n\n    private int id;\n    private String name;\n    private String college;\n    private String department;\n    private int year;\n    private int mark1;\n    private int mark2;\n    private int mark3;\n\n    Marks() {\n    }\n\n    Marks(int id, String name, String college, String department, int year, int mark1, int mark2, int mark3) {\n        this.id = id;\n        this.name = name;\n        this.college = college;\n        this.department = department;\n        this.year = year;\n        this.mark1 = mark1;\n        this.mark2 = mark2;\n        this.mark3 = mark3;\n    }\n\n    /**\n     * @return the id\n     */\n    public int getId() {\n        return id;\n    }\n\n    /**\n     * @param id the id to set\n     */\n    public void setId(int id) {\n        this.id = id;\n    }\n\n    /**\n     * @return the name\n     */\n    public String getName() {\n        return name;\n    }\n\n    /**\n     * @param name the name to set\n     */\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    /**\n     * @return the college\n     */\n    public String getCollege() {\n        return college;\n    }\n\n    /**\n     * @param college the college to set\n     */\n    public void setCollege(String college) {\n        this.college = college;\n    }\n\n    /**\n     * @return the department\n     */\n    public String getDepartment() {\n        return department;\n    }\n\n    /**\n     * @param department the department to set\n     */\n    public void setDepartment(String department) {\n        this.department = department;\n    }\n\n    /**\n     * @return the year\n     */\n    public int getYear() {\n        return year;\n    }\n\n    /**\n     * @param year the year to set\n     */\n    public void setYear(int year) {\n        this.year = year;\n    }\n\n    /**\n     * @return the mark1\n     */\n    public int getMark1() {\n        return mark1;\n    }\n\n    /**\n     * @param mark1 the mark1 to set\n     */\n    public void setMark1(int mark1) {\n        this.mark1 = mark1;\n    }\n\n    /**\n     * @return the mark2\n     */\n    public int getMark2() {\n        return mark2;\n    }\n\n    /**\n     * @param mark2 the mark2 to set\n     */\n    public void setMark2(int mark2) {\n        this.mark2 = mark2;\n    }\n\n    /**\n     * @return the mark3\n     */\n    public int getMark3() {\n        return mark3;\n    }\n\n    /**\n     * @param mark3 the mark3 to set\n     */\n    public void setMark3(int mark3) {\n        this.mark3 = mark3;\n    }\n\n    @Override\n    public String toString() {\n        return id + \" \" + name + \" \" + college + \" \" + department + \" \" + year + \" \" + mark1 + \" \" + mark2 + \" \"\n                + mark3;\n    }\n}", "ts": "1556888334.001800", "type": "message", "user": "UCZKNV9FB"}
,{"datetime": "2019-05-03T12:59:30Z", "display_as_bot": false, "files": [{"created": 1556888370, "display_as_bot": false, "edit_link": "https://kgisltraining.slack.com/files/UCZKNV9FB/FJDH2KW0Y/-.java/edit", "editable": true, "external_type": "", "filetype": "java", "has_rich_preview": false, "id": "FJDH2KW0Y", "is_external": false, "is_public": true, "is_starred": false, "lines": 182, "lines_more": 177, "mimetype": "text/plain", "mode": "snippet", "name": "-.java", "permalink": "https://kgisltraining.slack.com/files/UCZKNV9FB/FJDH2KW0Y/-.java", "permalink_public": "https://slack-files.com/TD1J2QS86-FJDH2KW0Y-902cb62adc", "pretty_type": "Java", "preview": "package com.kgisl.excelpoi;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;", "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-keyword\">package</span> <span class=\"cm-def\">com</span>.<span class=\"cm-variable\">kgisl</span>.<span class=\"cm-variable\">excelpoi</span>;</pre></div>\n<div><pre>&#8203;</pre></div>\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">java</span>.<span class=\"cm-variable\">io</span>.<span class=\"cm-variable\">File</span>;</pre></div>\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">java</span>.<span class=\"cm-variable\">io</span>.<span class=\"cm-variable\">FileInputStream</span>;</pre></div>\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">java</span>.<span class=\"cm-variable\">io</span>.<span class=\"cm-variable\">FileNotFoundException</span>;</pre></div>\n</div>\n</div>\n", "preview_is_truncated": true, "public_url_shared": false, "size": 7006, "timestamp": 1556888370, "title": "Untitled", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJDH2KW0Y/-.java", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJDH2KW0Y/download/-.java", "user": "UCZKNV9FB", "username": ""}], "name": "baraneetharan.r", "real_name": "baraneetharan", "text": "", "ts": "1556888370.002100", "type": "message", "upload": true, "user": "UCZKNV9FB"}
,{"client_msg_id": "ad344723-4906-4144-abd4-b1c43bd1c0e2", "datetime": "2019-05-03T13:00:11Z", "display_as_bot": false, "files": [{"converted_pdf": "https://files.slack.com/files-tmb/TD1J2QS86-FJDH38A2C-d5ca9f7084/studentresults_converted.pdf", "created": 1556888408, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "xlsx", "has_rich_preview": false, "id": "FJDH38A2C", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "mode": "hosted", "name": "studentResults.xlsx", "permalink": "https://kgisltraining.slack.com/files/UCZKNV9FB/FJDH38A2C/studentresults.xlsx", "permalink_public": "https://slack-files.com/TD1J2QS86-FJDH38A2C-1d7e8b22b7", "pretty_type": "Excel Spreadsheet", "public_url_shared": false, "size": 4028, "thumb_pdf": "https://files.slack.com/files-tmb/TD1J2QS86-FJDH38A2C-d5ca9f7084/studentresults_thumb_pdf.png", "thumb_pdf_h": 1286, "thumb_pdf_w": 909, "timestamp": 1556888408, "title": "studentResults.xlsx", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJDH38A2C/studentresults.xlsx", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJDH38A2C/download/studentresults.xlsx", "user": "UCZKNV9FB", "username": ""}], "name": "baraneetharan.r", "real_name": "baraneetharan", "text": "outputfile", "ts": "1556888411.002400", "type": "message", "upload": true, "user": "UCZKNV9FB"}
,{"client_msg_id": "d4a6a2f0-c548-4f7e-98fb-8926d017de11", "datetime": "2019-05-06T06:13:36Z", "name": "manimekalai.k", "real_name": "manimekalai kumarasamy", "team": "TD1J2QS86", "text": "// Create headerRow cells\n        for (int i = 0; i &lt; columns.length; i++) {\n            Cell cell = headerRow.createCell(i);\n            cell.setCellValue(columns[i]);\n        }\n\n        // sort by result\n        markList.sort(Comparator.comparing(Marks::result));\n        markList.forEach(System.out::println);\n\n        // Construct data cells\n        int rowNum = 1;", "ts": "1557123216.000200", "type": "message", "user": "UHS8LESTB"}
,{"client_msg_id": "029dec2e-f114-473f-a64c-4f76c29a6813", "datetime": "2019-05-06T06:27:05Z", "name": "manimekalai.k", "real_name": "manimekalai kumarasamy", "team": "TD1J2QS86", "text": "// sort by result\n        markList.sort(Comparator.comparing(Marks::result));\n        // markList.forEach(System.out::println);\n\n        markList.removeIf(x -&gt; x.result().equals(\"fail\"));\n        // Construct data cells\n        int rowNum = 1;", "ts": "1557124025.000300", "type": "message", "user": "UHS8LESTB"}
,{"client_msg_id": "e11f61af-a206-4f79-a02e-9e5d5ac429cf", "datetime": "2019-05-07T04:57:32Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://i2.wp.com/www.knowledgewala.com/wp-content/uploads/2016/07/JDBC-Architecture.gif?resize=613%2C502>\n<http://www.ntu.edu.sg/home/ehchua/programming/java/images/JDBC_Cycle.png>\n<http://www.benchresources.net/wp-content/uploads/2016/05/4-Java-JDBC-Database-URL-explanation-diagrammetrically-oracle.png>\n<http://www.ntu.edu.sg/home/ehchua/programming/java/jdbc_basic.html>\n<https://javaconceptoftheday.com/wp-content/uploads/2015/07/executeQueryVSexecuteUpdateVSexecute.png>\n<https://mvnrepository.com/artifact/mysql/mysql-connector-java/8.0.16>\ndrivermanager vs datasource\ncreate statement vs prepared statement", "ts": "1557205052.000200", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "JournalDev: Java Singleton Design Pattern Example Best Practices - JournalDev", "from_url": "https://www.journaldev.com/1377/java-singleton-design-pattern-best-practices-examples", "id": 1, "original_url": "https://www.journaldev.com/1377/java-singleton-design-pattern-best-practices-examples", "service_icon": "https://cdn.journaldev.com/wp-content/uploads/2018/12/cropped-512x512-transparent-180x180.png", "service_name": "JournalDev", "text": "Java Singleton Design Pattern is most controversial design pattern. How to create singleton class in java, Thread Safety, Enum, Bill Pugh and much more.", "thumb_height": 315, "thumb_url": "https://cdn.journaldev.com/wp-content/uploads/2013/03/java-singleton-pattern.jpg", "thumb_width": 560, "title": "Java Singleton Design Pattern Example Best Practices - JournalDev", "title_link": "https://www.journaldev.com/1377/java-singleton-design-pattern-best-practices-examples", "ts": 1362326171}], "client_msg_id": "5bb68c77-0e9e-492f-b96f-ff990202e3a6", "datetime": "2019-05-07T10:21:57Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.journaldev.com/1377/java-singleton-design-pattern-best-practices-examples>", "ts": "1557224517.001300", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "724x517px image", "from_url": "http://www.kubikvirrey2.com/wp-content/uploads/2018/10/design-patterns-java-design-pattern-and-implementation-of-singleton-design-pattern-in.png", "id": 1, "image_bytes": 24446, "image_height": 517, "image_url": "http://www.kubikvirrey2.com/wp-content/uploads/2018/10/design-patterns-java-design-pattern-and-implementation-of-singleton-design-pattern-in.png", "image_width": 724, "original_url": "http://www.kubikvirrey2.com/wp-content/uploads/2018/10/design-patterns-java-design-pattern-and-implementation-of-singleton-design-pattern-in.png"}], "client_msg_id": "72221128-e8b2-40bb-9212-1f75808314b8", "datetime": "2019-05-07T10:22:12Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<http://www.kubikvirrey2.com/wp-content/uploads/2018/10/design-patterns-java-design-pattern-and-implementation-of-singleton-design-pattern-in.png>", "ts": "1557224532.001600", "type": "message", "user": "UCZKNV9FB"}
,{"datetime": "2019-05-08T07:33:48Z", "display_as_bot": false, "files": [{"created": 1557300826, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "webm", "has_rich_preview": false, "id": "FJB0JN76D", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "video/webm", "mode": "hosted", "name": "aerP4Yp_460svvp9.webm", "permalink": "https://kgisltraining.slack.com/files/UCZKNV9FB/FJB0JN76D/aerp4yp_460svvp9.webm", "permalink_public": "https://slack-files.com/TD1J2QS86-FJB0JN76D-8d760ca1a1", "pretty_type": "WebM", "public_url_shared": false, "size": 557853, "thumb_video": "https://files.slack.com/files-tmb/TD1J2QS86-FJB0JN76D-1b85ca7348/aerp4yp_460svvp9_thumb_video.jpeg", "timestamp": 1557300826, "title": "File", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJB0JN76D/aerp4yp_460svvp9.webm", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJB0JN76D/download/aerp4yp_460svvp9.webm", "user": "UCZKNV9FB", "username": ""}], "name": "baraneetharan.r", "real_name": "baraneetharan", "text": "Unit test : 2, Integration test : 0", "ts": "1557300828.000700", "type": "message", "upload": true, "user": "UCZKNV9FB"}
,{"client_msg_id": "b55894cb-5cfb-4ac2-a74c-b1e4bd0db43e", "datetime": "2019-05-08T08:40:53Z", "name": "giriprasath.j", "real_name": "Giriprasath J", "team": "TD1J2QS86", "text": "package com.kgisl.junit;\n\nimport java.sql.Connection;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Statement;\n\nimport com.mysql.cj.jdbc.MysqlDataSource;\n\nimport org.apache.commons.dbcp2.BasicDataSource;\n\n/**\n * DataSourceExample\n */\npublic class DataSourceExample {\n    Connection connection = null;\n    // BasicDataSource bdSource = new BasicDataSource();\n    MysqlDataSource bdSource = new MysqlDataSource();\n\n    DataSourceExample() {\n        // Set dataSource Properties\n\n        // bdSource.setDriverClassName(\"com.mysql.jdbc.Driver\");\n        // bdSource.setUrl(\"jdbc:<mysql://localhost:3306/giriprasath%22|mysql://localhost:3306/giriprasath\">);\n        // bdSource.setUsername(\"root\");\n        // bdSource.setPassword(\"\");\n\n        bdSource.setServerName(\"localhost\");\n        bdSource.setPortNumber(3306);\n        bdSource.setDatabaseName(\"giriprasath\");\n        bdSource.setUser(\"root\");\n        bdSource.setPassword(\"\");\n\n    }\n\n    public static void main(String[] args) throws SQLException {\n        display();\n        delete();\n        display();\n        insert();\n        display();\n        update();\n        display();\n    }\n\n    public static void display() throws SQLException {\n        DataSourceExample dsExample = new DataSourceExample();\n        Connection con = dsExample.createConnection();\n        Statement stmt = con.createStatement();\n        String query = \"SELECT * FROM student\";\n        ResultSet rs = stmt.executeQuery(query);\n        while (rs.next()) {\n            System.out.println(\"Name- \" + rs.getString(\"Name\") + \", RollNo- \" + rs.getInt(\"RollNo\") + \", Dept- \"\n                    + rs.getString(\"Dept\") + \", College- \" + rs.getString(\"College\"));\n        }\n        rs.close();\n        stmt.close();\n        con.close();\n\n    }\n\n    public static void insert() throws SQLException {\n        String query = \"insert into student values ('Gone Fishing', 3001, 'IT', 'KITE')\";\n        System.out.println(\"\\nThe SQL statement is: \" + query + \"\\n\"); // Echo for debugging\n        DataSourceExample dsExample = new DataSourceExample();\n        Connection con = dsExample.createConnection();\n        Statement stmt = con.createStatement();\n        int countInserted = stmt.executeUpdate(query);\n        System.out.println(countInserted + \" records inserted.\\n\");\n\n        stmt.close();\n        con.close();\n    }\n\n    public static void delete() throws SQLException {\n        String query = \"delete from student where RollNo =3001\";\n        System.out.println(\"\\nThe SQL statement is: \" + query + \"\\n\"); // Echo for debugging\n        DataSourceExample dsExample = new DataSourceExample();\n        Connection con = dsExample.createConnection();\n        Statement stmt = con.createStatement();\n        int countDeleted = stmt.executeUpdate(query);\n        System.out.println(countDeleted + \" records deleted.\\n\");\n\n        stmt.close();\n\n    }\n\n    public static void update() throws SQLException {\n        String query = \"update student set Name='GiriPrasath' where RollNo =1001\";\n        System.out.println(\"\\nThe SQL statement is: \" + query + \"\\n\"); // Echo for debugging\n        DataSourceExample dsExample = new DataSourceExample();\n        Connection con = dsExample.createConnection();\n        Statement stmt = con.createStatement();\n        int countDeleted = stmt.executeUpdate(query);\n        System.out.println(countDeleted + \" records updated.\\n\");\n\n        stmt.close();\n\n    }\n\n    private Connection createConnection() {\n        Connection con = null;\n        try {\n\n            con = bdSource.getConnection();\n        } catch (Exception e) {\n            System.out.println(\"Error Occured \" + e.toString());\n        }\n        return con;\n    }\n}", "ts": "1557304853.001100", "type": "message", "user": "UHL7N6QQN"}
,{"client_msg_id": "4d57ea3e-97a1-4906-b6ab-67ca03422a71", "datetime": "2019-05-08T12:51:07Z", "name": "manimekalai.k", "real_name": "manimekalai kumarasamy", "team": "TD1J2QS86", "text": "public static void multiplesinsertuspreparedstatement() throws SQLException {\n\n    String query = \" insert into student (RollNo ,  Name , Course , Address  )\"\n        + \" values (?, ?, ?, ?)\";\n    List&lt;Student&gt; al = new ArrayList&lt;Student&gt;();\n    al.add(new Student(11,\"Aaaa\",\"IT\",\"XXXXX\"));\n    al.add(new Student(12,\"Aaaa\",\"IT\",\"XXXXX\"));\n    al.add(new Student(13,\"Aaaa\",\"IT\",\"XXXXX\"));\n\n    System.out.println(\"\\nThe SQL statement is: \" + query + \"\\n\"); // Echo for debugging\n    DataSourceExample dsExample = new DataSourceExample();\n    Connection con = dsExample.createConnection();\n   PreparedStatement preparedStmt = con.prepareStatement(query);\n   int i=0;\n   for (Student data : al) {\n      preparedStmt.setInt (1, data.getRollno());\n      preparedStmt.setString (2, data.getName());\n      preparedStmt.setString   (3, data.getCourse());\n      preparedStmt.setString(4, data.getAddress());\n      i+=preparedStmt.executeUpdate();\n   }\n      System.out.println(i);\n\n    con.close();\n}", "ts": "1557319867.001800", "type": "message", "user": "UHS8LESTB"}
,{"attachments": [{"fallback": "658x408px image", "from_url": "https://javaconceptoftheday.com/wp-content/uploads/2015/09/StatementVsPreparedStatementVsCallableStatement.png", "id": 1, "image_bytes": 13516, "image_height": 408, "image_url": "https://javaconceptoftheday.com/wp-content/uploads/2015/09/StatementVsPreparedStatementVsCallableStatement.png", "image_width": 658, "original_url": "https://javaconceptoftheday.com/wp-content/uploads/2015/09/StatementVsPreparedStatementVsCallableStatement.png"}], "client_msg_id": "df77a881-288a-4605-a8c8-aaef84d6b6f4", "datetime": "2019-05-08T13:01:58Z", "name": "sanjeevi.p", "real_name": "sanjeevi", "team": "TD1J2QS86", "text": "<https://javaconceptoftheday.com/wp-content/uploads/2015/09/StatementVsPreparedStatementVsCallableStatement.png>", "ts": "1557320518.002000", "type": "message", "user": "UH5DG3BA7"}
,{"client_msg_id": "19e572ea-1240-4f89-811c-f2d359a55c2f", "datetime": "2019-05-09T03:36:46Z", "display_as_bot": false, "files": [{"created": 1557373006, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "java", "has_rich_preview": false, "id": "FJC2U4FTK", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "text/plain", "mode": "hosted", "name": "MysqlConnect.java", "permalink": "https://kgisltraining.slack.com/files/UHS8LESTB/FJC2U4FTK/mysqlconnect.java", "permalink_public": "https://slack-files.com/TD1J2QS86-FJC2U4FTK-4a0f578fb8", "pretty_type": "Java", "public_url_shared": false, "size": 2818, "timestamp": 1557373006, "title": "MysqlConnect.java", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJC2U4FTK/mysqlconnect.java", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJC2U4FTK/download/mysqlconnect.java", "user": "UHS8LESTB", "username": ""}], "name": "manimekalai.k", "real_name": "manimekalai kumarasamy", "text": "", "ts": "1557373006.000500", "type": "message", "upload": true, "user": "UHS8LESTB"}
,{"attachments": [{"fallback": "JDBC DataSource Example", "from_url": "https://www.roseindia.net/tutorial/java/jdbc/jdbcdatasourceexample.html", "id": 1, "original_url": "https://www.roseindia.net/tutorial/java/jdbc/jdbcdatasourceexample.html", "service_icon": "https://www.roseindia.net/favicon.ico", "service_name": "roseindia.net", "text": "jdbc datasource example, jdbc datasource, jdbc datasource tutorial, jdbc datasource code, jdbc datasource sample code, jdbc datasource connection, jdbc datasource mysql, datasource in jdbc, datasource, datasource example in java, JDBC DataSource Example, In this tutorial you will learn about JDBC DataSource, and how to use DataSource to get a connection", "title": "JDBC DataSource Example", "title_link": "https://www.roseindia.net/tutorial/java/jdbc/jdbcdatasourceexample.html"}], "client_msg_id": "2dacd0f9-27c6-421d-9cef-463a2f8cb2bd", "datetime": "2019-05-09T03:37:57Z", "name": "manimekalai.k", "real_name": "manimekalai kumarasamy", "team": "TD1J2QS86", "text": "<https://www.roseindia.net/tutorial/java/jdbc/jdbcdatasourceexample.html>", "ts": "1557373077.000900", "type": "message", "user": "UHS8LESTB"}
,{"client_msg_id": "77d4faca-1786-44d5-b080-4945aa782d38", "datetime": "2019-05-09T03:40:31Z", "name": "manimekalai.k", "real_name": "manimekalai kumarasamy", "team": "TD1J2QS86", "text": "<https://docs.oracle.com/javase/7/docs/api/java/sql/ResultSet.html>", "ts": "1557373231.001200", "type": "message", "user": "UHS8LESTB"}
,{"client_msg_id": "d17f4d28-7849-45d5-a128-1e82542d7e31", "datetime": "2019-05-09T03:49:08Z", "name": "manimekalai.k", "real_name": "manimekalai kumarasamy", "team": "TD1J2QS86", "text": "List&lt;Object&gt; list = MysqlConnect.getDbCon().resultSetToArrayList(query);\n            List&lt;Country&gt; countryList = (List&lt;Country&gt;)(List&lt;?&gt;)list;", "ts": "1557373748.001400", "type": "message", "user": "UHS8LESTB"}
,{"client_msg_id": "0d1c9909-06e9-4f7e-b074-38551892ad6b", "datetime": "2019-05-09T12:15:58Z", "name": "krishnan.u", "real_name": "Krishnan U", "team": "TD1J2QS86", "text": "private LocalDateTime releasedate;\n\nLocalDate releasedate;\n        releasedate = LocalDate.of(2015, 06, 26);", "ts": "1557404158.001600", "type": "message", "user": "UHY0FCFKN"}
,{"client_msg_id": "7841f63c-34ee-4e84-8002-d3cbd6d06614", "datetime": "2019-05-09T13:07:43Z", "name": "krishnan.u", "real_name": "Krishnan U", "team": "TD1J2QS86", "text": "package com.kgisl.excel;\n\nimport java.util.*;\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Statement;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.opencsv.CSVReader;\nimport com.mysql.cj.jdbc.MysqlDataSource;\n\n/**\n * CRUD_DB\n */\npublic class CsvToDB\n{\n    Connection connection = null;\n    // BasicDataSource bdSource = new BasicDataSource();\n    MysqlDataSource bdSource = new MysqlDataSource();\n\n    CsvToDB()\n    {\n        // Set dataSource Properties\n\n        // bdSource.setDriverClassName(\"com.mysql.jdbc.Driver\");\n        // bdSource.setUrl(\"jdbc:<mysql://localhost:3306/giriprasath%22|mysql://localhost:3306/giriprasath\">);\n        // bdSource.setUsername(\"root\");\n        // bdSource.setPassword(\"\");\n\n        bdSource.setServerName(\"localhost\");\n        bdSource.setPortNumber(3306);\n        bdSource.setDatabaseName(\"student?allowPublicKeyRetrieval=true&amp;useSSL=false&amp;serverTimezone=UTC\");\n        bdSource.setUser(\"root\");\n        bdSource.setPassword(\"\");\n\n    }\n\n    public static void main(String[] args) throws SQLException, IOException\n    {\n\n       display();\n        insert();\n        System.out.println(\"after insertion :\");\n        display();\n\n    }\n\n    public static void display() throws SQLException\n     {\n        CsvToDB dsExample = new CsvToDB();\n        Connection con = dsExample.createConnection();\n        Statement stmt = con.createStatement();\n        String query = \"SELECT * FROM employee1\";\n        ResultSet rs = stmt.executeQuery(query);\n        while (rs.next())\n        {\n            System.out.println( \"RollNo- \" + rs.getInt(\"id\") + \", Name- \" + rs.getString(\"name\") +\", Age- \"\n                    + rs.getString(\"age\") + \", Country- \" + rs.getString(\"country\"));\n        }\n        rs.close();\n        stmt.close();\n        con.close();\n\n    }\n\n    public static void insert() throws SQLException, FileNotFoundException\n    {\n        String query = \"insert into employee1 (id,name,age,country)\" + \"values(?,?,?,?)\";\n        CsvToDB dsExample = new CsvToDB();\n        Connection con = dsExample.createConnection();\n        PreparedStatement prstm = con.prepareStatement(query);\n\n\n\t\tCSVReader reader = new CSVReader(new FileReader(\"D:\\\\krishna\\\\New folder\\\\1234\\\\emps.csv\"), ',');\n\n        List&lt;Employee&gt; emps = new ArrayList&lt;Employee&gt;();\n\t\t//read line by line\n\t\tString[] record = null;\n\n        try {\n            while ((record = reader.readNext()) != null) {\n                Employee emp = new Employee();\n                emp.setId(record[0]);\n                emp.setName(record[1]);\n                emp.setAge(record[2]);\n                emp.setCountry(record[3]);\n                emps.add(emp);\n            }\n        } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n            int i=1;\n            for (Employee    var : emps)\n            {\n            prstm.setString(1, var.getId());\n            prstm.setString(2, var.getName());\n            prstm.setString(3, var.getAge());\n            prstm.setString(4, var.getCountry());\n            i+=prstm.executeUpdate();\n\t\t    }\n\n            System.out.println(i);\n            System.out.println(emps);\n\t\t\n            try {\n            reader.close();\n        } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n\n        }\n\n\n\t\n        private Connection createConnection()\n        {\n            Connection con = null;\n            try\n            {\n\n                con = bdSource.getConnection();\n            }\n            catch (Exception e)\n            {\n                System.out.println(\"Error Occured \" + e.toString());\n            }\n            return con;\n\n    }\n}", "ts": "1557407263.002000", "type": "message", "user": "UHY0FCFKN"}
,{"datetime": "2019-05-13T08:52:07Z", "display_as_bot": false, "files": [{"created": 1557737525, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "mp4", "has_rich_preview": false, "id": "FJMFUQWKX", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "video/mp4", "mode": "hosted", "name": "popular_programming_languages_stack_overflow.mp4", "permalink": "https://kgisltraining.slack.com/files/UCZKNV9FB/FJMFUQWKX/popular_programming_languages_stack_overflow.mp4", "permalink_public": "https://slack-files.com/TD1J2QS86-FJMFUQWKX-e71c49464f", "pretty_type": "MPEG 4 Video", "public_url_shared": false, "size": 4489271, "timestamp": 1557737525, "title": "File from Android", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJMFUQWKX/popular_programming_languages_stack_overflow.mp4", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJMFUQWKX/download/popular_programming_languages_stack_overflow.mp4", "user": "UCZKNV9FB", "username": ""}], "name": "baraneetharan.r", "reactions": [{"count": 1, "name": "+1", "users": ["UHN5D2Q92"]}], "real_name": "baraneetharan", "text": "Programming languages race", "ts": "1557737527.000900", "type": "message", "upload": true, "user": "UCZKNV9FB"}
,{"client_msg_id": "e5dbd41c-f459-433e-a686-d7df0ef37165", "datetime": "2019-05-13T09:12:09Z", "display_as_bot": false, "files": [{"created": 1557738727, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "png", "has_rich_preview": false, "id": "FJA474KSP", "image_exif_rotation": 1, "is_external": false, "is_public": true, "is_starred": false, "mimetype": "image/png", "mode": "hosted", "name": "javatestMay13.PNG", "original_h": 485, "original_w": 324, "permalink": "https://kgisltraining.slack.com/files/UCZKNV9FB/FJA474KSP/javatestmay13.png", "permalink_public": "https://slack-files.com/TD1J2QS86-FJA474KSP-88ff8b8631", "pretty_type": "PNG", "public_url_shared": false, "size": 17712, "thumb_160": "https://files.slack.com/files-tmb/TD1J2QS86-FJA474KSP-697ff6aed7/javatestmay13_160.png", "thumb_360": "https://files.slack.com/files-tmb/TD1J2QS86-FJA474KSP-697ff6aed7/javatestmay13_360.png", "thumb_360_h": 360, "thumb_360_w": 240, "thumb_480": "https://files.slack.com/files-tmb/TD1J2QS86-FJA474KSP-697ff6aed7/javatestmay13_480.png", "thumb_480_h": 480, "thumb_480_w": 321, "thumb_64": "https://files.slack.com/files-tmb/TD1J2QS86-FJA474KSP-697ff6aed7/javatestmay13_64.png", "thumb_80": "https://files.slack.com/files-tmb/TD1J2QS86-FJA474KSP-697ff6aed7/javatestmay13_80.png", "timestamp": 1557738727, "title": "javatestMay13.PNG", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJA474KSP/javatestmay13.png", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJA474KSP/download/javatestmay13.png", "user": "UCZKNV9FB", "username": ""}], "name": "baraneetharan.r", "real_name": "baraneetharan", "text": "", "ts": "1557738729.001700", "type": "message", "upload": true, "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "GitHub: baraneetharan/javatest", "from_url": "https://github.com/baraneetharan/javatest/blob/master/testMay13th.txt", "id": 1, "original_url": "https://github.com/baraneetharan/javatest/blob/master/testMay13th.txt", "service_icon": "https://a.slack-edge.com/bfaba/img/unfurl_icons/github.png", "service_name": "GitHub", "text": "Contribute to baraneetharan/javatest development by creating an account on GitHub.", "thumb_height": 420, "thumb_url": "https://avatars2.githubusercontent.com/u/5837908?s=400&v=4", "thumb_width": 420, "title": "baraneetharan/javatest", "title_link": "https://github.com/baraneetharan/javatest/blob/master/testMay13th.txt"}], "client_msg_id": "b50df0b2-9f3c-46ad-b7f4-e7a62b4b3b98", "datetime": "2019-05-13T09:12:29Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://github.com/baraneetharan/javatest/blob/master/testMay13th.txt>", "ts": "1557738749.002100", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "672717aa-b585-4fac-9878-fdb53c2aa3f3", "datetime": "2019-05-13T09:13:46Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "Create a new maven project and solve your programming problems", "ts": "1557738826.003300", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "500x393px image", "from_url": "http://agilelion.com/sites/default/files/field/image/Agile_Pyramid.jpg", "id": 1, "image_bytes": 40425, "image_height": 393, "image_url": "http://agilelion.com/sites/default/files/field/image/Agile_Pyramid.jpg", "image_width": 500, "original_url": "http://agilelion.com/sites/default/files/field/image/Agile_Pyramid.jpg"}, {"fallback": "1531x376px image", "from_url": "https://cdn-images-1.medium.com/max/1600/1*u8EkWJKo52kzIKXAQHcxyw.png", "id": 2, "image_bytes": 55899, "image_height": 376, "image_url": "https://cdn-images-1.medium.com/max/1600/1*u8EkWJKo52kzIKXAQHcxyw.png", "image_width": 1531, "original_url": "https://cdn-images-1.medium.com/max/1600/1*u8EkWJKo52kzIKXAQHcxyw.png"}, {"fallback": "910x626px image", "from_url": "http://nicocasel.net/blog/wp-content/uploads/2017/06/12-agile-principles.png", "id": 3, "image_bytes": 62776, "image_height": 626, "image_url": "http://nicocasel.net/blog/wp-content/uploads/2017/06/12-agile-principles.png", "image_width": 910, "original_url": "http://nicocasel.net/blog/wp-content/uploads/2017/06/12-agile-principles.png"}, {"fallback": "924x568px image", "from_url": "https://issart.com/blog/wp-content/uploads/2018/01/scrum-vs-kanban-comparison-diagram-common-agile-principles.png", "id": 4, "image_bytes": 110682, "image_height": 568, "image_url": "https://issart.com/blog/wp-content/uploads/2018/01/scrum-vs-kanban-comparison-diagram-common-agile-principles.png", "image_width": 924, "original_url": "https://issart.com/blog/wp-content/uploads/2018/01/scrum-vs-kanban-comparison-diagram-common-agile-principles.png"}], "client_msg_id": "5a4c323c-6641-486e-9751-88d73f73e7e7", "datetime": "2019-05-14T03:55:44Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<http://agilelion.com/sites/default/files/field/image/Agile_Pyramid.jpg>\n<https://cdn-images-1.medium.com/max/1600/1*u8EkWJKo52kzIKXAQHcxyw.png>\n<http://nicocasel.net/blog/wp-content/uploads/2017/06/12-agile-principles.png>\n<https://issart.com/blog/wp-content/uploads/2018/01/scrum-vs-kanban-comparison-diagram-common-agile-principles.png>", "ts": "1557806144.000200", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "05553a61-9cd3-4d1b-a38f-f789d844cd0c", "datetime": "2019-05-14T09:11:52Z", "edited": {"ts": "1557835626.000000", "user": "UCZKNV9FB"}, "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "Trade\nUccCode, TradeDate, Scrip, TradeType, Quantity, TradePrice\n\nBhavCopy\nTradeDate, Scrip, ClosingPrice", "ts": "1557825112.001400", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "GitHub: baraneetharan/eBarter", "from_url": "https://github.com/baraneetharan/eBarter", "id": 1, "original_url": "https://github.com/baraneetharan/eBarter", "service_icon": "https://a.slack-edge.com/bfaba/img/unfurl_icons/github.png", "service_name": "GitHub", "text": "eBarter online share trading. Contribute to baraneetharan/eBarter development by creating an account on GitHub.", "thumb_height": 420, "thumb_url": "https://avatars2.githubusercontent.com/u/5837908?s=400&v=4", "thumb_width": 420, "title": "baraneetharan/eBarter", "title_link": "https://github.com/baraneetharan/eBarter"}], "client_msg_id": "3f483609-ef24-4e33-8d3c-abc5771a753f", "datetime": "2019-05-14T11:46:42Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://github.com/baraneetharan/eBarter>", "ts": "1557834402.001600", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "9470f239-016a-4808-9376-38741f901567", "datetime": "2019-05-14T12:16:59Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "File read and write using opencsv - Bay3 (Amirtha,Meena,Anandraj,Krishnan)\nsorting,sum, Avg Stream - Bay4 (Devi,Jajja,Sasikumar,Gowtham)\nBrokerage calculation - Bay1 (GopalaKrishnan,Mohana,Jeevitha,Swetha,Prabhakar)\nUsing property file -Bay5 (GiriPrasath, Sanjeev, Kavin,Kannan )\nCompare two arraylists - Bay6 ( Manimegalai,Uma,Banu,Naveen)\nJDBC connection - Bay2 (SheinsDiwakar, SasikumarB,Cladis,Ramya)", "ts": "1557836219.005700", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "968cdbf4-49a3-430e-ba09-a90b77eee381", "datetime": "2019-05-15T04:06:05Z", "display_as_bot": false, "files": [{"created": 1557893165, "display_as_bot": false, "edit_link": "https://kgisltraining.slack.com/files/UH5DG3BA7/FJCCRCKH8/database.properties/edit", "editable": true, "external_type": "", "filetype": "text", "has_rich_preview": false, "id": "FJCCRCKH8", "is_external": false, "is_public": true, "is_starred": false, "lines": 10, "lines_more": 5, "mimetype": "text/plain", "mode": "snippet", "name": "database.properties", "permalink": "https://kgisltraining.slack.com/files/UH5DG3BA7/FJCCRCKH8/database.properties", "permalink_public": "https://slack-files.com/TD1J2QS86-FJCCRCKH8-d91d685c43", "pretty_type": "Plain Text", "preview": "# MySQL DB properties\r\njdbc.driver=com.mysql.jdbc.Driver\r\njdbc.url=jdbc:mysql://localhost:3306/batch2019\r\njdbc.username=root\r\njdbc.password=\r", "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre># MySQL DB properties</pre></div>\n<div><pre>jdbc.driver=com.mysql.jdbc.Driver</pre></div>\n<div><pre>jdbc.url=jdbc:mysql://localhost:3306/batch2019</pre></div>\n<div><pre>jdbc.username=root</pre></div>\n<div><pre>jdbc.password=</pre></div>\n<div><pre></pre></div>\n</div>\n</div>\n", "preview_is_truncated": false, "public_url_shared": false, "size": 205, "timestamp": 1557893165, "title": "database.properties", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJCCRCKH8/database.properties", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJCCRCKH8/download/database.properties", "user": "UH5DG3BA7", "username": ""}], "name": "sanjeevi.p", "real_name": "sanjeevi", "text": "", "ts": "1557893165.000600", "type": "message", "upload": true, "user": "UH5DG3BA7"}
,{"client_msg_id": "bcaecdb7-b0a8-4223-b211-90f5df95cf57", "datetime": "2019-05-15T04:06:31Z", "display_as_bot": false, "files": [{"created": 1557893191, "display_as_bot": false, "edit_link": "https://kgisltraining.slack.com/files/UH5DG3BA7/FJP9RHR0U/dbproperties.java/edit", "editable": true, "external_type": "", "filetype": "java", "has_rich_preview": false, "id": "FJP9RHR0U", "is_external": false, "is_public": true, "is_starred": false, "lines": 46, "lines_more": 41, "mimetype": "text/plain", "mode": "snippet", "name": "DbProperties.java", "permalink": "https://kgisltraining.slack.com/files/UH5DG3BA7/FJP9RHR0U/dbproperties.java", "permalink_public": "https://slack-files.com/TD1J2QS86-FJP9RHR0U-3f95091982", "pretty_type": "Java", "preview": "package com.kgisl.qs1;\r\n\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r", "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-keyword\">package</span> <span class=\"cm-def\">com</span>.<span class=\"cm-variable\">kgisl</span>.<span class=\"cm-variable\">qs1</span>;</pre></div>\n<div><pre>&#8203;</pre></div>\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">java</span>.<span class=\"cm-variable\">io</span>.<span class=\"cm-variable\">FileInputStream</span>;</pre></div>\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">java</span>.<span class=\"cm-variable\">io</span>.<span class=\"cm-variable\">IOException</span>;</pre></div>\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">java</span>.<span class=\"cm-variable\">io</span>.<span class=\"cm-variable\">InputStream</span>;</pre></div>\n</div>\n</div>\n", "preview_is_truncated": true, "public_url_shared": false, "size": 1586, "timestamp": 1557893191, "title": "DbProperties.java", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJP9RHR0U/dbproperties.java", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJP9RHR0U/download/dbproperties.java", "user": "UH5DG3BA7", "username": ""}], "name": "sanjeevi.p", "real_name": "sanjeevi", "text": "", "ts": "1557893191.000900", "type": "message", "upload": true, "user": "UH5DG3BA7"}
,{"client_msg_id": "860115cf-f52a-4e18-99fa-bfc10ad0a50b", "datetime": "2019-05-15T05:57:51Z", "name": "manimekalai.k", "real_name": "manimekalai kumarasamy", "team": "TD1J2QS86", "text": "&lt;dependency&gt;\n\t  &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;\n\t  &lt;artifactId&gt;gson&lt;/artifactId&gt;\n\t  &lt;version&gt;2.2.4&lt;/version&gt;\n        &lt;/dependency&gt;", "ts": "1557899871.001300", "type": "message", "user": "UHS8LESTB"}
,{"client_msg_id": "f04974fa-227b-4401-87b8-1556054b7f41", "datetime": "2019-05-15T05:58:35Z", "display_as_bot": false, "files": [{"created": 1557899915, "display_as_bot": false, "edit_link": "https://kgisltraining.slack.com/files/UHS8LESTB/FJHGHV5S5/tradecontroller.java/edit", "editable": true, "external_type": "", "filetype": "java", "has_rich_preview": false, "id": "FJHGHV5S5", "is_external": false, "is_public": true, "is_starred": false, "lines": 30, "lines_more": 25, "mimetype": "text/plain", "mode": "snippet", "name": "TradeController.java", "permalink": "https://kgisltraining.slack.com/files/UHS8LESTB/FJHGHV5S5/tradecontroller.java", "permalink_public": "https://slack-files.com/TD1J2QS86-FJHGHV5S5-89b29945f5", "pretty_type": "Java", "preview": "package com.kgisl.jsonsample;\r\n\r\nimport java.time.LocalDate;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r", "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-keyword\">package</span> <span class=\"cm-def\">com</span>.<span class=\"cm-variable\">kgisl</span>.<span class=\"cm-variable\">jsonsample</span>;</pre></div>\n<div><pre>&#8203;</pre></div>\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">java</span>.<span class=\"cm-variable\">time</span>.<span class=\"cm-variable\">LocalDate</span>;</pre></div>\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">java</span>.<span class=\"cm-variable\">util</span>.<span class=\"cm-variable\">ArrayList</span>;</pre></div>\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">java</span>.<span class=\"cm-variable\">util</span>.<span class=\"cm-variable\">List</span>;</pre></div>\n</div>\n</div>\n", "preview_is_truncated": true, "public_url_shared": false, "size": 1489, "timestamp": 1557899915, "title": "TradeController.java", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJHGHV5S5/tradecontroller.java", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJHGHV5S5/download/tradecontroller.java", "user": "UHS8LESTB", "username": ""}], "name": "manimekalai.k", "real_name": "manimekalai kumarasamy", "text": "", "ts": "1557899915.001400", "type": "message", "upload": true, "user": "UHS8LESTB"}
,{"client_msg_id": "9123cdfe-285d-4473-a1b1-8730da25595d", "datetime": "2019-05-15T06:17:15Z", "display_as_bot": false, "files": [{"created": 1557901035, "display_as_bot": false, "edit_link": "https://kgisltraining.slack.com/files/UHS8LESTB/FJCEGNG1Y/trades.txt/edit", "editable": true, "external_type": "", "filetype": "text", "has_rich_preview": false, "id": "FJCEGNG1Y", "is_external": false, "is_public": true, "is_starred": false, "lines": 11, "lines_more": 6, "mimetype": "text/plain", "mode": "snippet", "name": "trades.txt", "permalink": "https://kgisltraining.slack.com/files/UHS8LESTB/FJCEGNG1Y/trades.txt", "permalink_public": "https://slack-files.com/TD1J2QS86-FJCEGNG1Y-569c4418cc", "pretty_type": "Plain Text", "preview": "id,ucccode,tradedate,scrip,tradetype,quantity,price\r\n1, ucccode2, 2019-5-23, CIPLA, S, 1500, 250\r\n2, ucccode2, 2019-5-23, HDFC, S, 1500, 250\r\n3, ucccode1, 2019-5-23, LT, B, 1500, 250\r\n4, ucccode3, 2019-5-23, MARUTI, B, 1500, 250\r", "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>id,ucccode,tradedate,scrip,tradetype,quantity,price</pre></div>\n<div><pre>1, ucccode2, 2019-5-23, CIPLA, S, 1500, 250</pre></div>\n<div><pre>2, ucccode2, 2019-5-23, HDFC, S, 1500, 250</pre></div>\n<div><pre>3, ucccode1, 2019-5-23, LT, B, 1500, 250</pre></div>\n<div><pre>4, ucccode3, 2019-5-23, MARUTI, B, 1500, 250</pre></div>\n<div><pre></pre></div>\n</div>\n</div>\n", "preview_is_truncated": false, "public_url_shared": false, "size": 494, "timestamp": 1557901035, "title": "trades.txt", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJCEGNG1Y/trades.txt", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJCEGNG1Y/download/trades.txt", "user": "UHS8LESTB", "username": ""}], "name": "manimekalai.k", "real_name": "manimekalai kumarasamy", "text": "", "ts": "1557901035.001700", "type": "message", "upload": true, "user": "UHS8LESTB"}
,{"datetime": "2019-05-15T06:56:41Z", "display_as_bot": false, "files": [{"created": 1557903401, "display_as_bot": false, "edit_link": "https://kgisltraining.slack.com/files/UHS8LESTB/FJPTRTY1W/tradeasjson.java/edit", "editable": true, "external_type": "", "filetype": "java", "has_rich_preview": false, "id": "FJPTRTY1W", "is_external": false, "is_public": true, "is_starred": false, "lines": 284, "lines_more": 279, "mimetype": "text/plain", "mode": "snippet", "name": "tradeAsJSON.java", "permalink": "https://kgisltraining.slack.com/files/UHS8LESTB/FJPTRTY1W/tradeasjson.java", "permalink_public": "https://slack-files.com/TD1J2QS86-FJPTRTY1W-b11f947121", "pretty_type": "Java", "preview": "<dependency>\n\t  <groupId>com.google.code.gson</groupId>\n\t  <artifactId>gson</artifactId>\n\t  <version>2.2.4</version>\n        </dependency>", "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">dependency</span><span class=\"cm-operator\">&gt;</span></pre></div>\n<div><pre>\t  <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">groupId</span><span class=\"cm-operator\">&gt;</span><span class=\"cm-variable\">com</span>.<span class=\"cm-variable\">google</span>.<span class=\"cm-variable\">code</span>.<span class=\"cm-variable\">gson</span><span class=\"cm-operator\">&lt;/</span><span class=\"cm-variable\">groupId</span><span class=\"cm-operator\">&gt;</span></pre></div>\n<div><pre>\t  <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">artifactId</span><span class=\"cm-operator\">&gt;</span><span class=\"cm-variable\">gson</span><span class=\"cm-operator\">&lt;/</span><span class=\"cm-variable\">artifactId</span><span class=\"cm-operator\">&gt;</span></pre></div>\n<div><pre>\t  <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">version</span><span class=\"cm-operator\">&gt;</span><span class=\"cm-number\">2.2</span>.<span class=\"cm-number\">4</span><span class=\"cm-operator\">&lt;/</span><span class=\"cm-variable\">version</span><span class=\"cm-operator\">&gt;</span></pre></div>\n<div><pre>        <span class=\"cm-operator\">&lt;/</span><span class=\"cm-variable\">dependency</span><span class=\"cm-operator\">&gt;</span></pre></div>\n</div>\n</div>\n", "preview_is_truncated": true, "public_url_shared": false, "size": 7579, "timestamp": 1557903401, "title": "tradeAsJSON", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJPTRTY1W/tradeasjson.java", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJPTRTY1W/download/tradeasjson.java", "user": "UHS8LESTB", "username": ""}], "name": "manimekalai.k", "real_name": "manimekalai kumarasamy", "text": "", "ts": "1557903401.002000", "type": "message", "upload": true, "user": "UHS8LESTB"}
,{"client_msg_id": "d5359313-bde4-4412-89cb-6658508e1c82", "datetime": "2019-05-15T06:59:18Z", "display_as_bot": false, "files": [{"created": 1557903558, "display_as_bot": false, "edit_link": "https://kgisltraining.slack.com/files/UHS8LESTB/FJPTTGN64/trades.csv/edit", "editable": true, "external_type": "", "filetype": "csv", "has_rich_preview": false, "id": "FJPTTGN64", "is_external": false, "is_public": true, "is_starred": false, "lines": 12, "lines_more": 7, "mimetype": "text/csv", "mode": "snippet", "name": "trades.csv", "permalink": "https://kgisltraining.slack.com/files/UHS8LESTB/FJPTTGN64/trades.csv", "permalink_public": "https://slack-files.com/TD1J2QS86-FJPTTGN64-084189edc4", "pretty_type": "CSV", "preview": "id,ucccode,tradedate,scrip,tradetype,quantity,price,amount,brokerage,gst,st,netamount\r\n1, ucccode2, 2019-5-23, CIPLA, S,1500,558.9,838350,3562.9875,534.448125,142519.5,691733.0644\r\n2, ucccode2, 2019-5-23, HDFC, S,1500,\"1,977.50\",2966250,12606.5625,1890.984375,504262.5,2447489.953\r\n3, ucccode1, 2019-5-23, LT, B,1500,\"1,350.50\",2025750,8609.4375,1291.415625,344377.5,2380028.353\r\n4, ucccode3, 2019-5-23, MARUTI, B,1500,\"6,608.15\",9912225,42126.95625,6319.043438,1685078.25,11645749.25\r", "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>id,ucccode,tradedate,scrip,tradetype,quantity,price,amount,brokerage,gst,st,netamount</pre></div>\n<div><pre>1, ucccode2, 2019-5-23, CIPLA, S,1500,558.9,838350,3562.9875,534.448125,142519.5,691733.0644</pre></div>\n<div><pre>2, ucccode2, 2019-5-23, HDFC, S,1500,&quot;1,977.50&quot;,2966250,12606.5625,1890.984375,504262.5,2447489.953</pre></div>\n<div><pre>3, ucccode1, 2019-5-23, LT, B,1500,&quot;1,350.50&quot;,2025750,8609.4375,1291.415625,344377.5,2380028.353</pre></div>\n<div><pre>4, ucccode3, 2019-5-23, MARUTI, B,1500,&quot;6,608.15&quot;,9912225,42126.95625,6319.043438,1685078.25,11645749.25</pre></div>\n<div><pre></pre></div>\n</div>\n</div>\n", "preview_is_truncated": true, "public_url_shared": false, "size": 1040, "timestamp": 1557903558, "title": "trades.csv", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJPTTGN64/trades.csv", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJPTTGN64/download/trades.csv", "user": "UHS8LESTB", "username": ""}], "name": "manimekalai.k", "real_name": "manimekalai kumarasamy", "text": "", "ts": "1557903558.002300", "type": "message", "upload": true, "user": "UHS8LESTB"}
,{"client_msg_id": "4b99b868-92b3-4714-942c-37bc7d107afa", "datetime": "2019-05-16T04:15:18Z", "name": "manimekalai.k", "real_name": "manimekalai kumarasamy", "team": "TD1J2QS86", "text": "id\tucccode\ttradedate\tscrip\ttradetype\tquantity\tprice\tMarket amount\tBrokerage%\tbrokerage\tGst%\tgst\tStt%\tstt\tstamp duty\tsd amt\tnetamount sell\tbuy amount\n1\t ucccode2\t 2019-5-23\t CIPLA\t S\t1500\t558.9\t838350\t1.25\t10479.38\t18\t1886\t0.017\t143\t0.001\t8.3835\t825841.62\t850858.38\n2\t ucccode2\t 2019-5-23\t HDFC\t S\t45\t1,977.50\t88987.5\t1.25\t1112.34\t18\t200\t0.017\t15\t\t\t87660.16\t90314.84\n3\t ucccode1\t 2019-5-23\t LT\t B\t2525\t1,350.50\t3410012.5\t1.25\t42625.16\t18\t7673\t0.017\t580\t\t\t3460890.66\t3460890.66\n4\t ucccode3\t 2019-5-23\t MARUTI\t B\t1500\t6,608.15\t9912225\t1.25\t123902.81\t18\t22303\t0.017\t1685\t\t\t10060115.81\t10060115.81\n5\t ucccode2\t 2019-5-23\t ONGC\t B\t1500\t163.65\t245475\t1.25\t3068.44\t18\t552\t0.017\t42\t\t\t249137.44\t249137.44\n6\t ucccode1\t 2019-5-23\t GAIL\t B\t1500\t349.4\t524100\t1.25\t6551.25\t18\t1179\t0.017\t89\t\t\t531919.25\t531919.25\n7\t ucccode3\t 2019-5-23\t CIPLA\t B\t1500\t551.5\t827250\t1.25\t10340.63\t18\t1861\t0.017\t141\t\t\t839592.63\t839592.63\n8\t ucccode3\t 2019-5-23\t GAIL\t S\t1500\t341.5\t512250\t1.25\t6403.13\t18\t1153\t0.017\t87\t\t\t504606.87\t519893.13\n9\t ucccode1\t 2019-5-23\t GAIL\t B\t1500\t343\t514500\t1.25\t6431.25\t18\t1158\t0.017\t87\t\t\t522176.25\t522176.25\n10\t ucccode1\t 2019-5-23\t HDFC\t B\t1500\t1,978.60\t2967900\t1.25\t37098.75\t18\t6678\t0.017\t505\t\t\t3012181.75\t3012181.75", "ts": "1557980118.000500", "type": "message", "user": "UHS8LESTB"}
,{"client_msg_id": "ddf2ebe6-4429-4c37-861c-1dc747cb2f17", "datetime": "2019-05-16T06:29:21Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "@Contract note for a person on given date \nTop Buy scrip in a month \nTop Sell scrip in a month \nTop Turnover scrip \nLow Turnover scrip \nNet pay for each person for given date \nTotal Brokerage for a day \nHighest Brokerage collection day \nAvg Buy price per scrip \nAvg Sell price per scrip \nTotal Brokerage for a person \nHighest Brokerage paid on wich date by a person \nCurrent holding for a person / day \nWho is holding highest share \nDynamic Brokerage, GST, STT \nWho is doing tranaction on every day \n", "ts": "1557988161.000600", "type": "message", "user": "UCZKNV9FB"}
,{"datetime": "2019-05-16T06:38:43Z", "display_as_bot": false, "files": [{"created": 1557988723, "display_as_bot": false, "edit_link": "https://kgisltraining.slack.com/files/UH5FT99QU/FJT050GBZ/brokeragecalculation.java/edit", "editable": true, "external_type": "", "filetype": "java", "has_rich_preview": false, "id": "FJT050GBZ", "is_external": false, "is_public": true, "is_starred": false, "lines": 305, "lines_more": 300, "mimetype": "text/plain", "mode": "snippet", "name": "BrokerageCalculation.java", "permalink": "https://kgisltraining.slack.com/files/UH5FT99QU/FJT050GBZ/brokeragecalculation.java", "permalink_public": "https://slack-files.com/TD1J2QS86-FJT050GBZ-b29834d368", "pretty_type": "Java", "preview": "package com.kgisl.ebarter.model;\n\nimport java.time.LocalDate;\n\n/**", "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-keyword\">package</span> <span class=\"cm-def\">com</span>.<span class=\"cm-variable\">kgisl</span>.<span class=\"cm-variable\">ebarter</span>.<span class=\"cm-variable\">model</span>;</pre></div>\n<div><pre>&#8203;</pre></div>\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">java</span>.<span class=\"cm-variable\">time</span>.<span class=\"cm-variable\">LocalDate</span>;</pre></div>\n<div><pre>&#8203;</pre></div>\n<div><pre><span class=\"cm-comment\">/**</span></pre></div>\n</div>\n</div>\n", "preview_is_truncated": true, "public_url_shared": false, "size": 8414, "timestamp": 1557988723, "title": "BrokerageCalculation", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJT050GBZ/brokeragecalculation.java", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJT050GBZ/download/brokeragecalculation.java", "user": "UH5FT99QU", "username": ""}], "name": "gopalakrishnan.a", "real_name": "Gopalakrishnan Ayyasamy", "text": "", "ts": "1557988723.000700", "type": "message", "upload": true, "user": "UH5FT99QU"}
,{"client_msg_id": "4868d97a-01be-43be-b552-f7f5feee786e", "datetime": "2019-05-16T06:49:54Z", "display_as_bot": false, "files": [{"created": 1557989394, "display_as_bot": false, "edit_link": "https://kgisltraining.slack.com/files/UH5FT99QU/FJTAA6KCN/1.txt/edit", "editable": true, "external_type": "", "filetype": "text", "has_rich_preview": false, "id": "FJTAA6KCN", "is_external": false, "is_public": true, "is_starred": false, "lines": 11, "lines_more": 6, "mimetype": "text/plain", "mode": "snippet", "name": "1.txt", "permalink": "https://kgisltraining.slack.com/files/UH5FT99QU/FJTAA6KCN/1.txt", "permalink_public": "https://slack-files.com/TD1J2QS86-FJTAA6KCN-6ce44a6d16", "pretty_type": "Plain Text", "preview": "id,ucccode,scrip,tradedate,tradetype,quantity,price,amount,brokerage,gst,st,netamount\r\n1,ucccode2,CIPLA,2019-05-23,S,1500,558.9,838350.0,10479.375,1886.2875,142.51950000000002,825841.818\r\n7,ucccode3,CIPLA,2019-05-23,B,420,551.5,231630.0,2895.375,521.1675,39.377100000000006,235085.9196\r\n3,ucccode1,LT,2019-05-23,B,2525,1350.5,3410012.5,42625.15625,7672.528125,579.702125,3460889.8865\r\n2,ucccode2,HDFC,2019-05-23,S,45,1977.5,88987.5,1112.34375,200.22187499999998,15.127875000000001,87659.8065\r", "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>id,ucccode,scrip,tradedate,tradetype,quantity,price,amount,brokerage,gst,st,netamount</pre></div>\n<div><pre>1,ucccode2,CIPLA,2019-05-23,S,1500,558.9,838350.0,10479.375,1886.2875,142.51950000000002,825841.818</pre></div>\n<div><pre>7,ucccode3,CIPLA,2019-05-23,B,420,551.5,231630.0,2895.375,521.1675,39.377100000000006,235085.9196</pre></div>\n<div><pre>3,ucccode1,LT,2019-05-23,B,2525,1350.5,3410012.5,42625.15625,7672.528125,579.702125,3460889.8865</pre></div>\n<div><pre>2,ucccode2,HDFC,2019-05-23,S,45,1977.5,88987.5,1112.34375,200.22187499999998,15.127875000000001,87659.8065</pre></div>\n<div><pre></pre></div>\n</div>\n</div>\n", "preview_is_truncated": true, "public_url_shared": false, "size": 1108, "timestamp": 1557989394, "title": "1.txt", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJTAA6KCN/1.txt", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJTAA6KCN/download/1.txt", "user": "UH5FT99QU", "username": ""}], "name": "gopalakrishnan.a", "real_name": "Gopalakrishnan Ayyasamy", "text": "", "ts": "1557989394.001000", "type": "message", "upload": true, "user": "UH5FT99QU"}
,{"datetime": "2019-05-20T11:44:29Z", "display_as_bot": false, "files": [{"created": 1558352669, "display_as_bot": false, "edit_link": "https://kgisltraining.slack.com/files/UCZKNV9FB/FJN28G317/-.java/edit", "editable": true, "external_type": "", "filetype": "java", "has_rich_preview": false, "id": "FJN28G317", "is_external": false, "is_public": true, "is_starred": false, "lines": 95, "lines_more": 90, "mimetype": "text/plain", "mode": "snippet", "name": "-.java", "permalink": "https://kgisltraining.slack.com/files/UCZKNV9FB/FJN28G317/-.java", "permalink_public": "https://slack-files.com/TD1J2QS86-FJN28G317-b285b736e5", "pretty_type": "Java", "preview": "package com.kgisl.csvread;\n\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport java.util.ArrayList;", "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-keyword\">package</span> <span class=\"cm-def\">com</span>.<span class=\"cm-variable\">kgisl</span>.<span class=\"cm-variable\">csvread</span>;</pre></div>\n<div><pre>&#8203;</pre></div>\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">java</span>.<span class=\"cm-variable\">io</span>.<span class=\"cm-variable\">FileNotFoundException</span>;</pre></div>\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">java</span>.<span class=\"cm-variable\">io</span>.<span class=\"cm-variable\">IOException</span>;</pre></div>\n<div><pre><span class=\"cm-keyword\">import</span> <span class=\"cm-variable\">java</span>.<span class=\"cm-variable\">util</span>.<span class=\"cm-variable\">ArrayList</span>;</pre></div>\n</div>\n</div>\n", "preview_is_truncated": true, "public_url_shared": false, "size": 2693, "timestamp": 1558352669, "title": "Untitled", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJN28G317/-.java", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJN28G317/download/-.java", "user": "UCZKNV9FB", "username": ""}], "name": "baraneetharan.r", "real_name": "baraneetharan", "text": "", "ts": "1558352669.000100", "type": "message", "upload": true, "user": "UCZKNV9FB"}
,{"datetime": "2019-05-21T09:37:19Z", "display_as_bot": false, "files": [{"created": 1558431439, "display_as_bot": false, "edit_link": "https://kgisltraining.slack.com/files/UHXJZBPTM/FJVEVR4L8/-.txt/edit", "editable": true, "external_type": "", "filetype": "text", "has_rich_preview": false, "id": "FJVEVR4L8", "is_external": false, "is_public": true, "is_starred": false, "lines": 102, "lines_more": 97, "mimetype": "text/plain", "mode": "snippet", "name": "-.txt", "permalink": "https://kgisltraining.slack.com/files/UHXJZBPTM/FJVEVR4L8/-.txt", "permalink_public": "https://slack-files.com/TD1J2QS86-FJVEVR4L8-76527e647f", "pretty_type": "Plain Text", "preview": "<form action=\"home.jsp\" method=\"get\">\n            <table border=\"1\">\n                <tr class=\"row\">\n                    <td class=\"col\">TradeID : </td>\n                    <td class=\"col\"><input type=\"number\" name=\"tradeid\" id=\"tradeid\"></td>", "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>&lt;form action=&quot;home.jsp&quot; method=&quot;get&quot;&gt;</pre></div>\n<div><pre>            &lt;table border=&quot;1&quot;&gt;</pre></div>\n<div><pre>                &lt;tr class=&quot;row&quot;&gt;</pre></div>\n<div><pre>                    &lt;td class=&quot;col&quot;&gt;TradeID : &lt;/td&gt;</pre></div>\n<div><pre>                    &lt;td class=&quot;col&quot;&gt;&lt;input type=&quot;number&quot; name=&quot;tradeid&quot; id=&quot;tradeid&quot;&gt;&lt;/td&gt;</pre></div>\n</div>\n</div>\n", "preview_is_truncated": true, "public_url_shared": false, "size": 3634, "timestamp": 1558431439, "title": "Untitled", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJVEVR4L8/-.txt", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJVEVR4L8/download/-.txt", "user": "UHXJZBPTM", "username": ""}], "is_starred": true, "name": "jeevitha.yuvaraj", "real_name": "Jeevitha Yuvaraj", "text": "", "ts": "1558431439.000900", "type": "message", "upload": true, "user": "UHXJZBPTM"}
,{"attachments": [{"fallback": "www.tutorialspoint.com: HTML Forms", "from_url": "https://www.tutorialspoint.com/html/html_forms.htm", "id": 1, "original_url": "https://www.tutorialspoint.com/html/html_forms.htm", "service_icon": "https://www.tutorialspoint.com/favicon.ico", "service_name": "www.tutorialspoint.com", "text": "HTML Forms - Learn HTML to develop your website in simple and easy steps starting from basic to advanced concepts with examples including overview, basic tags, meta tags, attributes, formatting, phrase tags, comments, fonts, marquees, images, links, tables, frames, lists, layouts, colors, forms, backgrounds, style sheet, javascript.", "title": "HTML Forms", "title_link": "https://www.tutorialspoint.com/html/html_forms.htm"}, {"fallback": "HTML Forms", "from_url": "https://www.w3schools.com/html/html_forms.asp", "id": 2, "original_url": "https://www.w3schools.com/html/html_forms.asp", "service_icon": "https://www.w3schools.com/favicon.ico", "service_name": "w3schools.com", "text": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.", "title": "HTML Forms", "title_link": "https://www.w3schools.com/html/html_forms.asp"}, {"fallback": "JSP Tutorial for Beginners: Learn in 7 Days", "from_url": "https://www.guru99.com/jsp-tutorial.html", "id": 3, "original_url": "https://www.guru99.com/jsp-tutorial.html", "service_name": "guru99.com", "text": "Training Summary JSP (JavaServer Page) is a Java based server side programming language used for developing web-based applications. In this tutorial, you will learn various concept of JSP like Java Servlets", "title": "JSP Tutorial for Beginners: Learn in 7 Days", "title_link": "https://www.guru99.com/jsp-tutorial.html"}, {"fallback": "beginnersbook.com: JSP tutorial for beginners with examples - Java Server Pages", "from_url": "https://beginnersbook.com/jsp-tutorial-for-beginners/", "id": 4, "original_url": "https://beginnersbook.com/jsp-tutorial-for-beginners/", "service_icon": "https://beginnersbook.com/wp-content/uploads/2016/03/favicon2.png", "service_name": "beginnersbook.com", "text": "Java Server Pages (JSP) is a server side technology for developing dynamic web pages. This is mainly used for implementing presentation layer (GUI Part)", "title": "JSP tutorial for beginners with examples - Java Server Pages", "title_link": "https://beginnersbook.com/jsp-tutorial-for-beginners/"}], "client_msg_id": "a0504861-ddce-463e-95bf-dd0f340e48e2", "datetime": "2019-05-21T09:42:35Z", "name": "jeevitha.yuvaraj", "real_name": "Jeevitha Yuvaraj", "team": "TD1J2QS86", "text": "<https://www.tutorialspoint.com/html/html_forms.htm>\n<https://www.w3schools.com/html/html_forms.asp>\n\n<https://www.guru99.com/jsp-tutorial.html>\n<https://beginnersbook.com/jsp-tutorial-for-beginners/>", "ts": "1558431755.001300", "type": "message", "user": "UHXJZBPTM"}
,{"client_msg_id": "07e9d883-8c34-4849-b822-f3ba834adfe9", "datetime": "2019-05-22T06:11:54Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.slideshare.net/rizaman/exploring-the-java-servlet-technology>\n<https://www.slideshare.net/martyhall/jsp-and-servlet-tutorial-servlet-basics>\n<https://image.slidesharecdn.com/q7m2chapter2-160322015257/95/exploring-the-java-servlet-technology-4-638.jpg?cb=1458611710>\n<https://www.codeproject.com/KB/web-cache/cacheinwebfarmandwebgarde/States.JPG>\n<https://qph.fs.quoracdn.net/main-qimg-2d824814982ef3568d2690434e64761f.webp>\n<https://www.java-forums.org/attachments/ocpjwcd/2632d1326391817t-tutorial-review-http-methods-servlet-api-web-component-developer-exam-a13-httpservletallmethods.jpg>", "ts": "1558505514.000300", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "0798c5d9-cc6f-443c-8521-6802b6b08cbb", "datetime": "2019-05-24T06:42:17Z", "name": "mohanapriya.s", "real_name": "Mohanapriya", "team": "TD1J2QS86", "text": "<https://maven.apache.org/download.cgi>\n\nMAVEN_HOME\nD:\\apache-maven-3.6.1\n\nJAVA_HOME\nC:\\Program Files\\Java\\jdk1.8.0_121\n\n%MAVEN_HOME%\\bin\n%JAVA_HOME%\\bin", "ts": "1558680137.000300", "type": "message", "user": "UJXF8CDQE"}
,{"attachments": [{"fallback": "Stack Overflow: RequestDispatcher.forward() vs HttpServletResponse.sendRedirect()", "from_url": "https://stackoverflow.com/questions/2047122/requestdispatcher-forward-vs-httpservletresponse-sendredirect", "id": 1, "original_url": "https://stackoverflow.com/questions/2047122/requestdispatcher-forward-vs-httpservletresponse-sendredirect", "service_icon": "https://cdn.sstatic.net/Sites/stackoverflow/img/favicon.ico?v=4f32ecc8f43d", "service_name": "Stack Overflow", "text": "What is the conceptual difference between forward() and sendRedirect()?", "thumb_height": 316, "thumb_url": "https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded", "thumb_width": 316, "title": "RequestDispatcher.forward() vs HttpServletResponse.sendRedirect()", "title_link": "https://stackoverflow.com/questions/2047122/requestdispatcher-forward-vs-httpservletresponse-sendredirect"}, {"fallback": "1184x442px image", "from_url": "https://i.stack.imgur.com/RtckU.png", "id": 2, "image_bytes": 80451, "image_height": 442, "image_url": "https://i.stack.imgur.com/RtckU.png", "image_width": 1184, "original_url": "https://i.stack.imgur.com/RtckU.png"}], "client_msg_id": "25e71004-a762-488f-bb24-ed8390ebb23b", "datetime": "2019-05-27T05:15:23Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://stackoverflow.com/questions/2047122/requestdispatcher-forward-vs-httpservletresponse-sendredirect>\n\n<https://i.stack.imgur.com/RtckU.png>\n&lt;context-param&gt;\n       &lt;param-name&gt;user_name&lt;/param-name&gt;\n       &lt;param-value&gt;Welcome to SpLessons&lt;/param-value&gt;\n    &lt;/context-param&gt;\n\n ServletContext context = getServletContext();\n        String fullname = context.getInitParameter(\"user_name\");\n\n\n&lt;servlet&gt;\n        &lt;servlet-name&gt;DemoServlet&lt;/servlet-name&gt;\n        &lt;servlet-class&gt;config2.DemoServlet&lt;/servlet-class&gt;\n        &lt;init-param&gt;\n        &lt;param-name&gt;splesson&lt;/param-name&gt;\n        &lt;param-value&gt;Hey man stop thinking start coding&lt;/param-value&gt;\n        &lt;/init-param&gt;\n  &lt;/servlet&gt;\n ServletConfig config=getServletConfig();\n        String splesson=config.getInitParameter(\"splesson\");", "ts": "1558934123.001100", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "1730cf18-72f0-415e-8792-57eeb0f800de", "datetime": "2019-05-27T10:58:35Z", "display_as_bot": false, "files": [{"created": 1558954715, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "zip", "has_rich_preview": false, "id": "FJPGRLQUA", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "application/zip", "mode": "hosted", "name": "ebarterweb-master.zip", "permalink": "https://kgisltraining.slack.com/files/UHY0FCFKN/FJPGRLQUA/ebarterweb-master.zip", "permalink_public": "https://slack-files.com/TD1J2QS86-FJPGRLQUA-a00a4fe9d5", "pretty_type": "Zip", "public_url_shared": false, "size": 14190670, "timestamp": 1558954715, "title": "ebarterweb-master.zip", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJPGRLQUA/ebarterweb-master.zip", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJPGRLQUA/download/ebarterweb-master.zip", "user": "UHY0FCFKN", "username": ""}], "name": "krishnan.u", "real_name": "Krishnan U", "text": "", "ts": "1558954715.001300", "type": "message", "upload": true, "user": "UHY0FCFKN"}
,{"client_msg_id": "83f6efcf-e2f6-42b1-8e43-617502bf24c5", "datetime": "2019-05-28T12:19:59Z", "display_as_bot": false, "files": [{"created": 1559045999, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "zip", "has_rich_preview": false, "id": "FJQCMNZAN", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "application/zip", "mode": "hosted", "name": "ebarterweb-master (4).zip", "permalink": "https://kgisltraining.slack.com/files/UHY0FCFKN/FJQCMNZAN/ebarterweb-master__4_.zip", "permalink_public": "https://slack-files.com/TD1J2QS86-FJQCMNZAN-2c9004cf57", "pretty_type": "Zip", "public_url_shared": false, "size": 14186987, "timestamp": 1559045999, "title": "ebarterweb-master (4).zip", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJQCMNZAN/ebarterweb-master__4_.zip", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJQCMNZAN/download/ebarterweb-master__4_.zip", "user": "UHY0FCFKN", "username": ""}], "name": "krishnan.u", "real_name": "Krishnan U", "text": "", "ts": "1559045999.000700", "type": "message", "upload": true, "user": "UHY0FCFKN"}
,{"client_msg_id": "96905e11-8c5a-415c-8587-ab42e75e19df", "datetime": "2019-05-28T13:35:33Z", "display_as_bot": false, "files": [{"created": 1559050533, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "zip", "has_rich_preview": false, "id": "FK3NGT7SB", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "application/zip", "mode": "hosted", "name": "ebarterweb-master (5).zip", "permalink": "https://kgisltraining.slack.com/files/UHY0FCFKN/FK3NGT7SB/ebarterweb-master__5_.zip", "permalink_public": "https://slack-files.com/TD1J2QS86-FK3NGT7SB-94a079500f", "pretty_type": "Zip", "public_url_shared": false, "size": 14191276, "timestamp": 1559050533, "title": "ebarterweb-master (5).zip", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FK3NGT7SB/ebarterweb-master__5_.zip", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FK3NGT7SB/download/ebarterweb-master__5_.zip", "user": "UHY0FCFKN", "username": ""}], "name": "krishnan.u", "real_name": "Krishnan U", "text": "", "ts": "1559050533.001100", "type": "message", "upload": true, "user": "UHY0FCFKN"}
,{"attachments": [{"fallback": "JournalDev: ServletContextListener Servlet Listener Example - JournalDev", "from_url": "https://www.journaldev.com/1945/servletcontextlistener-servlet-listener-example", "id": 1, "original_url": "https://www.journaldev.com/1945/servletcontextlistener-servlet-listener-example", "service_icon": "https://cdn.journaldev.com/wp-content/uploads/2018/12/cropped-512x512-transparent-180x180.png", "service_name": "JournalDev", "text": "ServletContextListener. Servlet Listener example. ServletContextAttributeListener, HttpSessionListener, ServletRequestListener examples, Download Project.", "thumb_height": 315, "thumb_url": "https://www.journaldev.com/wp-content/uploads/2013/08/servletcontextlistener-servlet-listener-example.jpg", "thumb_width": 560, "title": "ServletContextListener Servlet Listener Example - JournalDev", "title_link": "https://www.journaldev.com/1945/servletcontextlistener-servlet-listener-example", "ts": 1376456860}], "client_msg_id": "0e38b55d-3175-44a9-b9db-425ce14b99f0", "datetime": "2019-05-29T04:13:10Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.journaldev.com/1945/servletcontextlistener-servlet-listener-example>\n\nEvent- something which happened. E.g. Mouse clicks, key down,etc\nEvent Handler- A callback which is usually called when there is an event\nEvent Listener- Detect an event and call the event handler\n\nA listener is an object that subscribes for events from a source. Cf. the observer pattern. Usually you can have many listeners subscribing for each type of event, and they are added through addXyzListener methods.\nExample: The MouseListener in the Java API.\n\nA handler is an object that is responsible for handling certain events. A typical scenario would be to provide a handler for a specific event/task as an argument to a constructor, or set the handler through a setXyzHandler method. In other words, you usually have one handler for each type of event.\nExample: The MemoryHandler in the Java API.\n\nEvent Listener- Detect an event and call the event handler", "ts": "1559103190.001700", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "8e001ce2-9b55-44e6-8ed2-64bb4d881f19", "datetime": "2019-05-29T04:41:01Z", "display_as_bot": false, "files": [{"created": 1559104861, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "zip", "has_rich_preview": false, "id": "FJWBTUF7T", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "application/zip", "mode": "hosted", "name": "servletlistner.zip", "permalink": "https://kgisltraining.slack.com/files/UCZKNV9FB/FJWBTUF7T/servletlistner.zip", "permalink_public": "https://slack-files.com/TD1J2QS86-FJWBTUF7T-3ff1e825c6", "pretty_type": "Zip", "public_url_shared": false, "size": 5169348, "timestamp": 1559104861, "title": "servletlistner.zip", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJWBTUF7T/servletlistner.zip", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJWBTUF7T/download/servletlistner.zip", "user": "UCZKNV9FB", "username": ""}], "name": "baraneetharan.r", "real_name": "baraneetharan", "text": "", "ts": "1559104861.001900", "type": "message", "upload": true, "user": "UCZKNV9FB"}
,{"client_msg_id": "51d76c6a-01ca-49b2-b07a-1b39e0e5e5a3", "datetime": "2019-05-29T06:34:42Z", "name": "krishnan.u", "real_name": "Krishnan U", "team": "TD1J2QS86", "text": "<https://www.heidisql.com/downloads/releases/HeidiSQL_10.1_64_Portable.zip>\n\nCREATE TABLE trade ( Id int(4), Ucccode varchar(50), Scrip varchar(50), TradeDate varchar(50), TradeType varchar(50), Quantity int(10) , TradePrice int(10));\n\nINSERT INTO trade (Id, Ucccode, Scrip, TradeDate, TradeType, Quantity, TradePrice) VALUES (1, 'ucccode2', 'S', '2019-05-23', 'CIPLA', 1500, 559);\nINSERT INTO trade (Id, Ucccode, Scrip, TradeDate, TradeType, Quantity, TradePrice) VALUES (2, 'ucccode2', 'S', '2019-05-23', 'HDFC', 45, 1978);\nINSERT INTO trade (Id, Ucccode, Scrip, TradeDate, TradeType, Quantity, TradePrice) VALUES (3, 'ucccode1', 'B', '2019-05-23', 'LT', 2525, 1351);\nINSERT INTO trade (Id, Ucccode, Scrip, TradeDate, TradeType, Quantity, TradePrice) VALUES (4, 'ucccode3', 'B', '2019-05-23', 'MARUTI', 150, 6608);\nINSERT INTO trade (Id, Ucccode, Scrip, TradeDate, TradeType, Quantity, TradePrice) VALUES (5, 'ucccode2', 'B', '2019-05-23', 'ONGC', 225, 164);\nINSERT INTO trade (Id, Ucccode, Scrip, TradeDate, TradeType, Quantity, TradePrice) VALUES (6, 'ucccode1', 'B', '2019-05-23', 'GAIL', 335, 349);\nINSERT INTO trade (Id, Ucccode, Scrip, TradeDate, TradeType, Quantity, TradePrice) VALUES (7, 'ucccode3', 'B', '2019-05-23', 'CIPLA', 420, 552);\nINSERT INTO trade (Id, Ucccode, Scrip, TradeDate, TradeType, Quantity, TradePrice) VALUES (8, 'ucccode3', 'S', '2019-05-23', 'GAIL', 515, 342);\nINSERT INTO trade (Id, Ucccode, Scrip, TradeDate, TradeType, Quantity, TradePrice) VALUES (9, 'ucccode1', 'B', '2019-05-23', 'GAIL', 1005, 343);\nINSERT INTO trade (Id, Ucccode, Scrip, TradeDate, TradeType, Quantity, TradePrice) VALUES (10, 'ucccode1', 'B', '2019-05-23', 'HDFC', 780, 1979);\n\n*Create PROCEDURE*\n\nCREATE PROCEDURE trade()\nBEGIN\nSELECT * FROM trade;\nEND\n\n*Execute Procedure*\nCALL trades", "ts": "1559111682.002400", "type": "message", "user": "UHY0FCFKN"}
,{"client_msg_id": "c18f0b4e-9dab-47c6-b848-97af67c3e85b", "datetime": "2019-05-29T13:17:26Z", "display_as_bot": false, "files": [{"created": 1559135846, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "zip", "has_rich_preview": false, "id": "FK34X0LGY", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "application/zip", "mode": "hosted", "name": "webservlet.zip", "permalink": "https://kgisltraining.slack.com/files/UH5GTPK52/FK34X0LGY/webservlet.zip", "permalink_public": "https://slack-files.com/TD1J2QS86-FK34X0LGY-4d956b4da5", "pretty_type": "Zip", "public_url_shared": false, "size": 1530577, "timestamp": 1559135846, "title": "webservlet.zip", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FK34X0LGY/webservlet.zip", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FK34X0LGY/download/webservlet.zip", "user": "UH5GTPK52", "username": ""}], "name": "ramya.a", "real_name": "Ramya Ayyanar", "text": "", "ts": "1559135846.002500", "type": "message", "upload": true, "user": "UH5GTPK52"}
,{"attachments": [{"fallback": "WebServlet annotation examples", "from_url": "https://www.codejava.net/java-ee/servlet/webservlet-annotation-examples", "id": 1, "original_url": "https://www.codejava.net/java-ee/servlet/webservlet-annotation-examples", "service_name": "codejava.net", "text": "Code examples of how to use WebServlet annotation. Syntax and attributes description also included.", "title": "WebServlet annotation examples", "title_link": "https://www.codejava.net/java-ee/servlet/webservlet-annotation-examples"}], "client_msg_id": "8d64470b-8690-4212-983e-5ae06126e341", "datetime": "2019-05-29T13:19:49Z", "name": "ramya.a", "real_name": "Ramya Ayyanar", "team": "TD1J2QS86", "text": "<https://www.codejava.net/java-ee/servlet/webservlet-annotation-examples>", "ts": "1559135989.002900", "type": "message", "user": "UH5GTPK52"}
,{"attachments": [{"fallback": "www.tutorialspoint.com: Servlets Annotations", "from_url": "https://www.tutorialspoint.com/servlets/servlets-annotations.htm", "id": 1, "original_url": "https://www.tutorialspoint.com/servlets/servlets-annotations.htm", "service_icon": "https://www.tutorialspoint.com/favicon.ico", "service_name": "www.tutorialspoint.com", "text": "Servlets Annotations - Learning Java Servlets in simple and easy steps using this beginner's tutorial containing basic to advanced knowledge of Java Servlet Technology including Form Data, HTTP Request Header, Response Header, Status Codes, Cookies Handling and Session Tracking, Annotations.", "title": "Servlets Annotations", "title_link": "https://www.tutorialspoint.com/servlets/servlets-annotations.htm"}], "client_msg_id": "9e48c75f-7821-4052-9a1f-0e6e97a4f19c", "datetime": "2019-05-30T03:33:04Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://docs.oracle.com/javaee/6/api/javax/servlet/annotation/package-summary.html>\n<https://www.tutorialspoint.com/servlets/servlets-annotations.htm>", "ts": "1559187184.000200", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "ac930f55-187f-49a9-be22-1cc8c8138f58", "datetime": "2019-05-30T03:41:32Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.logicbig.com/tutorials/java-ee-tutorial/java-servlet/servlet-annotations.html>", "ts": "1559187692.000500", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "519x304px image", "from_url": "https://www.sitesbay.com/servlet/images/http-protocol.png", "id": 1, "image_bytes": 28118, "image_height": 304, "image_url": "https://www.sitesbay.com/servlet/images/http-protocol.png", "image_width": 519, "original_url": "https://www.sitesbay.com/servlet/images/http-protocol.png"}, {"fallback": "552x286px image", "from_url": "https://www.sitesbay.com/servlet/images/session-tracking.png", "id": 2, "image_bytes": 17910, "image_height": 286, "image_url": "https://www.sitesbay.com/servlet/images/session-tracking.png", "image_width": 552, "original_url": "https://www.sitesbay.com/servlet/images/session-tracking.png"}], "client_msg_id": "7ec8483f-6fe4-4b88-b10e-d70d2900679e", "datetime": "2019-05-31T05:01:26Z", "edited": {"ts": "1559278941.000000", "user": "UHS7TD97T"}, "name": "naveenkumar.a", "real_name": "Naveenkumar A", "team": "TD1J2QS86", "text": "*Session Tracking*\n\n*Session* - particular interval of time\n*Tracking* - recording of the thing\n\nSession Tracking is remembering and recording of client conversion in span of time. It is also called as session management.\n\n\n\n<https://www.sitesbay.com/servlet/images/http-protocol.png>\n\n*Http protocol is stateless*\n\nHttp protocol is stateless, that means each *request is considered as the new request*.\n\n\nIf Http is *stateful protocol* for multiple requests given by client to web application single connection will be used between browser and web server across the multiple requests\n\n*Session Tracking Techniques*\n\nCookies\nURL Rewriting\nHidden Form Field\nHttpSession\n\n<https://www.sitesbay.com/servlet/images/session-tracking.png>\n\n\n*Cookies*\n\nName:&lt;input type=\"text\" name=\"userName\"/&gt; &lt;br/&gt;\n\n*Servlet1*\nString n=request.getParameter(\"userName\");\n*javax.servlet.http.Cookie*\n\nCookie ck=new Cookie(\"uname\",n);//creating cookie object\nresponse.addCookie(ck);//adding cookie in the response\n\nform action goes to *'servlet2'*\n\n*Servlet2*\nCookie ck[]=request.getCookies();\nck[0].getValue();", "ts": "1559278886.001500", "type": "message", "user": "UHS7TD97T"}
,{"client_msg_id": "2f626d5e-883d-4ec4-bade-a6a8c8401f78", "datetime": "2019-05-31T08:30:45Z", "display_as_bot": false, "files": [{"converted_pdf": "https://files.slack.com/files-tmb/TD1J2QS86-FJZ0JAYD7-1abb2611b1/sql_assignments_converted.pdf", "created": 1559291443, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "doc", "has_rich_preview": false, "id": "FJZ0JAYD7", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "application/msword", "mode": "hosted", "name": "SQL Assignments.doc", "permalink": "https://kgisltraining.slack.com/files/UH5FW4EVA/FJZ0JAYD7/sql_assignments.doc", "permalink_public": "https://slack-files.com/TD1J2QS86-FJZ0JAYD7-1ee9468212", "pretty_type": "Word Document", "public_url_shared": false, "size": 36352, "thumb_pdf": "https://files.slack.com/files-tmb/TD1J2QS86-FJZ0JAYD7-1abb2611b1/sql_assignments_thumb_pdf.png", "thumb_pdf_h": 1210, "thumb_pdf_w": 935, "timestamp": 1559291443, "title": "SQL Assignments.doc", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJZ0JAYD7/sql_assignments.doc", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJZ0JAYD7/download/sql_assignments.doc", "user": "UH5FW4EVA", "username": ""}], "name": "kavinprasath.g", "real_name": "Kavin Prasath G", "text": "", "ts": "1559291445.001800", "type": "message", "upload": true, "user": "UH5FW4EVA"}
,{"attachments": [{"fallback": "Free online java tutorial: Servlet Jsp HttpSession Login logout example | Http session login logout - Candidjava", "from_url": "http://candidjava.com/tutorial/servlet-jsp-httpsession-login-logout-example/", "id": 1, "original_url": "http://candidjava.com/tutorial/servlet-jsp-httpsession-login-logout-example/", "service_icon": "http://candidjava.com/tutorial/wp-content/uploads/2017/08/cropped-candidjava_logo-180x180.png", "service_name": "Free online java tutorial", "text": "Example program for Http Session login and log out here servlet container uses this interface to create a session between an HTTP client and an HTTP server.", "thumb_height": 344, "thumb_url": "https://candidjava.s3.ap-southeast-1.amazonaws.com/post/servlet3/http%20session1/login.png", "thumb_width": 648, "title": "Servlet Jsp HttpSession Login logout example | Http session login logout - Candidjava", "title_link": "http://candidjava.com/tutorial/servlet-jsp-httpsession-login-logout-example/", "ts": 1544795708}], "client_msg_id": "bf5a5cf5-992e-48b1-8d5b-cc40f6f1dded", "datetime": "2019-06-04T03:35:31Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<http://candidjava.com/tutorial/servlet-jsp-httpsession-login-logout-example/>", "ts": "1559619331.000300", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "null: Servlet, Jsp, HttpSession, Login, logout, example, tutorial, download", "from_url": "http://java.candidjava.com/tutorial/Servlet-Jsp-HttpSession-Login-logout-example.htm", "id": 1, "original_url": "http://java.candidjava.com/tutorial/Servlet-Jsp-HttpSession-Login-logout-example.htm", "service_name": "null", "text": "Servlet Jsp HttpSession Login logout example", "title": "Servlet, Jsp, HttpSession, Login, logout, example, tutorial, download", "title_link": "http://java.candidjava.com/tutorial/Servlet-Jsp-HttpSession-Login-logout-example.htm"}], "client_msg_id": "8257e58b-b6dc-4758-aa33-f7cf9b39ad0f", "datetime": "2019-06-04T03:36:05Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<http://java.candidjava.com/tutorial/Servlet-Jsp-HttpSession-Login-logout-example.htm>", "ts": "1559619365.000600", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "57c4dcb4-e1a7-45cc-aa75-e57e01e56d97", "datetime": "2019-06-04T04:13:30Z", "display_as_bot": false, "files": [{"created": 1559621609, "display_as_bot": false, "edit_link": "https://kgisltraining.slack.com/files/UHS7TD97T/FK89AFM3P/session_tracking_cookies.txt/edit", "editable": true, "external_type": "", "filetype": "html", "has_rich_preview": false, "id": "FK89AFM3P", "is_external": false, "is_public": true, "is_starred": false, "lines": 114, "lines_more": 109, "mimetype": "text/plain", "mode": "snippet", "name": "session tracking cookies.txt", "permalink": "https://kgisltraining.slack.com/files/UHS7TD97T/FK89AFM3P/session_tracking_cookies.txt", "permalink_public": "https://slack-files.com/TD1J2QS86-FK89AFM3P-a91493faae", "pretty_type": "HTML", "preview": "index.jsp\r\n\r\n<html>\r\n<body>\r\n<h2>Hello World!</h2>\r", "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>index.jsp</pre></div>\n<div><pre>&#8203;</pre></div>\n<div><pre><span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">html</span><span class=\"cm-tag cm-bracket\">&gt;</span></pre></div>\n<div><pre><span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">body</span><span class=\"cm-tag cm-bracket\">&gt;</span></pre></div>\n<div><pre><span class=\"cm-tag cm-bracket\">&lt;</span><span class=\"cm-tag\">h2</span><span class=\"cm-tag cm-bracket\">&gt;</span>Hello World!<span class=\"cm-tag cm-bracket\">&lt;/</span><span class=\"cm-tag\">h2</span><span class=\"cm-tag cm-bracket\">&gt;</span></pre></div>\n</div>\n</div>\n", "preview_is_truncated": true, "public_url_shared": false, "size": 2889, "timestamp": 1559621609, "title": "session tracking cookies.txt", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FK89AFM3P/session_tracking_cookies.txt", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FK89AFM3P/download/session_tracking_cookies.txt", "user": "UHS7TD97T", "username": ""}], "name": "naveenkumar.a", "real_name": "Naveenkumar A", "text": "", "ts": "1559621610.000800", "type": "message", "upload": true, "user": "UHS7TD97T"}
,{"client_msg_id": "37b0570f-5268-4e58-8ad9-0fd577dc114e", "datetime": "2019-06-06T08:49:16Z", "display_as_bot": false, "files": [{"created": 1559810956, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "zip", "has_rich_preview": false, "id": "FJZHYMBBL", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "application/zip", "mode": "hosted", "name": "PPTs.zip", "permalink": "https://kgisltraining.slack.com/files/UCZKNV9FB/FJZHYMBBL/ppts.zip", "permalink_public": "https://slack-files.com/TD1J2QS86-FJZHYMBBL-587130254f", "pretty_type": "Zip", "public_url_shared": false, "size": 177350, "timestamp": 1559810956, "title": "PPTs.zip", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FJZHYMBBL/ppts.zip", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FJZHYMBBL/download/ppts.zip", "user": "UCZKNV9FB", "username": ""}], "name": "baraneetharan.r", "real_name": "baraneetharan", "text": "PLSQL PPT", "ts": "1559810956.000400", "type": "message", "upload": true, "user": "UCZKNV9FB"}
,{"client_msg_id": "0a3f2a34-3387-433c-9545-baf10ed9c563", "datetime": "2019-06-07T12:32:43Z", "display_as_bot": false, "files": [{"created": 1559910763, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "zip", "has_rich_preview": false, "id": "FK116H5B5", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "application/zip", "mode": "hosted", "name": "servletfilter.zip", "permalink": "https://kgisltraining.slack.com/files/UCZKNV9FB/FK116H5B5/servletfilter.zip", "permalink_public": "https://slack-files.com/TD1J2QS86-FK116H5B5-dc90eff9c1", "pretty_type": "Zip", "public_url_shared": false, "size": 1550645, "timestamp": 1559910763, "title": "servletfilter.zip", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FK116H5B5/servletfilter.zip", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FK116H5B5/download/servletfilter.zip", "user": "UCZKNV9FB", "username": ""}], "name": "baraneetharan.r", "real_name": "baraneetharan", "text": "", "ts": "1559910763.000800", "type": "message", "upload": true, "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "Stack Overflow: How to upload files to server using JSP/Servlet?", "from_url": "https://stackoverflow.com/questions/2422468/how-to-upload-files-to-server-using-jsp-servlet", "id": 1, "original_url": "https://stackoverflow.com/questions/2422468/how-to-upload-files-to-server-using-jsp-servlet", "service_icon": "https://cdn.sstatic.net/Sites/stackoverflow/img/favicon.ico?v=4f32ecc8f43d", "service_name": "Stack Overflow", "text": "How can I upload files to server using JSP/Servlet? I tried this: &lt;form action=\"upload\" method=\"post\"&gt; &lt;input type=\"text\" name=\"description\" /&gt; &lt;input type=\"file\" name=\"file...", "thumb_height": 316, "thumb_url": "https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded", "thumb_width": 316, "title": "How to upload files to server using JSP/Servlet?", "title_link": "https://stackoverflow.com/questions/2422468/how-to-upload-files-to-server-using-jsp-servlet"}, {"fallback": "Java File Upload Example with Servlet 3.0 API", "from_url": "https://www.codejava.net/java-ee/servlet/java-file-upload-example-with-servlet-30-api", "id": 2, "original_url": "https://www.codejava.net/java-ee/servlet/java-file-upload-example-with-servlet-30-api", "service_name": "codejava.net", "text": "How to code file upload functionality in Java with Servlet 3.0 API. Code example and sample application are provided.", "title": "Java File Upload Example with Servlet 3.0 API", "title_link": "https://www.codejava.net/java-ee/servlet/java-file-upload-example-with-servlet-30-api"}, {"fallback": "Baeldung: Uploading Files with Servlets and JSP | Baeldung", "from_url": "https://www.baeldung.com/upload-file-servlet", "id": 3, "image_bytes": 54403, "image_height": 250, "image_url": "https://www.baeldung.com/wp-content/uploads/2018/10/Social-Javaee-4-k-featured-1024x536.jpg", "image_width": 478, "original_url": "https://www.baeldung.com/upload-file-servlet", "service_icon": "https://www.baeldung.com/wp-content/themes/baeldung/favicon/apple-touch-icon-57x57.png", "service_name": "Baeldung", "text": "Have a look at a file upload example with servlets and JSP.", "title": "Uploading Files with Servlets and JSP | Baeldung", "title_link": "https://www.baeldung.com/upload-file-servlet", "ts": 1526738679}], "client_msg_id": "86015fcf-900e-45d4-bfe1-80fd72701527", "datetime": "2019-06-08T04:03:53Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://stackoverflow.com/questions/2422468/how-to-upload-files-to-server-using-jsp-servlet>\n<https://www.codejava.net/java-ee/servlet/java-file-upload-example-with-servlet-30-api>\n<https://www.baeldung.com/upload-file-servlet>", "ts": "1559966633.000200", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "JSP Servlet JDBC MySQL Create Read Update Delete (CRUD) Example", "from_url": "https://www.codejava.net/coding/jsp-servlet-jdbc-mysql-create-read-update-delete-crud-example", "id": 1, "original_url": "https://www.codejava.net/coding/jsp-servlet-jdbc-mysql-create-read-update-delete-crud-example", "service_name": "codejava.net", "text": "A comprehensive and detailed, step by step tutorial that teaches you how to build a Java web application with JSP, Servlet, JDBC, MySQL, Apache Tomcat and Eclipse IDE.", "title": "JSP Servlet JDBC MySQL Create Read Update Delete (CRUD) Example", "title_link": "https://www.codejava.net/coding/jsp-servlet-jdbc-mysql-create-read-update-delete-crud-example"}], "client_msg_id": "ec3cffcb-424a-4dd4-86dc-dbbf19daf951", "datetime": "2019-06-10T12:43:06Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.codejava.net/coding/jsp-servlet-jdbc-mysql-create-read-update-delete-crud-example>", "ts": "1560170586.000800", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "0257debe-168c-4288-b190-9ab05b9d7fa2", "datetime": "2019-06-11T04:16:50Z", "name": "mohanasankari.g", "real_name": "Mohana Sankari.G", "team": "TD1J2QS86", "text": "CREATE PROCEDURE insertuser1\n(IN  id INT ,\nIN uname VARCHAR(20)\n)\nBEGIN\nINSERT INTO USER VALUES(id,uname);\nEND;", "ts": "1560226610.000200", "type": "message", "user": "UH34M9FCG"}
,{"client_msg_id": "f02872d8-37c6-4a07-93cb-16634d6935ec", "datetime": "2019-06-11T04:17:15Z", "name": "mohanasankari.g", "real_name": "Mohana Sankari.G", "team": "TD1J2QS86", "text": "CALL insertuser1(12,'aaa');\nSELECT * FROM USER;", "ts": "1560226635.000400", "type": "message", "user": "UH34M9FCG"}
,{"client_msg_id": "a2da36fc-d314-4adb-bbd3-4c78cc68c784", "datetime": "2019-06-11T04:17:28Z", "name": "mohanasankari.g", "real_name": "Mohana Sankari.G", "team": "TD1J2QS86", "text": "CREATE PROCEDURE CountOrderByStatus1(\n IN ucccode VARCHAR(25),\n OUT total INT)\nBEGIN\n SELECT count(ucccode)\n INTO total\n FROM trade\n WHERE trade.ucccode = ucccode;\nEND;", "ts": "1560226648.000600", "type": "message", "user": "UH34M9FCG"}
,{"client_msg_id": "e5e1046d-9c18-404e-aabe-12e514973056", "datetime": "2019-06-11T04:17:40Z", "name": "mohanasankari.g", "real_name": "Mohana Sankari.G", "team": "TD1J2QS86", "text": "CALL CountOrderByStatus1('ucccode1',@total);\nSELECT @total;", "ts": "1560226660.000800", "type": "message", "user": "UH34M9FCG"}
,{"client_msg_id": "b17db32c-b882-42aa-867b-cd4cd2bd7a76", "datetime": "2019-06-11T04:31:13Z", "display_as_bot": false, "files": [{"created": 1560227472, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "zip", "has_rich_preview": false, "id": "FK3MLDB5Z", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "application/zip", "mode": "hosted", "name": "mysqlsampledatabase.zip", "permalink": "https://kgisltraining.slack.com/files/UH34M9FCG/FK3MLDB5Z/mysqlsampledatabase.zip", "permalink_public": "https://slack-files.com/TD1J2QS86-FK3MLDB5Z-e5ee4e01b7", "pretty_type": "Zip", "public_url_shared": false, "size": 54335, "timestamp": 1560227472, "title": "mysqlsampledatabase.zip", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FK3MLDB5Z/mysqlsampledatabase.zip", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FK3MLDB5Z/download/mysqlsampledatabase.zip", "user": "UH34M9FCG", "username": ""}], "name": "mohanasankari.g", "real_name": "Mohana Sankari.G", "text": "", "ts": "1560227473.000900", "type": "message", "upload": true, "user": "UH34M9FCG"}
,{"attachments": [{"fallback": "JDBC Examples for Calling Stored Procedures (MySQL)", "from_url": "https://www.codejava.net/java-se/jdbc/jdbc-examples-for-calling-stored-procedures-mysql", "id": 1, "original_url": "https://www.codejava.net/java-se/jdbc/jdbc-examples-for-calling-stored-procedures-mysql", "service_name": "codejava.net", "text": "Java JDBC code example to execute stored procedures in databbase", "title": "JDBC Examples for Calling Stored Procedures (MySQL)", "title_link": "https://www.codejava.net/java-se/jdbc/jdbc-examples-for-calling-stored-procedures-mysql"}], "client_msg_id": "4121a954-2f9a-4f81-823b-4abf14ca6baa", "datetime": "2019-06-11T08:55:02Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.codejava.net/java-se/jdbc/jdbc-examples-for-calling-stored-procedures-mysql>", "ts": "1560243302.001700", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "JSP Tutorial for Beginners: Learn in 7 Days", "from_url": "https://www.guru99.com/jsp-tutorial.html", "id": 1, "original_url": "https://www.guru99.com/jsp-tutorial.html", "service_icon": "https://www.guru99.com/images/logo/favicon1.ico", "service_name": "guru99.com", "text": "Training Summary JSP (JavaServer Page) is a Java based server side programming language used for developing web-based applications. In this tutorial, you will learn various concept of JSP like Java Servlets", "title": "JSP Tutorial for Beginners: Learn in 7 Days", "title_link": "https://www.guru99.com/jsp-tutorial.html"}], "client_msg_id": "5165bd52-e192-4c6d-9e8e-f4c706776ac6", "datetime": "2019-06-12T03:22:11Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.guru99.com/jsp-tutorial.html>", "ts": "1560309731.000200", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "Stack Overflow: How to deploy a war file in Tomcat 7", "from_url": "https://stackoverflow.com/questions/5109112/how-to-deploy-a-war-file-in-tomcat-7", "id": 1, "original_url": "https://stackoverflow.com/questions/5109112/how-to-deploy-a-war-file-in-tomcat-7", "service_icon": "https://cdn.sstatic.net/Sites/stackoverflow/img/favicon.ico?v=4f32ecc8f43d", "service_name": "Stack Overflow", "text": "I have copied the sample.war file into the webapps directory of Tomcat, and I can access localhost:8080. Now how will Tomcat deploy it, I mean do I need to open it in browser? How can I access the", "thumb_height": 316, "thumb_url": "https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded", "thumb_width": 316, "title": "How to deploy a war file in Tomcat 7", "title_link": "https://stackoverflow.com/questions/5109112/how-to-deploy-a-war-file-in-tomcat-7"}], "client_msg_id": "2c13c16c-57eb-44b4-8e79-58ae8174efdd", "datetime": "2019-06-14T11:54:17Z", "name": "ramya.a", "real_name": "Ramya Ayyanar", "team": "TD1J2QS86", "text": "<https://tomcat.apache.org/download-80.cgi>\nVSCode --&gt; Tomcat for java extension install\nVSCode --&gt; file explorer --&gt; tomcat servers + (add tomcat installation directory)\nRun Tomcat server\nTarget --&gt; Right click on war --&gt; run on tomcat server\nVSCode --&gt; file explorer --&gt; tomcat servers --&gt; Expnad --&gt; Open in browser --&gt; <http://localhost:8080/>\nClick your Application\n\n<https://stackoverflow.com/questions/5109112/how-to-deploy-a-war-file-in-tomcat-7>", "ts": "1560513257.000600", "type": "message", "user": "UH5GTPK52"}
,{"attachments": [{"fallback": "Spring Projects", "from_url": "https://spring.io/projects", "id": 1, "image_bytes": 11931, "image_height": 250, "image_url": "https://spring.io/img/spring-by-pivotal-9066b55828deb3c10e27e609af322c40.png", "image_width": 769, "original_url": "https://spring.io/projects", "service_icon": "https://spring.io/img/favicon-ca31b78daf0dd9a106bbf3c6d87d4ec7.png", "service_name": "spring.io", "text": "The Spring portfolio has many projects, including Spring Framework, Spring IO Platform, Spring Cloud, Spring Boot, Spring Data, Spring Security...", "title": "Spring Projects", "title_link": "https://spring.io/projects"}, {"fallback": "dzone.com: Why Is the Spring Framework so Popular? - DZone Java", "from_url": "https://dzone.com/articles/why-spring-framework-is-popular", "id": 2, "image_bytes": 132046, "image_height": 250, "image_url": "https://dz2cdn2.dzone.com/storage/article-thumb/10458137-thumb.jpg", "image_width": 400, "original_url": "https://dzone.com/articles/why-spring-framework-is-popular", "service_icon": "https://dzone.com/themes/dz20/images/favicon.png", "service_name": "dzone.com", "text": "In this post, we take a look at why the Spring framework is so popular, specifically it being lightweight, providing transaction management, and more.", "title": "Why Is the Spring Framework so Popular? - DZone Java", "title_link": "https://dzone.com/articles/why-spring-framework-is-popular"}, {"fallback": "503x397px image", "from_url": "https://himanshugpt.files.wordpress.com/2010/07/spring.png?w=503&h=398", "id": 3, "image_bytes": 40034, "image_height": 397, "image_url": "https://himanshugpt.files.wordpress.com/2010/07/spring.png?w=503&h=398", "image_width": 503, "original_url": "https://himanshugpt.files.wordpress.com/2010/07/spring.png?w=503&amp;h=398"}, {"fallback": "Memorynotfound: Spring MVC XML Configuration Example", "from_url": "https://memorynotfound.com/spring-mvc-xml-configuration-example/", "id": 4, "image_bytes": 1602, "image_height": 250, "image_url": "https://memorynotfound.com/wp-content/uploads/spring-logo.png", "image_width": 250, "original_url": "https://memorynotfound.com/spring-mvc-xml-configuration-example/", "service_icon": "https://memorynotfound.com/wp-content/uploads/favicon.png", "service_name": "Memorynotfound", "text": "This tutorial shows how to build a basic web application using Spring MVC XML Configuration. We create a simple controller that\u2019ll handle incomming requests and forwards the response to a simple view that\u2019ll display...", "title": "Spring MVC XML Configuration Example", "title_link": "https://memorynotfound.com/spring-mvc-xml-configuration-example/", "ts": 1462960420}, {"fallback": "Stack Overflow: What are the differences between Model, ModelMap, and ModelAndView?", "from_url": "https://stackoverflow.com/questions/18486660/what-are-the-differences-between-model-modelmap-and-modelandview", "id": 5, "original_url": "https://stackoverflow.com/questions/18486660/what-are-the-differences-between-model-modelmap-and-modelandview", "service_icon": "https://cdn.sstatic.net/Sites/stackoverflow/img/favicon.ico?v=4f32ecc8f43d", "service_name": "Stack Overflow", "text": "What are the main differences between the following Spring Framework classes? Model ModelMap ModelAndView Using Model.put(String,Object) we can access the values in .jsp files, but ModelMap.", "thumb_height": 316, "thumb_url": "https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded", "thumb_width": 316, "title": "What are the differences between Model, ModelMap, and ModelAndView?", "title_link": "https://stackoverflow.com/questions/18486660/what-are-the-differences-between-model-modelmap-and-modelandview"}], "client_msg_id": "306b1ae4-8690-4e0d-a9eb-0fc102e6518c", "datetime": "2019-06-17T07:18:46Z", "name": "sasikumar.b", "real_name": "Sasikumar.b", "team": "TD1J2QS86", "text": "<https://spring.io/projects>\n\n<https://dzone.com/articles/why-spring-framework-is-popular>\n\n<https://himanshugpt.files.wordpress.com/2010/07/spring.png?w=503&amp;h=398>\n\n<https://memorynotfound.com/spring-mvc-xml-configuration-example/>\n\n<https://stackoverflow.com/questions/18486660/what-are-the-differences-between-model-modelmap-and-modelandview>", "ts": "1560755926.000400", "type": "message", "user": "UGX13S9GR"}
,{"attachments": [{"fallback": "Baeldung: Spring @RequestMapping | Baeldung", "from_url": "https://www.baeldung.com/spring-requestmapping", "id": 1, "image_bytes": 14554, "image_height": 250, "image_url": "https://www.baeldung.com/wp-content/uploads/2016/10/social-On-Spring-dark.jpg", "image_width": 478, "original_url": "https://www.baeldung.com/spring-requestmapping", "service_icon": "https://www.baeldung.com/wp-content/themes/baeldung/favicon/apple-touch-icon-57x57.png", "service_name": "Baeldung", "text": "Spring @RequestMapping - Basic Example, @RequestParam, @PathVariable, Header mapping", "title": "Spring @RequestMapping | Baeldung", "title_link": "https://www.baeldung.com/spring-requestmapping", "ts": 1368715880}], "client_msg_id": "f463922e-5121-4e89-ba67-b31e0d6ccc50", "datetime": "2019-06-19T07:15:37Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.baeldung.com/spring-requestmapping>", "ts": "1560928537.000900", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "AJAX The XMLHttpRequest Object", "from_url": "https://www.w3schools.com/xml/ajax_xmlhttprequest_create.asp", "id": 1, "original_url": "https://www.w3schools.com/xml/ajax_xmlhttprequest_create.asp", "service_icon": "https://www.w3schools.com/favicon.ico", "service_name": "w3schools.com", "text": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.", "title": "AJAX The XMLHttpRequest Object", "title_link": "https://www.w3schools.com/xml/ajax_xmlhttprequest_create.asp"}, {"fallback": "HTTP Messages", "from_url": "https://www.w3schools.com/tags/ref_httpmessages.asp", "id": 2, "original_url": "https://www.w3schools.com/tags/ref_httpmessages.asp", "service_icon": "https://www.w3schools.com/favicon.ico", "service_name": "w3schools.com", "text": "Well organized and easy to understand Web building tutorials with lots of examples of how to use HTML, CSS, JavaScript, SQL, PHP, Python, Bootstrap, Java and XML.", "title": "HTTP Messages", "title_link": "https://www.w3schools.com/tags/ref_httpmessages.asp"}, {"fallback": "Spring MVC with JdbcTemplate Example", "from_url": "https://www.codejava.net/frameworks/spring/spring-mvc-with-jdbctemplate-example", "id": 3, "original_url": "https://www.codejava.net/frameworks/spring/spring-mvc-with-jdbctemplate-example", "service_name": "codejava.net", "text": "A comprehensive and well-organized Spring MVC application that demonstrates how to use JdbcTemplate for working with JDBC.", "title": "Spring MVC with JdbcTemplate Example", "title_link": "https://www.codejava.net/frameworks/spring/spring-mvc-with-jdbctemplate-example"}], "client_msg_id": "0b5729bb-583f-4202-9a4a-bdedc5c63fb7", "datetime": "2019-06-20T06:20:53Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.w3schools.com/xml/ajax_xmlhttprequest_create.asp>\n<https://www.w3schools.com/tags/ref_httpmessages.asp>\n<https://www.codejava.net/frameworks/spring/spring-mvc-with-jdbctemplate-example>", "ts": "1561011653.001200", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "dzone.com: Spring MVC Example for User Registration and Login - DZone Web Dev", "from_url": "https://dzone.com/articles/spring-mvc-example-for-user-registration-and-login-1", "id": 1, "image_bytes": 126352, "image_height": 250, "image_url": "https://dz2cdn2.dzone.com/storage/article-thumb/4513025-thumb.jpg", "image_width": 400, "original_url": "https://dzone.com/articles/spring-mvc-example-for-user-registration-and-login-1", "service_icon": "https://dzone.com/themes/dz20/images/favicon.png", "service_name": "dzone.com", "text": "In this post, we'll use languages, like Java and XML, along with a MySQL database to create and set up user registration and login information for you site.", "title": "Spring MVC Example for User Registration and Login - DZone Web Dev", "title_link": "https://dzone.com/articles/spring-mvc-example-for-user-registration-and-login-1"}], "client_msg_id": "2e290329-b41e-4c51-a110-8b7e49fa12df", "datetime": "2019-06-21T03:28:24Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://dzone.com/articles/spring-mvc-example-for-user-registration-and-login-1>", "ts": "1561087704.001500", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "Stack Overflow: Where is the exact location of spring config file and web.xml?", "from_url": "https://stackoverflow.com/questions/17444410/where-is-the-exact-location-of-spring-config-file-and-web-xml", "id": 1, "original_url": "https://stackoverflow.com/questions/17444410/where-is-the-exact-location-of-spring-config-file-and-web-xml", "service_icon": "https://cdn.sstatic.net/Sites/stackoverflow/img/favicon.ico?v=4f32ecc8f43d", "service_name": "Stack Overflow", "text": "Getting the Class Not Found Exception for DispatcherServlet while rendering index.jsp which is in WEB-CONTENT/WEB-INF/jsp/index.jsp Following are how the project is structured. web.xml is under WEB-", "thumb_height": 316, "thumb_url": "https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded", "thumb_width": 316, "title": "Where is the exact location of spring config file and web.xml?", "title_link": "https://stackoverflow.com/questions/17444410/where-is-the-exact-location-of-spring-config-file-and-web-xml"}], "client_msg_id": "b9c4037c-904d-496a-bd01-cc4464d191ee", "datetime": "2019-06-21T10:20:39Z", "name": "ajay.kuttysankaran", "real_name": "Ajay.k", "team": "TD1J2QS86", "text": "<https://stackoverflow.com/questions/17444410/where-is-the-exact-location-of-spring-config-file-and-web-xml>", "ts": "1561112439.001900", "type": "message", "user": "UJVV7QEFN"}
,{"client_msg_id": "1ae17051-348b-4f0e-80be-0337fbcf5278", "datetime": "2019-06-21T10:48:35Z", "display_as_bot": false, "files": [{"created": 1561114113, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "zip", "has_rich_preview": false, "id": "FKRPSAG0L", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "application/zip", "mode": "hosted", "name": "springxml (2).zip", "permalink": "https://kgisltraining.slack.com/files/UJVV7QEFN/FKRPSAG0L/springxml__2_.zip", "permalink_public": "https://slack-files.com/TD1J2QS86-FKRPSAG0L-1cb9cd96a8", "pretty_type": "Zip", "public_url_shared": false, "size": 28660713, "timestamp": 1561114113, "title": "springxml (2).zip", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FKRPSAG0L/springxml__2_.zip", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FKRPSAG0L/download/springxml__2_.zip", "user": "UJVV7QEFN", "username": ""}], "name": "ajay.kuttysankaran", "real_name": "Ajay.k", "text": "", "ts": "1561114115.002200", "type": "message", "upload": true, "user": "UJVV7QEFN"}
,{"client_msg_id": "0a352b96-43f4-4308-b79d-ba3196afdc7e", "datetime": "2019-06-21T12:21:47Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/jdbc/core/JdbcTemplate.html>", "ts": "1561119707.002600", "type": "message", "user": "UCZKNV9FB"}
,{"datetime": "2019-06-25T06:16:05Z", "display_as_bot": false, "files": [{"created": 1561443356, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "jpg", "has_rich_preview": false, "id": "FKV6SF7EU", "image_exif_rotation": 1, "is_external": false, "is_public": true, "is_starred": false, "mimetype": "image/jpeg", "mode": "hosted", "name": "IMG_20190625_103719.jpg", "original_h": 3120, "original_w": 4160, "permalink": "https://kgisltraining.slack.com/files/UCZKNV9FB/FKV6SF7EU/img_20190625_103719.jpg", "permalink_public": "https://slack-files.com/TD1J2QS86-FKV6SF7EU-d2b6285c58", "pretty_type": "JPEG", "public_url_shared": false, "size": 3206129, "thumb_1024": "https://files.slack.com/files-tmb/TD1J2QS86-FKV6SF7EU-2e8b1a7637/img_20190625_103719_1024.jpg", "thumb_1024_h": 768, "thumb_1024_w": 1024, "thumb_160": "https://files.slack.com/files-tmb/TD1J2QS86-FKV6SF7EU-2e8b1a7637/img_20190625_103719_160.jpg", "thumb_360": "https://files.slack.com/files-tmb/TD1J2QS86-FKV6SF7EU-2e8b1a7637/img_20190625_103719_360.jpg", "thumb_360_h": 270, "thumb_360_w": 360, "thumb_480": "https://files.slack.com/files-tmb/TD1J2QS86-FKV6SF7EU-2e8b1a7637/img_20190625_103719_480.jpg", "thumb_480_h": 360, "thumb_480_w": 480, "thumb_64": "https://files.slack.com/files-tmb/TD1J2QS86-FKV6SF7EU-2e8b1a7637/img_20190625_103719_64.jpg", "thumb_720": "https://files.slack.com/files-tmb/TD1J2QS86-FKV6SF7EU-2e8b1a7637/img_20190625_103719_720.jpg", "thumb_720_h": 540, "thumb_720_w": 720, "thumb_80": "https://files.slack.com/files-tmb/TD1J2QS86-FKV6SF7EU-2e8b1a7637/img_20190625_103719_80.jpg", "thumb_800": "https://files.slack.com/files-tmb/TD1J2QS86-FKV6SF7EU-2e8b1a7637/img_20190625_103719_800.jpg", "thumb_800_h": 600, "thumb_800_w": 800, "thumb_960": "https://files.slack.com/files-tmb/TD1J2QS86-FKV6SF7EU-2e8b1a7637/img_20190625_103719_960.jpg", "thumb_960_h": 720, "thumb_960_w": 960, "timestamp": 1561443356, "title": "Spring configuration", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FKV6SF7EU/img_20190625_103719.jpg", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FKV6SF7EU/download/img_20190625_103719.jpg", "user": "UCZKNV9FB", "username": ""}], "name": "baraneetharan.r", "real_name": "baraneetharan", "text": "", "ts": "1561443365.003300", "type": "message", "upload": true, "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "Baeldung: Bootstrap a Web Application with Spring 5 | Baeldung", "from_url": "https://www.baeldung.com/bootstraping-a-web-application-with-spring-and-java-based-configuration", "id": 1, "original_url": "https://www.baeldung.com/bootstraping-a-web-application-with-spring-and-java-based-configuration", "service_icon": "https://www.baeldung.com/wp-content/themes/baeldung/favicon/apple-touch-icon-57x57.png", "service_name": "Baeldung", "text": "Bootstrapping a web application with Spring 4 and Java based Configuration. Discussion about a migration of the Spring configuration from XML to Java, starting with the web.xml.", "thumb_height": 498, "thumb_url": "https://www.baeldung.com/wp-content/uploads/2016/10/social-On-Spring-dark.jpg", "thumb_width": 952, "title": "Bootstrap a Web Application with Spring 5 | Baeldung", "title_link": "https://www.baeldung.com/bootstraping-a-web-application-with-spring-and-java-based-configuration", "ts": 1385407932}, {"fallback": "Baeldung: Spring: web.xml vs Initializer | Baeldung", "from_url": "https://www.baeldung.com/spring-xml-vs-java-config", "id": 2, "original_url": "https://www.baeldung.com/spring-xml-vs-java-config", "service_icon": "https://www.baeldung.com/wp-content/themes/baeldung/favicon/apple-touch-icon-57x57.png", "service_name": "Baeldung", "text": "A quick and practical guide to XML and Java config in Spring.", "thumb_height": 498, "thumb_url": "https://www.baeldung.com/wp-content/uploads/2016/10/social-On-Spring-green.jpg", "thumb_width": 952, "title": "Spring: web.xml vs Initializer | Baeldung", "title_link": "https://www.baeldung.com/spring-xml-vs-java-config", "ts": 1474544878}, {"fallback": "Stack Overflow: The type WebMvcConfigurerAdapter is deprecated", "from_url": "https://stackoverflow.com/questions/47552835/the-type-webmvcconfigureradapter-is-deprecated", "id": 3, "original_url": "https://stackoverflow.com/questions/47552835/the-type-webmvcconfigureradapter-is-deprecated", "service_icon": "https://cdn.sstatic.net/Sites/stackoverflow/img/favicon.ico?v=4f32ecc8f43d", "service_name": "Stack Overflow", "text": "I just migrate to spring mvc version 5.0.1.RELEASE but suddenly in eclipse STS WebMvcConfigurerAdapter is marked as deprecated public class MvcConfig extends WebMvcConfigurerAdapter { @Override ...", "thumb_height": 316, "thumb_url": "https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded", "thumb_width": 316, "title": "The type WebMvcConfigurerAdapter is deprecated", "title_link": "https://stackoverflow.com/questions/47552835/the-type-webmvcconfigureradapter-is-deprecated"}, {"fallback": "Stack Overflow: Order of loading contextConfigLocation in web.xml of Spring Servlet project", "from_url": "https://stackoverflow.com/questions/27539610/order-of-loading-contextconfiglocation-in-web-xml-of-spring-servlet-project", "id": 4, "original_url": "https://stackoverflow.com/questions/27539610/order-of-loading-contextconfiglocation-in-web-xml-of-spring-servlet-project", "service_icon": "https://cdn.sstatic.net/Sites/stackoverflow/img/favicon.ico?v=4f32ecc8f43d", "service_name": "Stack Overflow", "text": "Suppose that I have a Spring Java project and I am trying to configure it as a web server servlet. Here is a stripped-down version of the web.xml file: &lt;context-param&gt; &lt;param-name&gt;", "thumb_height": 316, "thumb_url": "https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded", "thumb_width": 316, "title": "Order of loading contextConfigLocation in web.xml of Spring Servlet project", "title_link": "https://stackoverflow.com/questions/27539610/order-of-loading-contextconfiglocation-in-web-xml-of-spring-servlet-project"}, {"fallback": "Stack Overflow: Difference between applicationContext.xml and spring-servlet.xml in Spring Framework", "from_url": "https://stackoverflow.com/questions/3652090/difference-between-applicationcontext-xml-and-spring-servlet-xml-in-spring-frame", "id": 5, "original_url": "https://stackoverflow.com/questions/3652090/difference-between-applicationcontext-xml-and-spring-servlet-xml-in-spring-frame", "service_icon": "https://cdn.sstatic.net/Sites/stackoverflow/img/favicon.ico?v=4f32ecc8f43d", "service_name": "Stack Overflow", "text": "Are applicationContext.xml and spring-servlet.xml related anyhow in Spring Framework? Will the properties files declared in applicationContext.xml be available to DispatcherServlet? On a related no...", "thumb_height": 316, "thumb_url": "https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded", "thumb_width": 316, "title": "Difference between applicationContext.xml and spring-servlet.xml in Spring Framework", "title_link": "https://stackoverflow.com/questions/3652090/difference-between-applicationcontext-xml-and-spring-servlet-xml-in-spring-frame"}], "client_msg_id": "cbabbdee-02c5-464e-80d8-41fa6101b84d", "datetime": "2019-06-25T08:47:16Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.baeldung.com/bootstraping-a-web-application-with-spring-and-java-based-configuration>\n<https://www.baeldung.com/spring-xml-vs-java-config>\n<https://stackoverflow.com/questions/47552835/the-type-webmvcconfigureradapter-is-deprecated>\n<https://stackoverflow.com/questions/27539610/order-of-loading-contextconfiglocation-in-web-xml-of-spring-servlet-project>\n<https://stackoverflow.com/questions/3652090/difference-between-applicationcontext-xml-and-spring-servlet-xml-in-spring-frame>", "ts": "1561452436.003800", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "35891ab3-ce9b-41e3-bb35-b94f22407dbb", "datetime": "2019-06-27T03:58:16Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "package com.kgisl.springbeanscope;\n\nimport org.springframework.context.annotation.Scope;\nimport org.springframework.context.annotation.ScopedProxyMode;\nimport org.springframework.stereotype.Component;\n\n/**\n * GreetingService\n */\n@Component\n// @Scope(\"singleton\")\n// @Scope(\"prototype\")\n@Scope(value=\"request\", proxyMode =ScopedProxyMode.TARGET_CLASS)\npublic class GreetingService {\n\n    public String greet(){\n        return \"Hello\";\n    }\n}\n\n\n\npackage com.kgisl.springbeanscope;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Scope;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n/**\n * HelloController\n */\n@RestController\n@RequestMapping(\"/\")\npublic class HelloController {\n\n    @Autowired\n    private GreetingService greetingService;\n    @GetMapping\n    public String getall() {\n        String myGreet=greetingService.greet();\n        System.out.println(greetingService);\n        return \"HelloController \"+myGreet;\n    }\n\n}\n\n\n\n\npackage com.kgisl.springbeanscope;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Scope;\nimport org.springframework.web.bind.annotation.DeleteMapping;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PutMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n/**\n * HelloController\n */\n@RestController\n@RequestMapping(\"/home\")\npublic class HomeController {\n\n    @Autowired\n    private GreetingService greetingService;\n    @GetMapping\n    public String getall() {\n        String myGreet=greetingService.greet();\n        System.out.println(greetingService);\n        return \"HomeController \"+myGreet;\n    }\n    @PutMapping\n    public String put() {\n        String myGreet=greetingService.greet();\n        System.out.println(greetingService);\n        return \"HomeController \"+myGreet;\n    }\n    @DeleteMapping\n    public String delete() {\n        String myGreet=greetingService.greet();\n        System.out.println(greetingService);\n        return \"HomeController \"+myGreet;\n    }\n\n}", "ts": "1561607896.004900", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "Spring Bean Scopes", "from_url": "https://www.concretepage.com/spring/spring-bean-scopes", "id": 1, "original_url": "https://www.concretepage.com/spring/spring-bean-scopes", "service_name": "concretepage.com", "text": "This page will walk through spring bean scope example using @Scope annotation and XML for singleton, prototype, request, session, global session and application scope with scoped proxy.", "title": "Spring Bean Scopes", "title_link": "https://www.concretepage.com/spring/spring-bean-scopes"}], "client_msg_id": "ff98304a-eb43-49b0-a4b2-d07599cdce83", "datetime": "2019-06-27T03:58:29Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://www.concretepage.com/spring/spring-bean-scopes>", "ts": "1561607909.005100", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "www.javatpoint.com: Spring Constructor injection - javatpoint", "from_url": "https://www.javatpoint.com/spring-tutorial-dependency-injection-by-constructor", "id": 1, "original_url": "https://www.javatpoint.com/spring-tutorial-dependency-injection-by-constructor", "service_name": "www.javatpoint.com", "text": "Spring Constructor injection or Dependency injection by constructor. Let's see the simple examples to inject dependency by constructor.", "title": "Spring Constructor injection - javatpoint", "title_link": "https://www.javatpoint.com/spring-tutorial-dependency-injection-by-constructor"}], "client_msg_id": "6745bbc1-287a-4971-b512-ca64df328415", "datetime": "2019-06-27T11:56:53Z", "name": "supriya.sanjay", "real_name": "Supriya Sanjay Shinde", "team": "TD1J2QS86", "text": "<https://www.javatpoint.com/spring-tutorial-dependency-injection-by-constructor>", "ts": "1561636613.005500", "type": "message", "user": "UJV8PL3H6"}
,{"client_msg_id": "6bf00643-067e-45c8-b6a8-b0675538f136", "datetime": "2019-06-27T11:57:01Z", "name": "supriya.sanjay", "real_name": "Supriya Sanjay Shinde", "team": "TD1J2QS86", "text": "<https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/BeanFactory.html>", "ts": "1561636621.005800", "type": "message", "user": "UJV8PL3H6"}
,{"client_msg_id": "008fd5a2-2c1b-459b-883f-925ae3c7019d", "datetime": "2019-07-01T10:31:44Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n   &lt;meta charset=\"UTF-8\"&gt;\n   &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n   &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt;\n   &lt;title&gt;Document&lt;/title&gt;\n\n   &lt;script src=\"country.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body onload=\"app.FetchAll()\"&gt;\n   &lt;form action=\"javascript:void(0);\" method=\"POST\" onsubmit=\"app.Add()\"&gt;\n       &lt;input type=\"text\" id=\"countryName\" placeholder=\"New country\"&gt;\n       &lt;input type=\"submit\" id=\"submit\" value=\"Add\"&gt;\n   &lt;/form&gt;\n   &lt;!-- &lt;div id=\"countriesList\"&gt;&lt;/div&gt; --&gt;\n   &lt;table&gt;\n           &lt;tr&gt;\n             &lt;th&gt;Name&lt;/th&gt;\n           &lt;/tr&gt;\n             &lt;tbody id=\"countriesList\"&gt;\n             &lt;/tbody&gt;\n         &lt;/table&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;", "ts": "1561977104.001000", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "2381021d-9af5-4771-8daa-60c4ac589d21", "datetime": "2019-07-01T10:31:52Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "var app = new function () {\n    this.countries = ['France', 'Germany', 'England', 'Spain', 'Belgium', 'Italy', 'Portugal', 'Irland', 'Luxembourg'];\n    // this.countries = [];\n\n    this.FetchAll = function () {\n        alert(\"this.countries.length =\" + this.countries.length);\n        // this.data += '&lt;table&gt;&lt;tr&gt;&lt;th&gt;Name&lt;/th&gt;&lt;/tr&gt;';\n        var data = '';\n        if (this.countries.length &gt; 0) {\n            for (i = 0; i &lt; this.countries.length; i++) {\n\n                data += '&lt;tr&gt;';\n                data += '&lt;td&gt;' + this.countries[i] + '&lt;/td&gt;';\n                data += '&lt;td&gt;&lt;button onclick=\"app.Edit(' + i + ')\"&gt;Edit&lt;/button&gt;&lt;/td&gt;';\n                data += '&lt;td&gt;&lt;button onclick=\"app.Delete(' + i + ')\"&gt;Delete&lt;/button&gt;&lt;/td&gt;';\n                data += '&lt;/tr&gt;';\n            }\n            // this.data += '&lt;table&gt;';\n            console.log(data);\n            document.getElementById(\"countriesList\").innerHTML = data;\n        }\n    };\n\n    this.Edit = function (item) {\n        document.getElementById('submit').value = \"Update\"\n        alert(this.countries[item]);\n        document.getElementById('countryName').value = this.countries[item];\n        this.countries.splice(0, 1, document.getElementById('countryName').value);\n        app.FetchAll();\n    };\n\n    this.Delete = function (item) {\n        alert(this.countries[item]);\n        this.countries.splice(item, 1);\n        app.FetchAll();\n    };\n\n    this.Add = function () {\n        document.getElementById('countryName').value;\n        // alert(document.getElementById('countryName').value);\n        this.countries.push(document.getElementById('countryName').value);\n\n        app.FetchAll();\n    };\n}\n\n // app.FetchAll();", "ts": "1561977112.001200", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "160bd9d4-24bf-4a47-b494-d1a3a9d332c5", "datetime": "2019-07-01T11:30:41Z", "name": "naveenkumar.a", "real_name": "Naveenkumar A", "team": "TD1J2QS86", "text": "====================================country.html==================&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n  &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt;\n  &lt;title&gt;Document&lt;/title&gt;\n\n  &lt;script src=\"country.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body onload=\"app.FetchAll()\"&gt;\n  &lt;form action=\"javascript:void(0);\" method=\"POST\" onsubmit=\"app.AddorUpdate()\"&gt;\n      &lt;input type=\"text\" id=\"countryName\" placeholder=\"New country\"&gt;\n      &lt;input type=\"submit\" id=\"submit\" value=\"Add\"&gt;\n  &lt;/form&gt;\n  &lt;!-- &lt;div id=\"countriesList\"&gt;&lt;/div&gt; --&gt;\n  &lt;table&gt;\n          &lt;tr&gt;\n            &lt;th&gt;Name&lt;/th&gt;\n          &lt;/tr&gt;\n            &lt;tbody id=\"countriesList\"&gt;\n            &lt;/tbody&gt;\n        &lt;/table&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n\n\n===================================country.js====================\nvar app = new function () {\n  this.countries = ['France', 'Germany', 'England', 'Spain', 'Belgium', 'Italy', 'Portugal', 'Irland', 'Luxembourg'];\n  // this.countries = [];\n  this.updateItem=\"\";\n\n  this.FetchAll = function () {\n    // alert(\"this.countries.length =\" + this.countries.length);\n    // this.data += '&lt;table&gt;&lt;tr&gt;&lt;th&gt;Name&lt;/th&gt;&lt;/tr&gt;';\n    var data = '';\n    if (this.countries.length &gt; 0) {\n      for (i = 0; i &lt; this.countries.length; i++) {\n\n        data += '&lt;tr&gt;';\n        data += '&lt;td&gt;' + this.countries[i] + '&lt;/td&gt;';\n        data += '&lt;td&gt;&lt;button onclick=\"app.Edit(' + i + ')\"&gt;Edit&lt;/button&gt;&lt;/td&gt;';\n        data += '&lt;td&gt;&lt;button onclick=\"app.Delete(' + i + ')\"&gt;Delete&lt;/button&gt;&lt;/td&gt;';\n        data += '&lt;/tr&gt;';\n      }\n      // this.data += '&lt;table&gt;';\n      console.log(data);\n      document.getElementById(\"countriesList\").innerHTML = data;\n    }\n  };\n\n  this.Edit = function (item) {\n    this.updateItem=item;\n    document.getElementById('submit').value = \"Update\";\n    document.getElementById('countryName').value = this.countries[item];\n  };\n\n  this.Delete = function (item) {\n    alert(this.countries[item]);\n    this.countries.splice(item, 1);\n    app.FetchAll();\n  };\n\n  this.Add = function () {\n    document.getElementById('countryName').value;\n    // alert(document.getElementById('countryName').value);\n    this.countries.push(document.getElementById('countryName').value);\n\n    app.FetchAll();\n  };\n  this.AddorUpdate = function () {\n    var action = document.getElementById('submit').value;\n    if (action != \"Update\") {\n      document.getElementById('countryName').value;\n      this.countries.push(document.getElementById('countryName').value);\n    }\n    else {\n      var updateCountry = document.getElementById('countryName').value;\n      alert(updateCountry);\n      this.countries.splice(this.updateItem, 1, updateCountry);\n      this.updateItem=\"\";\n      document.getElementById('submit').value = \"add\";\n\n    }\n\n\n    app.FetchAll();\n  };\n}\n\n// app.FetchAll();", "ts": "1561980641.001400", "type": "message", "user": "UHS7TD97T"}
,{"client_msg_id": "6853c6ae-7a7d-42ec-a453-01189c3f7b68", "datetime": "2019-07-02T07:36:51Z", "name": "mohanasankari.g", "real_name": "Mohana Sankari.G", "team": "TD1J2QS86", "text": "<http://dummy.restapiexample.com/>\n\n<https://www.w3schools.com/js/js_ajax_http.asp>\n<https://www.w3schools.com/xml/xml_http.asp>\n<https://gist.github.com/EtienneR/2f3ab345df502bd3d13e>\n<https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop/related?hl=en>\n<https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS>\n<https://chrome.google.com/webstore/detail/allow-control-allow-origi/nlfbmbojpeacfghkpbjhddihlkkiljbi/related?hl=en>\n\n*://*/*\n<https://www.google.com/search?q=cors>", "ts": "1562053011.000300", "type": "message", "user": "UH34M9FCG"}
,{"client_msg_id": "bd2d096c-c5c7-4f26-9394-53ea4567f9d9", "datetime": "2019-07-02T09:18:56Z", "name": "mohanasankari.g", "real_name": "Mohana Sankari.G", "team": "TD1J2QS86", "text": "=============================emp.html\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n    &lt;script src=\"emp.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;input type=\"text\" name=\"name\" id=\"name\"&gt;\n    &lt;input type=\"text\" name=\"salary\" id=\"salary\"&gt;\n    &lt;input type=\"text\" name=\"age\" id=\"age\"&gt;\n    &lt;input type=\"submit\" value=\"submit\" onclick=\"app.add()\"&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n\n\n\n\n===================================emp.js\n\n\n\nvar app = new function () {\n    this.add = function () {\n        // {\"name\":\"test\",\"salary\":\"123\",\"age\":\"23\"}\n\n        var data = {};\n        data.name = document.getElementById(\"name\").value;\n        data.salary = document.getElementById(\"salary\").value;\n        data.age = document.getElementById(\"age\").value;\n        var json = JSON.stringify(data);\n        alert(json);\n        console.log(json);\n\n        // Post a user\n        var xhttp = new XMLHttpRequest();\n        xhttp.open(\"POST\", \"<http://dummy.restapiexample.com/api/v1/create>\", true);\n        xhttp.send(json);\n        xhttp.onreadystatechange = function () {\n            if (this.readyState == 4 &amp;&amp; this.status == 200) {\n                // Typical action to be performed when the document is ready:\n                // document.getElementById(\"demo\").innerHTML = xhttp.responseText;\n            }\n        };\n\n    };\n}", "ts": "1562059136.000500", "type": "message", "user": "UH34M9FCG"}
,{"client_msg_id": "0ce7eaca-2e77-43e7-b65f-7ab51ee30470", "datetime": "2019-07-02T09:56:53Z", "display_as_bot": false, "files": [{"created": 1562061408, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "binary", "has_rich_preview": false, "id": "FKW0C14N5", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "application/octet-stream", "mode": "hosted", "name": "springjson.rar", "permalink": "https://kgisltraining.slack.com/files/UHY0FCFKN/FKW0C14N5/springjson.rar", "permalink_public": "https://slack-files.com/TD1J2QS86-FKW0C14N5-e38c04a2ed", "pretty_type": "Binary", "public_url_shared": false, "size": 34839073, "timestamp": 1562061408, "title": "springjson.rar", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FKW0C14N5/springjson.rar", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FKW0C14N5/download/springjson.rar", "user": "UHY0FCFKN", "username": ""}], "name": "krishnan.u", "real_name": "Krishnan U", "text": "", "ts": "1562061413.000600", "type": "message", "upload": true, "user": "UHY0FCFKN"}
,{"attachments": [{"fallback": "Stack Overflow: Configuration using annotation @SpringBootApplication", "from_url": "https://stackoverflow.com/questions/33619532/configuration-using-annotation-springbootapplication", "id": 1, "original_url": "https://stackoverflow.com/questions/33619532/configuration-using-annotation-springbootapplication", "service_icon": "https://cdn.sstatic.net/Sites/stackoverflow/img/favicon.ico?v=4f32ecc8f43d", "service_name": "Stack Overflow", "text": "I have problem with Spring Boot configuration. I have created base Spring Boot project using <https://start.spring.io/> And I have a problem, configuration works only for classes in sub catalog: I...", "thumb_height": 316, "thumb_url": "https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded", "thumb_width": 316, "title": "Configuration using annotation @SpringBootApplication", "title_link": "https://stackoverflow.com/questions/33619532/configuration-using-annotation-springbootapplication"}, {"fallback": "Stack Overflow: What is the difference between @ComponentScan and @EnableAutoConfiguration in Spring Boot?", "from_url": "https://stackoverflow.com/questions/35005158/what-is-the-difference-between-componentscan-and-enableautoconfiguration-in-sp", "id": 2, "original_url": "https://stackoverflow.com/questions/35005158/what-is-the-difference-between-componentscan-and-enableautoconfiguration-in-sp", "service_icon": "https://cdn.sstatic.net/Sites/stackoverflow/img/favicon.ico?v=4f32ecc8f43d", "service_name": "Stack Overflow", "text": "What is the difference between the @ComponentScan and @EnableAutoConfiguration annotations in Spring Boot? Is it necessary to add these? My application works very well without these annotations. I ...", "thumb_height": 316, "thumb_url": "https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded", "thumb_width": 316, "title": "What is the difference between @ComponentScan and @EnableAutoConfiguration in Spring Boot?", "title_link": "https://stackoverflow.com/questions/35005158/what-is-the-difference-between-componentscan-and-enableautoconfiguration-in-sp"}], "client_msg_id": "8d509571-d914-4998-8ccb-7ff56e755a8b", "datetime": "2019-07-03T05:51:39Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://start.spring.io/>\n<https://stackoverflow.com/questions/33619532/configuration-using-annotation-springbootapplication>\n<https://stackoverflow.com/questions/35005158/what-is-the-difference-between-componentscan-and-enableautoconfiguration-in-sp>\n<https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html>", "ts": "1562133099.000200", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "8770c7f9-5dcd-451b-88f6-c22af0cad6fe", "datetime": "2019-07-03T07:08:05Z", "display_as_bot": false, "files": [{"created": 1562137683, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "zip", "has_rich_preview": false, "id": "FL31587RS", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "application/zip", "mode": "hosted", "name": "springjson.zip", "permalink": "https://kgisltraining.slack.com/files/UCZKNV9FB/FL31587RS/springjson.zip", "permalink_public": "https://slack-files.com/TD1J2QS86-FL31587RS-0458a6bf4f", "pretty_type": "Zip", "public_url_shared": false, "size": 35027970, "timestamp": 1562137683, "title": "springjson.zip", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FL31587RS/springjson.zip", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FL31587RS/download/springjson.zip", "user": "UCZKNV9FB", "username": ""}], "name": "baraneetharan.r", "real_name": "baraneetharan", "text": "", "ts": "1562137685.000400", "type": "message", "upload": true, "user": "UCZKNV9FB"}
,{"client_msg_id": "078aaba5-7ba0-4e95-95bf-be72435ba812", "datetime": "2019-07-03T11:24:47Z", "display_as_bot": false, "files": [{"created": 1562153086, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "zip", "has_rich_preview": false, "id": "FL3MZEJGY", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "application/zip", "mode": "hosted", "name": "jsoncrud.zip", "permalink": "https://kgisltraining.slack.com/files/UCZKNV9FB/FL3MZEJGY/jsoncrud.zip", "permalink_public": "https://slack-files.com/TD1J2QS86-FL3MZEJGY-270f143b7b", "pretty_type": "Zip", "public_url_shared": false, "size": 6040481, "timestamp": 1562153086, "title": "jsoncrud.zip", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FL3MZEJGY/jsoncrud.zip", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FL3MZEJGY/download/jsoncrud.zip", "user": "UCZKNV9FB", "username": ""}], "name": "baraneetharan.r", "real_name": "baraneetharan", "text": "", "ts": "1562153087.001200", "type": "message", "upload": true, "user": "UCZKNV9FB"}
,{"client_msg_id": "eaee1bab-51dd-410e-8658-a1ae0ffcbefe", "datetime": "2019-07-04T05:23:24Z", "display_as_bot": false, "files": [{"created": 1562217802, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "zip", "has_rich_preview": false, "id": "FL6QMB26S", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "application/zip", "mode": "hosted", "name": "springjson (2).zip", "permalink": "https://kgisltraining.slack.com/files/UH34M9FCG/FL6QMB26S/springjson__2_.zip", "permalink_public": "https://slack-files.com/TD1J2QS86-FL6QMB26S-f4b6db7167", "pretty_type": "Zip", "public_url_shared": false, "size": 35714042, "timestamp": 1562217802, "title": "springjson (2).zip", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FL6QMB26S/springjson__2_.zip", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FL6QMB26S/download/springjson__2_.zip", "user": "UH34M9FCG", "username": ""}], "name": "mohanasankari.g", "real_name": "Mohana Sankari.G", "text": "", "ts": "1562217804.000300", "type": "message", "upload": true, "user": "UH34M9FCG"}
,{"attachments": [{"fallback": "Spring MVC 5 - Static resources handling example | BORAJI.COM", "from_url": "https://www.boraji.com/spring-mvc-5-static-resources-handling-example", "id": 1, "original_url": "https://www.boraji.com/spring-mvc-5-static-resources-handling-example", "service_icon": "https://www.boraji.com/favicon.ico", "service_name": "boraji.com", "text": "This post shows you how to configure the resource handler to serve the static resources (CSS, JavaScript or Images) in spring MVC application. You can also specify the cache period (in seconds) for served resources by resource handler. Tools and technologies used for this application are -", "title": "Spring MVC 5 - Static resources handling example | BORAJI.COM", "title_link": "https://www.boraji.com/spring-mvc-5-static-resources-handling-example"}], "client_msg_id": "bf0342a9-233c-486a-ad02-0dd6d4839279", "datetime": "2019-07-04T11:49:02Z", "name": "supriya.sanjay", "real_name": "Supriya Sanjay Shinde", "team": "TD1J2QS86", "text": "<https://www.boraji.com/spring-mvc-5-static-resources-handling-example>", "ts": "1562240942.000700", "type": "message", "user": "UJV8PL3H6"}
,{"client_msg_id": "747f8a5f-9f8f-4fec-a6fe-3342d1cef9a9", "datetime": "2019-07-04T11:49:24Z", "name": "supriya.sanjay", "real_name": "Supriya Sanjay Shinde", "team": "TD1J2QS86", "text": "package com.memorynotfound.controller;\n\nimport javax.servlet.ServletContext;\nimport javax.servlet.ServletException;\nimport javax.servlet.ServletRegistration;\n\nimport org.springframework.web.context.ContextLoaderListener;\nimport org.springframework.web.context.support.AnnotationConfigWebApplicationContext;\nimport org.springframework.web.servlet.DispatcherServlet;\nimport org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;\n\npublic class MvcWebApplicationInitializer extends AbstractAnnotationConfigDispatcherServletInitializer {\n   public void onStartup(ServletContext servletContext) throws ServletException\n   {\n     AnnotationConfigWebApplicationContext context = new AnnotationConfigWebApplicationContext();\n     context.scan(\"com.memorynotfound\");\n     servletContext.addListener(new ContextLoaderListener(context));\n\n     ServletRegistration.Dynamic dispatcher = servletContext.addServlet(\"mvc\", new DispatcherServlet(context));\n     dispatcher.setLoadOnStartup(1);\n     dispatcher.addMapping(\"/\");\n   }\n\n   @Override\n   protected Class&lt;?&gt;[] getRootConfigClasses() {\n      return null;\n   }\n\n   @Override\n   protected Class&lt;?&gt;[] getServletConfigClasses() {\n      return new Class[] { MvcWebConfig.class };\n   }\n\n   @Override\n   protected String[] getServletMappings() {\n      return new String[] { \"/\" };\n   }\n\n}", "ts": "1562240964.001000", "type": "message", "user": "UJV8PL3H6"}
,{"client_msg_id": "7df45dba-8334-4121-a95a-8901adfb431d", "datetime": "2019-07-04T11:49:34Z", "name": "supriya.sanjay", "real_name": "Supriya Sanjay Shinde", "team": "TD1J2QS86", "text": "package com.memorynotfound.controller;\n\nimport java.util.concurrent.TimeUnit;\n\nimport javax.sql.DataSource;\n\n// import com.kgisl.springjson.dao.ContactDAO;\n// import com.kgisl.springjson.dao.ContactDAOImpl;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.http.CacheControl;\nimport org.springframework.jdbc.datasource.DriverManagerDataSource;\nimport org.springframework.web.servlet.config.annotation.EnableWebMvc;\nimport org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;\nimport org.springframework.web.servlet.config.annotation.ViewResolverRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n@Configuration\n@EnableWebMvc\n@ComponentScan(\"com.memorynotfound\")\npublic class MvcWebConfig implements WebMvcConfigurer {\n\n   // @Override\n   public void configureViewResolvers(ViewResolverRegistry registry) {\n      registry.jsp(\"/WEB-INF/view/\", \".jsp\");\n   }\n\n   /**\n    * Static Resource (CSS or JS) mapping\n    */\n   // @Override\n   public void addResourceHandlers(ResourceHandlerRegistry registry) {\n\n      // Register resource handler for CSS and JS\n      registry.addResourceHandler(\"/resources/**\").addResourceLocations(\"classpath:/statics/\", \"D:/statics/\")\n            .setCacheControl(CacheControl.maxAge(2, TimeUnit.HOURS).cachePublic());\n\n      // Register resource handler for images\n\n      registry.addResourceHandler(\"/images/**\").addResourceLocations(\"/WEB-INF/images/\")\n            .setCacheControl(CacheControl.maxAge(2, TimeUnit.HOURS).cachePublic());\n   }\n\n   @Bean\n   public DataSource getDataSource() {\n       DriverManagerDataSource dataSource = new DriverManagerDataSource();\n       dataSource.setDriverClassName(\"com.mysql.jdbc.Driver\");\n       dataSource.setUrl(\"jdbc:<mysql://localhost:3306/contactdb%22|mysql://localhost:3306/contactdb\">);\n       dataSource.setUsername(\"root\");\n       dataSource.setPassword(\"\");\n\n       return dataSource;\n   }\n\n   // @Bean\n   // public ContactDAO getContactDAO() {\n   //     return new ContactDAOImpl(getDataSource());\n   // }\n}", "ts": "1562240974.001200", "type": "message", "user": "UJV8PL3H6"}
,{"client_msg_id": "c2c50bcd-408d-44d1-aba1-102d2b0f1295", "datetime": "2019-07-04T12:38:06Z", "display_as_bot": false, "files": [{"created": 1562243886, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "zip", "has_rich_preview": false, "id": "FL4GUQEKW", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "application/zip", "mode": "hosted", "name": "bookstore (2).zip", "permalink": "https://kgisltraining.slack.com/files/UCZKNV9FB/FL4GUQEKW/bookstore__2_.zip", "permalink_public": "https://slack-files.com/TD1J2QS86-FL4GUQEKW-49c6699171", "pretty_type": "Zip", "public_url_shared": false, "size": 15543566, "timestamp": 1562243886, "title": "bookstore (2).zip", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FL4GUQEKW/bookstore__2_.zip", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FL4GUQEKW/download/bookstore__2_.zip", "user": "UCZKNV9FB", "username": ""}], "name": "baraneetharan.r", "real_name": "baraneetharan", "text": "", "ts": "1562243886.001300", "type": "message", "upload": true, "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "Hibernate Developer Reference", "from_url": "https://www.slideshare.net/intellibitz/hibernate-developer-reference", "id": 1, "original_url": "https://www.slideshare.net/intellibitz/hibernate-developer-reference", "service_icon": "https://public.slidesharecdn.com/favicon.ico?d8e2a4ed15", "service_name": "slideshare.net", "text": "Learn Hibernate by Reference.", "thumb_height": 576, "thumb_url": "https://cdn.slidesharecdn.com/ss_thumbnails/hibernate-developer-reference-25399-thumbnail-4.jpg?cb=1178084779", "thumb_width": 768, "title": "Hibernate Developer Reference", "title_link": "https://www.slideshare.net/intellibitz/hibernate-developer-reference"}, {"fallback": "GitHub: baraneetharan/hibernatexml", "from_url": "https://github.com/baraneetharan/hibernatexml", "id": 2, "original_url": "https://github.com/baraneetharan/hibernatexml", "service_icon": "https://a.slack-edge.com/bfaba/img/unfurl_icons/github.png", "service_name": "GitHub", "text": "Contribute to baraneetharan/hibernatexml development by creating an account on GitHub.", "thumb_height": 420, "thumb_url": "https://avatars2.githubusercontent.com/u/5837908?s=400&v=4", "thumb_width": 420, "title": "baraneetharan/hibernatexml", "title_link": "https://github.com/baraneetharan/hibernatexml"}, {"fallback": "JPA 2 Annotations - The Complete Reference (JavaDoc)", "from_url": "https://www.objectdb.com/api/java/jpa/annotations", "id": 3, "original_url": "https://www.objectdb.com/api/java/jpa/annotations", "service_icon": "https://www.objectdb.com/apple-touch-icon.png", "service_name": "ObjectDB", "text": "Reference (JavaDoc) of all the JPA 2 annotations, including @Entity, @Embeddable, @NamedQuery, @GeneratedValue, etc.", "title": "JPA 2 Annotations - The Complete Reference (JavaDoc)", "title_link": "https://www.objectdb.com/api/java/jpa/annotations"}], "client_msg_id": "e643f974-74f5-469f-baef-c868fd348e88", "datetime": "2019-07-05T07:31:19Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<http://hibernate.org/orm/documentation/5.3/>\n<https://docs.jboss.org/hibernate/orm/5.3/userguide/html_single/Hibernate_User_Guide.html>\n<https://www.slideshare.net/intellibitz/hibernate-developer-reference>\n<https://github.com/baraneetharan/hibernatexml>\n<https://www.objectdb.com/api/java/jpa/annotations>", "ts": "1562311879.000200", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "B2 Tech: Complete CRUD Application in Spring MVC and Hibernate [XML Configuration] - B2 Tech", "from_url": "https://bushansirgur.in/complete-crud-application-in-spring-mvc-and-hibernate-xml-configuration/", "id": 1, "image_bytes": 616673, "image_height": 250, "image_url": "https://bushansirgur.in/wp-content/uploads/2018/06/Sprng-and-Hibenate-new-design.jpg", "image_width": 444, "original_url": "https://bushansirgur.in/complete-crud-application-in-spring-mvc-and-hibernate-xml-configuration/", "service_icon": "https://bushansirgur.in/wp-content/uploads/2018/05/cropped-final-with-text-1-1-180x180.jpg", "service_name": "B2 Tech", "text": "Hi, Welcome back to my another article on Java, Have you ever heard about Spring/Spring MVC in Java? One of the Most Popular Application Framework for building Java Enterprise Applications. Along the side, Hibernate is also one of the most popular ORM Framework, combining these two frameworks we can build Scalable, robust and industry standard \u2026", "title": "Complete CRUD Application in Spring MVC and Hibernate [XML Configuration] - B2 Tech", "title_link": "https://bushansirgur.in/complete-crud-application-in-spring-mvc-and-hibernate-xml-configuration/", "ts": 1528311938}], "client_msg_id": "f8c72a18-c6fc-4f71-9971-d19f45cdfbf5", "datetime": "2019-07-10T03:56:47Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://bushansirgur.in/complete-crud-application-in-spring-mvc-and-hibernate-xml-configuration/>", "ts": "1562731007.000300", "type": "message", "user": "UCZKNV9FB"}
,{"client_msg_id": "9c457bb4-ab5a-46a5-8495-2867bc2c0816", "datetime": "2019-07-15T03:59:09Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://gist.github.com/baraneetharan/9f510cedab43983ba1cf47f3db1d01aa>", "ts": "1563163149.000300", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "1157x540px image", "from_url": "https://netsurfingzone.com/wp-content/uploads/2018/10/jpa1.png", "id": 1, "image_bytes": 14721, "image_height": 540, "image_url": "https://netsurfingzone.com/wp-content/uploads/2018/10/jpa1.png", "image_width": 1157, "original_url": "https://netsurfingzone.com/wp-content/uploads/2018/10/jpa1.png"}], "client_msg_id": "4b43e14b-fefe-47e2-b462-d9ff6f2055bf", "datetime": "2019-07-16T11:16:23Z", "name": "baraneetharan.r", "real_name": "baraneetharan", "team": "TD1J2QS86", "text": "<https://netsurfingzone.com/wp-content/uploads/2018/10/jpa1.png>", "ts": "1563275783.000400", "type": "message", "user": "UCZKNV9FB"}
,{"attachments": [{"fallback": "Spring MVC 5 + Hibernate 5 + JSP + MySQL CRUD Tutorial", "from_url": "https://www.javaguides.net/2018/11/spring-mvc-5-hibernate-5-jsp-mysql-crud-tutorial.html", "id": 1, "image_bytes": 17000, "image_height": 250, "image_url": "https://1.bp.blogspot.com/-AOZ3qu0w3wo/W-_FgQG9GrI/AAAAAAAAEvw/h-B5MScYEQ8-AdGt3nqInOFsjTLc03a0wCLcBGAs/w1200-h630-p-k-no-nu/project-structure.PNG", "image_width": 475, "original_url": "https://www.javaguides.net/2018/11/spring-mvc-5-hibernate-5-jsp-mysql-crud-tutorial.html", "service_icon": "https://www.javaguides.net/favicon.ico", "service_name": "javaguides.net", "text": "In this spring hibernate integration tutorial, we will learn how to create Spring MVC 5 web application, handle form submission, integrate hibernate 5 to connect to the backend database. In this tutorial, we will integrate Spring MVC 5+ with Hibernate ORM framework 5+ using Java-based configuration without any XML configuration.", "title": "Spring MVC 5 + Hibernate 5 + JSP + MySQL CRUD Tutorial", "title_link": "https://www.javaguides.net/2018/11/spring-mvc-5-hibernate-5-jsp-mysql-crud-tutorial.html"}], "client_msg_id": "25ec6355-8616-46d0-883e-f79af55832fa", "datetime": "2019-07-17T13:10:12Z", "name": "supriya.sanjay", "real_name": "Supriya Sanjay Shinde", "team": "TD1J2QS86", "text": "<https://www.javaguides.net/2018/11/spring-mvc-5-hibernate-5-jsp-mysql-crud-tutorial.html>", "ts": "1563369012.000200", "type": "message", "user": "UJV8PL3H6"}
,{"attachments": [{"fallback": "Spring MVC 5 + Spring Data JPA + Hibernate 5 + JSP + MySQL Tutorial", "from_url": "https://www.javaguides.net/2018/11/spring-mvc-5-spring-data-jpa-hibernate-jsp-mysql-tutorial.html", "id": 1, "image_bytes": 15696, "image_height": 236, "image_url": "https://2.bp.blogspot.com/-MIoMa5L8JsU/W--19birkhI/AAAAAAAAEvA/Dsw5nyhXjcoHpKfQSE8neymmiBc-HeFhQCLcBGAs/w1200-h630-p-k-no-nu/project-structure.PNG", "image_width": 451, "original_url": "https://www.javaguides.net/2018/11/spring-mvc-5-spring-data-jpa-hibernate-jsp-mysql-tutorial.html", "service_icon": "https://www.javaguides.net/favicon.ico", "service_name": "javaguides.net", "text": "In this tutorial, we will discuss the integration of Spring MVC 5, Spring Data JPA, Hibernate 5 and MySQL CRUD example. We will demonstrate CRUD(Create, Retrieve, Update, Delete) operations on a Customer entity as well as display list of customers from the MySQL database.", "title": "Spring MVC 5 + Spring Data JPA + Hibernate 5 + JSP + MySQL Tutorial", "title_link": "https://www.javaguides.net/2018/11/spring-mvc-5-spring-data-jpa-hibernate-jsp-mysql-tutorial.html"}], "client_msg_id": "bc3b7cd2-acb5-4dff-b2c8-747cebf9e7f4", "datetime": "2019-07-17T13:10:23Z", "name": "supriya.sanjay", "real_name": "Supriya Sanjay Shinde", "team": "TD1J2QS86", "text": "<https://www.javaguides.net/2018/11/spring-mvc-5-spring-data-jpa-hibernate-jsp-mysql-tutorial.html>", "ts": "1563369023.000500", "type": "message", "user": "UJV8PL3H6"}
,{"client_msg_id": "af0a9b3d-bfca-426b-a809-25780949f54d", "datetime": "2019-07-17T13:11:07Z", "display_as_bot": false, "files": [{"created": 1563369061, "display_as_bot": false, "editable": false, "external_type": "", "filetype": "zip", "has_rich_preview": false, "id": "FLH81SJC8", "is_external": false, "is_public": true, "is_starred": false, "mimetype": "application/zip", "mode": "hosted", "name": "springAnno.zip", "permalink": "https://kgisltraining.slack.com/files/UJV8PL3H6/FLH81SJC8/springanno.zip", "permalink_public": "https://slack-files.com/TD1J2QS86-FLH81SJC8-c46398171f", "pretty_type": "Zip", "public_url_shared": false, "size": 82237291, "timestamp": 1563369061, "title": "springAnno.zip", "url_private": "https://files.slack.com/files-pri/TD1J2QS86-FLH81SJC8/springanno.zip", "url_private_download": "https://files.slack.com/files-pri/TD1J2QS86-FLH81SJC8/download/springanno.zip", "user": "UJV8PL3H6", "username": ""}], "name": "supriya.sanjay", "real_name": "Supriya Sanjay Shinde", "text": "", "ts": "1563369067.000700", "type": "message", "upload": true, "user": "UJV8PL3H6"}
]








????????????????????????????TEXT??????????????????????????????


  [2019-03-21T05:12:26Z] baraneetharan.r: <https://www.javatpoint.com/interface-in-java>
  
    ---------------
    | Attachments |
    ---------------
    
    Interface in Java - Javatpoint
    https://www.javatpoint.com/interface-in-java

    
  

  [2019-03-21T05:12:46Z] baraneetharan.r: <https://www.javatpoint.com/nested-interface>
  
    ---------------
    | Attachments |
    ---------------
    
    Java Nested Interface - javatpoint
    https://www.javatpoint.com/nested-interface

    
  

  [2019-03-21T05:12:57Z] baraneetharan.r: <https://www.tutorialspoint.com/Can-we-define-a-class-inside-a-Java-interface>
  
    ---------------
    | Attachments |
    ---------------
    
    Can we define a class inside a Java interface
    https://www.tutorialspoint.com/Can-we-define-a-class-inside-a-Java-interface

    
  

  [2019-03-21T05:17:36Z] baraneetharan.r: <https://www.javatpoint.com/java-default-methods>
  
    ---------------
    | Attachments |
    ---------------
    
    Java 8 Default Methods - javatpoint
    https://www.javatpoint.com/java-default-methods

    
  

  [2019-03-21T05:31:17Z] baraneetharan.r: <https://www.javatpoint.com/java-9-interface-private-methods>
  
    ---------------
    | Attachments |
    ---------------
    
    Java 9 Interface Private Methods - javatpoint
    https://www.javatpoint.com/java-9-interface-private-methods

    
  

  [2019-03-22T03:27:56Z] gowtham.mani: interface behaviour{
    void user();
    void name();
    void details();
    void location();
}
abstract class Good implements behaviour{

     Good(){
     System.out.println("ABstract constructor");
    }
    public void name(){
        System.out.println("Gowtham");
    }
}
class Bad extends Good{
    int x;
    Bad(){
        //super();
        System.out.println("Bad constructor");
    }
    Bad(int x){
        this();
        System.out.println("parameterized bad constructor");
    }
    public void user(){
        System.out.println("Good");
    }

    public void details(){
        System.out.println("Active");
    }
    public void location(){
        System.out.println("Coimbatore");
    }
}
class Test5{
    public static void main(String[] args){
    Bad ob=new Bad(5);
    ob.user();
    ob.name();
    ob.details();
    ob.location();
    }
}
  

  [2019-03-25T04:00:08Z] baraneetharan.r: <https://www.javatpoint.com/java-inner-class>
  
    ---------------
    | Attachments |
    ---------------
    
    Java Inner Class  - javatpoint
    https://www.javatpoint.com/java-inner-class

    
  

  [2019-03-25T04:00:15Z] baraneetharan.r: <https://www.tutorialspoint.com/java/java_innerclasses.htm>
  
    ---------------
    | Attachments |
    ---------------
    
    Java Inner classes
    https://www.tutorialspoint.com/java/java_innerclasses.htm

    
  

  [2019-03-25T04:00:47Z] baraneetharan.r: <https://topjavatutorial.com/wp-content/uploads/2016/02/Java-inner-class-definitions.png>
  
    ---------------
    | Attachments |
    ---------------
    
    
    

    
  

  [2019-03-25T04:01:08Z] baraneetharan.r: <http://www.c4learn.com/java/java-nested-class-overview/>
  
    ---------------
    | Attachments |
    ---------------
    
    Java nested class overview - Java Tutorials - c4learn.com
    http://www.c4learn.com/java/java-nested-class-overview/

    
  

  [2019-03-25T04:20:01Z] baraneetharan.r: Why can't we instantiate an interface or an abstract class in java?
  

  [2019-03-26T04:12:35Z] baraneetharan.r: <https://www.javatpoint.com/array-in-java>
  
    ---------------
    | Attachments |
    ---------------
    
    Java Array - Javatpoint
    https://www.javatpoint.com/array-in-java

    
  

  [2019-03-26T09:20:51Z] gowtham.mani: /**
 * StringArray
 */
import java.util.Scanner;

public class StringArray {

    // static String a[]={"Bike","Car","pulsar","R15"};
    static String a[] = new String[2];
    // a[0]="Bike";

    public static void main(String[] args) {
        selectOptions();
        // create();
        // display();
        // getOne();
        // update();
        // display();
        // remove();
        // display();
    }

    static void selectOptions() {
        System.out.println("Select Options");
        System.out.println("1.Create\t2.Display\t3.Getone\t4.Update\t5.Remove");
        System.out.println("Select Your Option");
        Scanner scan = new Scanner(<http://System.in|System.in>);
        int myOption = scan.nextInt();
        switch (myOption) {
        case 1:
            create();
            selectOptions();
            break;
        case 2:
            display();
            selectOptions();
            break;
        case 3:
            getOne();
            selectOptions();
            break;
        case 4:
            update();
            selectOptions();
            break;
        case 5:
            remove();
            selectOptions();
            break;
        default:
            selectOptions();
            break;
        }
    }

    static void getOne() {
        System.out.println("getOne");
        System.out.println("Enter Name to find:");
        Scanner scan = new Scanner(<http://System.in|System.in>);
        String findName = scan.nextLine();
        for (String var : a) {
            if (findName.equals(var)) {
                System.out.println(findName);
                break;
            }
        }
    }

    static void create() {
        System.out.println("create");
        for (int i = 0; i &lt; a.length; i++) {
            System.out.println("Enter name:");
            Scanner scan = new Scanner(<http://System.in|System.in>);
            String inputName = scan.nextLine();
            a[i] = inputName;
        }

    }

    static void display() {
        System.out.println("display");
        for (String var : a) {
            System.out.println(var);
        }
    }

    static void update() {
        System.out.println("update");
        System.out.println("Enter Name to update:");
        Scanner scan = new Scanner(<http://System.in|System.in>);
        String findName = scan.nextLine();
        System.out.println("Enter New Name:");
        scan = new Scanner(<http://System.in|System.in>);
        String updateName = scan.nextLine();
        for (int i = 1; i &lt; a.length; i++) {
            if (findName.equals(a[i])) {
                a[i] = updateName;
                break;
            }
        }
    }

    static void remove() {
        System.out.println("Remove");
        System.out.println("Enter Name to Remove:");
        Scanner scan = new Scanner(<http://System.in|System.in>);
        String findName = scan.nextLine();
        for (int i = 0; i &lt; a.length; i++) {
            if (findName.equals(a[i])) {
                a[i] = "";
                break;
            }
        }
    }
}
  

  [2019-03-26T11:08:03Z] amirthavalli.r: 
  

  [2019-03-26T12:11:56Z] ramya.a: public class ArrayMin {

    public static void main(String[] args) {
        int a[] = {  23,4, 43, 5,2, 54 };
        int min = a[0];
        int secondMin = a[0];
        for (int i = 0; i &lt; a.length; i++) {

            if (min &gt; a[i]) {
                secondMin = min;
                min = a[i];

                // System.out.println("Min values:" + min);
            }
            // secondMin=min;
            else if (secondMin &gt; a[i]) {
                secondMin = a[i];
                // System.out.println("Min values:" + secondMin);
            }
        }
        System.out.println("Min: " + min);
        System.out.println("SecondMin: " + secondMin);
    }
    // min(a);
}
  

  [2019-03-27T09:47:58Z] prabhakar.g: <http://www.javawithus.com/tutorial/array-of-objects>
  

  [2019-03-27T09:48:07Z] prabhakar.g: <http://www.tutorialdost.com/Java-Programming-Tutorial/15-Java-Array-of-Object.aspx>
  
    ---------------
    | Attachments |
    ---------------
    
    Java Array of Objects
    http://www.tutorialdost.com/Java-Programming-Tutorial/15-Java-Array-of-Object.aspx

    
  

  [2019-03-27T10:05:19Z] prabhakar.g: 
  

  [2019-03-27T11:00:43Z] devi.perinbaraj: import java.util.*;
import java.util.Scanner;

public class FinalAtm{
    static int a[]={1001, 50000};
    public static void main(String[] args){

        selectoptions();

    }

    static void selectoptions(){
        System.out.println("1.withdraw\t2.updatepin");
        Scanner scan= new Scanner(<http://System.in|System.in>);
        int myOption = scan.nextInt();
        switch (myOption){
            case 1:
             withdraw();
            selectoptions();
              break;
            case 2:
            updatepin();
            break;
            default:
            System.out.println("Retry");
            break;

        }
        scan.close();
    }

    static void updatepin(){
        System.out.println("Enter old pin");
        Scanner scan1= new Scanner(<http://System.in|System.in>);
        int oldPin = scan1.nextInt();
        System.out.println("Enter New pin:");
        int newPin = scan1.nextInt();
        for (int i = 0; i &lt; a.length; i++){
        if(oldPin==(a[i])){
            a[i]=newPin;
        System.out.println("Success");
        selectoptions();
        }}
        scan1.close();


    }
    static void withdraw(){
        System.out.println("Enter your pin");
        Scanner inp = new Scanner(<http://System.in|System.in>);
        int pin= inp.nextInt();
        for (int var : a) {
            if (pin==var) {
                System.out.println("Enter Amount");
                int wd = inp.nextInt();
                int c = a[1] - wd;
                System.out.println("Available balance Rs." + c);
            }



        }



 }
}
  

  [2019-03-27T11:39:14Z] devi.perinbaraj: public class Employee_Array {
public static void main(String[] args) {
    Employee employees[]=new Employee[2];
    for (Employee var : employees) {
        System.out.println(var);
    }
    for(int i=0;i&lt;employees.length;i++){
        employees[i]=new Employee();

    }
    for (Employee var : employees) {
        System.out.println(var);
    }
    for(int i=0;i&lt;employees.length;i++){
        employees[i]=new Employee(i,"name"+i);

    }
    for (Employee var : employees) {
        System.out.println(var);
    }

}

}
  

  [2019-03-27T11:39:54Z] hajashariff.a: 
  

  [2019-03-27T12:25:52Z] devi.perinbaraj: import com.sun.xml.internal.bind.v2.runtime.RuntimeUtil.ToStringAdapter;

class Employee{
    private int id;
   private String name;
   private String update;
   Employee(int id ,String name,String update){
       this.id=id;
       this.name=name;
       this.update=update;

       }
       Employee(){

       }

/**
 * @return the name
 */
public String getName() {
	return name;
}
/**
 * @param name the name to set
 */
public void setName(String name) {
	this.name = name;
}
/**
 * @return the id
 */
public int getId() {
	return id;
}
/**
 * @param id the id to set
 */
public void setId(int id) {
	this.id = id;
}
//@Override
public String toString() {
    return id +" "+ name;
}
/**
 * @return the update
 */
public String getUpdate() {

        return update;
}
/**
 * @param update the update to set
 */
public void setUpdate(int update) {
	this.update = update;
}

}
  

  [2019-03-28T06:25:53Z] prabhakar.g: <https://www.tutorialspoint.com/java/util/java_util_arrays.htm>
  
    ---------------
    | Attachments |
    ---------------
    
    Java.util.Arrays Class
    https://www.tutorialspoint.com/java/util/java_util_arrays.htm

    
  

  [2019-03-28T06:55:20Z] prabhakar.g: 
  

  [2019-03-28T09:01:40Z] swetha.m: <@UHE66045V> has joined the channel
  

  [2019-03-29T04:01:38Z] sanjeevi.p: 
  

  [2019-04-01T09:35:50Z] sasikumar.b: <https://dzone.com/articles/top-10-methods-java-arrays>
  
    ---------------
    | Attachments |
    ---------------
    
    Top 10 Methods for Java Arrays - DZone Java
    https://dzone.com/articles/top-10-methods-java-arrays

    
  

  [2019-04-01T09:35:57Z] sasikumar.b: <https://mvnrepository.com/artifact/org.apache.commons/commons-lang3/3.8.1>
  

  [2019-04-01T09:37:39Z] sasikumar.b: 
  

  [2019-04-02T04:09:34Z] prabhakar.g: Good Morning
  

  [2019-04-02T04:09:39Z] prabhakar.g: package com.kgisl.qs1;

import java.util.Arrays;

import org.apache.commons.lang3.ArrayUtils;

/**
 * Hello world!
 *
 */
public class App {
    // static String[] names = new String[2];
    static String[] names ={"element0","element1"};
    public static void main(String[] args) {
        displayNames();
        displayOneName();
        updateName();
        deleteName();
    }

    static void create() {
        System.out.println("create");
    }

    static void displayNames() {
        System.out.println("displayNames");
        System.out.println(ArrayUtils.toString(names));
    }

    static void displayOneName() {
        System.out.println("displayOneName");
        String findName = "element0";
        // System.out.println(ArrayUtils.indexOf(names, findName));
        System.out.println(names[ArrayUtils.indexOf(names, findName)]);
    }

    static void updateName() {
        System.out.println("updateName");
        String findName = "element0";
        String updateName = "element0000";
        //System.out.println(ArrayUtils.indexOf(names, findName));
        names[ArrayUtils.indexOf(names, findName)] = updateName;
        displayNames();
    }

    static void deleteName() {
        System.out.println("deleteName");
        String findName = "element0000";
        // String[] newArray = ArrayUtils.remove(names, ArrayUtils.indexOf(names, findName));
        // System.out.println(ArrayUtils.toString(newArray));
        String[] newArray=ArrayUtils.removeElement(names, findName);
        System.out.println(ArrayUtils.toString(newArray));
    }
}
  

  [2019-04-04T11:35:48Z] giriprasath.j: package com.kgisl.javaarraylist;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * Hello world!
 *
 */
public class App {
    static ArrayList&lt;String&gt; names = new ArrayList&lt;String&gt;();
    static ArrayList&lt;String&gt; names1 = new ArrayList&lt;String&gt;();
    static String name1 = "Devi";
    static String name2 = "Kavin";

    public static void main(String[] args) {
        create();
        display();
        getName();
        removeif();
        // removeNameInLastIndex();
        // removeName();
        updateName();
        // display();
        toarray();
        toarrayAsType();
        arrayClone();
        arrayContains();
        clearAll();
    }

    static void create() {
        // names.ensureCapacity(3);
        System.out.println(names.isEmpty());
        names.add("Giri");
        names.add("Sasi");
        names.add("Kannan");
        names.add("Sasi");
        names.add("Gowtham");
        names.add("Sasi");

        names1.add(name1);
        names1.add(name2);

        names.addAll(names1);

    }

    static void display() {
        System.out.println(names);
    }

    static void getName() {
        String findName = "Sasi";
        int findNameIdx = names.indexOf(findName);
        System.out.println(names.get(findNameIdx));
    }

    static void removeName() {
        String findName = "Sasi";
        int findNameIdx = names.indexOf(findName);
        names.remove(findNameIdx);
        System.out.println(names);
    }

    static void removeNameInLastIndex() {
        String findName = "Sasi";
        int findNameIdx = names.lastIndexOf(findName);
        names.remove(findNameIdx);
        System.out.println(names);
    }

    static void updateName() {
        String findName = "Kannan";
        String updateName = "Kannan R";
        int findNameIdx = names.indexOf(findName);
        names.set(findNameIdx, updateName);
        System.out.println(names);
    }

    static void toarray() {
        System.out.println("******** toArray ********");
        Object[] arr = names.toArray();
        System.out.println(Arrays.toString(arr));
    }

    static void toarrayAsType() {
        System.out.println("******** toarrayAsType ********");
        String[] myArray = names.toArray(new String[0]);
        // String[] arr = (String)names.toArray();
        System.out.println(Arrays.toString(myArray));
    }

    static void arrayClone() {
        System.out.println("******** arrayClone ********");
        Object arrayClone = names.clone();
        System.out.println(arrayClone.toString());
    }

    static void arrayContains() {
        String findName = "Sasi 1";
        System.out.println(names.contains(findName));
    }

    static void removeif(){
        System.out.println("******** removeif ********");
        names.removeIf( x -&gt; x == "Sasi" );
        System.out.println(names);
    }

    // static void removeRange(){
    //     System.out.println("******** removeRange ********");
    //     // names.removeRange(1, 4);
    //     // System.out.println(names);
    //     List&lt;Integer&gt; al = new ArrayList&lt;Integer&gt;();
    //     al.add(10);
    //     al.add(20);
    //     al.add(30);
    //     al.add(1);
    //     al.add(2);
    //     al.removeRange(1, 4);
    // }

    static void clearAll() {
        System.out.println(names.isEmpty());
        names.clear();
        System.out.println(names.isEmpty());
    }

}
  

  [2019-04-04T12:36:18Z] kannan.r: package com.kgisl.pgm;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Scanner;

public class App
{ public static void main( String[] args ){

    ArrayList&lt;String&gt;  al = new ArrayList&lt;String&gt;();
    al.add("kannan");
    al.add("nivi");
    al.add("ramya");

    Collections.sort(al);
    System.out.println("sorting A 2 z"+al);
     Collections.sort(al,Collections.reverseOrder()); //reverseOrder
    System.out.println("reverseOrder"+al);

}}
  

  [2019-04-04T13:04:58Z] kannan.r: package com.kgisl.pgm;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Scanner;

public class App
{ public static void main( String[] args ){

    ArrayList&lt;String&gt;  al = new ArrayList&lt;String&gt;();
    al.add("kannan");
    al.add("nivi");
    al.add("ramya");
    al.add("mahi");
    al.add("nidhya");
    al.add("mohana");

    System.out.println(al);
     ArrayList &lt;String&gt; sb =new ArrayList&lt;String&gt;();

     System.out.println(al.subList(2,4 ));
     //hear 2is start value and upto 4 index
     System.out.println(al.subList(5,6 ));
}}
  

  [2019-04-05T06:05:30Z] baraneetharan.r: 1. Write a C# Sharp program that takes a number and a width also a number, as input and then displays a triangle of that width, using that number. 
Test Data
Enter a number: 6 
Enter the desired width: 6 
Expected Output :

666666                                                      
66666                                                           
6666                                                                  
666                                                        
66                                                                  
6 

2. Write a C# Sharp program that takes two numbers as input and perform an operation (+,-,*,x,/) on them and displays the result of that operation. 

Test Data
Input first number: 20
Input operation: - 
Input second number: 12
Expected Output :
20 - 12 = 8

3. Write a C# Sharp program to find the largest of three numbers. 
Test Data :
Input the 1st number :25 
Input the 2nd number :63 
Input the 3rd number :10 
Expected Output :
The 2nd Number is the greatest among three

4. Write a C# Sharp program to find the eligibility of admission for a professional course based on the following criteria: 
Marks in Maths &gt;=65
Marks in Phy &gt;=55
Marks in Chem&gt;=50
Total in all three subject &gt;=180
or
Total in Math and Subjects &gt;=140

Test Data : 
Input the marks obtained in Physics :65 
Input the marks obtained in Chemistry :51 
Input the marks obtained in Mathematics :72
Expected Output :
The candidate is eligible for admission.

5. Write a program in C# Sharp which is a Menu-Driven Program to perform a simple calculation. 

Test Date and Expected Output 
Enter the first Integer :10 
Enter the second Integer :2 

Here are the options : 
1-Addition. 
2-Substraction. 
3-Multiplication. 
4-Division. 
5-Exit. 

Input your choice :3 
The Multiplication of 10 and 2 is: 20

6. Write a program in C# Sharp to read n number of values in an array and display it in reverse order. 
Test Data : 
Input the number of elements to store in the array :3 
Input 3 number of elements in the array : 
element - 0 : 2 
element - 1 : 5 
element - 2 : 7 
Expected Output: 
The values store into the array are: 
2 5 7 
The values store into the array in reverse are : 
7 5 2

7. Write a program in C# Sharp to find the sum of all elements of the array. 
Test Data : 
Input the number of elements to be stored in the array :3 
Input 3 elements in the array : 
element - 0 : 2 
element - 1 : 5 
element - 2 : 8 
Expected Output : 
Sum of all elements stored in the array is : 15

8. Write a program in C# Sharp to count the frequency of each element of an array. 
Test Data : 
Input the number of elements to be stored in the array :3 
Input 3 elements in the array : 
element - 0 : 25 
element - 1 : 12 
element - 2 : 43 
Expected Output : 
Frequency of all elements of array : 
25 occurs 1 times 
12 occurs 1 times 
43 occurs 1 times

9. Write a program in C# Sharp to find maximum and minimum element in an array. 
Test Data : 
Input the number of elements to be stored in the array :3 
Input 3 elements in the array : 
element - 0 : 45 
element - 1 : 25 
element - 2 : 21 
Expected Output : 
Maximum element is : 45 
Minimum element is : 21

10. Write a program in C# Sharp to sort elements of the array in descending order. 
Test Data : 
Input the size of array : 3 
Input 3 elements in the array : 
element - 0 : 5 
element - 1 : 9 
element - 2 : 1
Expected Output : 
Elements of the array in sorted descending order: 
9 5 1

11. Write a program in C# Sharp to delete an element at desired position from an array. 
Test Data : 
Input the size of array : 5 
Input 5 elements in the array in ascending order: 
element - 0 : 1 
element - 1 : 2 
element - 2 : 3 
element - 3 : 4 
element - 4 : 5 
Input the position where to delete: 3 
Expected Output : 
The new list is : 1 2 4 5

12. Write a program in C# Sharp to find the second largest element in an array. 
Test Data : 
Input the size of array : 5 
Input 5 elements in the array : 
  

  [2019-04-05T06:05:30Z] baraneetharan.r: element - 0 : 2 
element - 1 : 9 
element - 2 : 1 
element - 3 : 4 
element - 4 : 6 
Expected Output : 
The Second largest element in the array is: 6
  

  [2019-04-05T11:27:55Z] prabhakar.g: package com.kgisl.ex3;

import java.lang.reflect.Field;
import java.util.ArrayList;
public class Test {

    public static void main(String[] args) throws Exception {
        ArrayList&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;(5);
        for (int i = 0; i &lt; 10; i++) {
            list.add(i);
            System.out.format("Size: %2d, Capacity: %2d%n",
                              list.size(), getCapacity(list));
        }
    }

    static int getCapacity(ArrayList&lt;Integer&gt; list) throws Exception {
        // Field x = Student1.class.getDeclaredField("rollno");
        Field d = ArrayList.class.getDeclaredField("elementData");
        d.setAccessible(true);
        return ((Object[]) d.get(list)).length;
    }
}
  

  [2019-04-08T08:49:28Z] baraneetharan.r: package com.kgisl.qs1;

public class Student {
    private int rollno;
    private String name;

    Student(int rollno, String name) {
        this.rollno = rollno;
        this.name = name;
    }

    /**
     * @return the name
     */
    public String getName() {
        return name;
    }

    /**
     * @param name the name to set
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * @return the rollno
     */
    public int getRollno() {
        return rollno;
    }

    /**
     * @param rollno the rollno to set
     */
    public void setRollno(int rollno) {
        this.rollno = rollno;
    }

    @Override
    public String toString() {
        return "rollno:" + rollno + " name:" + name;
    }
}
  

  [2019-04-08T08:49:39Z] baraneetharan.r: package com.kgisl.qs1;

import java.util.ArrayList;
import java.util.List;

public class StudentDemo {
    public static ArrayList&lt;Student&gt; studentList = new ArrayList&lt;Student&gt;();
    static Student newStudent=new Student(502, "name");
    static Student updateStudent=new Student(502, "updatename");
    public static void main(String[] args) {
        StudentDemo s=new StudentDemo();
        s.loadStudents();
        s.getAllStudents();
        s.getStudent(12);
        s.newStudent(newStudent);
        s.updateStudent(502,updateStudent);
        s.removeStudent(101);
    }

    StudentDemo(){
        loadStudents();
    }

    public void loadStudents() {
        studentList.add(new Student(101, "ramu"));
        studentList.add(new Student(12, "Divya"));
        studentList.add(new Student(11, "Janani"));
    }

    public List&lt;Student&gt; getAllStudents() {
        System.out.println(studentList);
        return studentList;
    }

    public Student getStudent(int rollno) {
        for (Student student : studentList) {
            if (student.getRollno() == rollno) {
                System.out.println(String.valueOf(student.getRollno())+student.getName());
                return student;
            }
        }

        return getStudent(0);

    }

    public void newStudent(Student student) {
        studentList.add(newStudent);
        getAllStudents();
        System.out.println(studentList);
    }

    public void updateStudent(int rollno, Student updateStudent) {
        for (Student student : studentList) {
            if (student.getRollno() == rollno) {
                System.out.println(studentList.indexOf(student));
                studentList.set(studentList.indexOf(student),updateStudent);
            }
        }
        getAllStudents();
        System.out.println(studentList);
    }

    public void removeStudent(int rollno) {
        for (Student student : studentList) {
            if (student.getRollno() == rollno) {
                System.out.println(studentList.indexOf(student));
                studentList.remove(studentList.indexOf(student));
            }
            break;
        }
        getAllStudents();
        System.out.println(studentList);
    }

}
  

  [2019-04-09T06:32:01Z] baraneetharan.r: <https://howtodoinjava.com/junit-4/>
  
    ---------------
    | Attachments |
    ---------------
    
    JUnit Tutorial - HowToDoInJava
    https://howtodoinjava.com/junit-4/

    
  

  [2019-04-09T10:02:16Z] sasikumar.b: package com.kgisl.qs1;

/**
 * Calculator
 */
public class Calculator {

    public int add(int x, int y) {
        return x + y;
    }
    public int sub(int x, int y) {
        return x - y;
    }
    public int mul(int x, int y) {
        return x * y;
    }
    public int div(int x, int y) {
        return x / y;
    }
}


package com.kgisl.qs1;

import static org.junit.Assert.assertEquals;

import org.junit.Test;

/**
 * CalculatorTest
 */
public class CalculatorTest {
    Calculator c = new Calculator();

    @Test
    public void addTest() {
        int actual=c.add(10, 20);
        int expected=30;
        assertEquals(expected, actual);
    }

    @Test
    public void subTest() {
        int actual=c.sub(10, 20);
        int expected=-10;
        assertEquals(expected, actual);
    }

    @Test
    public void mulTest() {
        int actual=c.mul(10, 20);
        int expected=200;
        assertEquals(expected, actual);
    }

    @Test
    public void divTest() {
        int actual=c.div(100, 20);
        int expected=5;
        assertEquals(expected, actual);
    }
}


package com.kgisl.qs1;

import static org.junit.Assert.assertEquals;

import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

/**
 * CalculatorTest
 */
@RunWith(Parameterized.class)
public class CalculatorParamsTest {
    private int fn;
    private int sn;

    Calculator c = new Calculator();

    public CalculatorParamsTest(int fn, int sn) {
        this.fn = fn;
        <http://this.sn|this.sn> = sn;
    }

    @Parameters
    public static Collection input() {

        return Arrays.asList(new Object[][] { { 10, 20 }, { 30, 40 } });
    }

    @Test
    public void addTest() {
        int actual = c.add(fn, sn);
        int expected = fn + sn;
        assertEquals(expected, actual);
    }

    @Test
    public void subTest() {
        int actual = c.sub(fn, sn);
        int expected = fn - sn;
        assertEquals(expected, actual);
    }

    @Test
    public void mulTest() {
        int actual = c.mul(fn, sn);
        int expected = fn * sn;
        assertEquals(expected, actual);
    }

    @Test
    public void divTest() {
        // int actual = c.div(fn, sn);
        // int expected = fn/sn;
        // assertEquals(expected, actual);
        System.out.println(fn);
        System.out.println(sn);
        int actual = c.div(fn, sn);
        int expected = 10 / 20;
        assertEquals(expected, actual);
    }
}
  

  [2019-04-09T11:36:07Z] baraneetharan.r: By default maven uses maven-surefire-plugin:2.12.4. Some of the maven commands may not work with the following error.
**********************************************************************************
Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.12.4:test
**********************************************************************************

Add the following plugin to get rid of this error


&lt;plugin&gt;
        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
        &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;
        &lt;version&gt;3.0.0-M3&lt;/version&gt;
&lt;/plugin&gt;


Maven commands to run test classes and methods
**********************************************
Run all test methods with in test package
mvn test

Run all test methods in a class
mvn -Dtest=StudentDemoTest test

Run one test method in a class
mvn -Dtest=StudentDemoTest#getAllStudentsTest test

Run multiple test methods in a class
mvn -Dtest=StudentDemoTest#getAllStudentsTest+getStudentTest test

Run all test methods in multiple test classes
mvn -Dtest="StudentDemoTest,CalculatorTest" test

Run selected test methods in multiple test classes
mvn -Dtest="StudentDemoTest#getAllStudentsTest+getStudentTest,CalculatorTest" test

Run all test methods in multiple test classes using expression
mvn -Dtest="*Test" test

Run all test Clases from subdirectory, eg: /doc/ You can use command:
mvn -Dtest=*/doc/* test
  

  [2019-04-09T11:37:31Z] baraneetharan.r: 
  

  [2019-04-09T12:02:23Z] baraneetharan.r: <https://www.guru99.com/junit-parameterized-test.html>
  
    ---------------
    | Attachments |
    ---------------
    
    JUnit Parameterized Test with Example using @Parameters
    https://www.guru99.com/junit-parameterized-test.html

    
  

  [2019-04-09T12:07:05Z] baraneetharan.r: A static method belongs to the class rather than object of a class. A static method invoked without the need for creating an instance of a class. static method can access static data member and can change the value of it.

  

  [2019-04-09T12:08:53Z] baraneetharan.r: <https://www.geeksforgeeks.org/static-methods-vs-instance-methods-java/>
  
    ---------------
    | Attachments |
    ---------------
    
    Static methods vs Instance methods in Java - GeeksforGeeks
    https://www.geeksforgeeks.org/static-methods-vs-instance-methods-java/

    
  

  [2019-04-09T12:36:03Z] baraneetharan.r: Do it Yourself
  

  [2019-04-09T12:36:04Z] baraneetharan.r: Create ArrayList from array

How do You remove repeated elements from ArrayList?
  

  [2019-04-10T08:49:51Z] baraneetharan.r: Java - Method executed prior to Default Constructor
***************************************************
public class ChkCons {

    int var = getVal();

    ChkCons() {
        System.out.println("I'm Default Constructor.");
    }

    public int getVal() {
        System.out.println("I'm in Method.");
        return 10;
    }

    public static void main(String[] args) {

        ChkCons c = new ChkCons();

    }

}
OUTPUT :

I'm in Method.
I'm Default Constructor.

Instance variable initialization expressions such as int var = getVal(); are evaluated after the super class constructor is executed but prior to the execution of the current class constructor's body.
Therefore getVal() is called before the body of the ChkCons constructor is executed

In what order do static blocks and initialization blocks execute when using inheritance?
****************************************************************************************
public class Parent {
    public Parent() {
        System.out.println("Parent Constructor");
    }
    static {
        System.out.println("Parent static block");
    }
    {
        System.out.println("Parent initialisation  block");
    }
}

public class Child extends Parent {
    {
        System.out.println("Child initialisation block");
    }
    static {
        System.out.println("Child static block");
    }

    public Child() {
        System.out.println("Child Constructor");
    }
    public static void main(String[] args) {
        new Child();
    }
}
The output of the above code will be

Parent static block
Child static block
Parent initialization  block
Parent Constructor
Child initialization block
Child Constructor

There are several rules in play

static blocks are always run before the object is created, so that's why you see print messages from both parents and child static blocks
now, when you are calling constructor of the subclass (child), then this constructor implicitly calls super(); before executing it's own constructor. Initialization block comes into play even before the constructor call, so that's why it is called first. So now your parent is created and the program can continue creating child class which will undergo the same process.

Explanations:

Static block of parent is executed first because it is loaded first and static blocks are called when the class is loaded.
  

  [2019-04-10T08:50:53Z] baraneetharan.r: 
  

  [2019-04-10T11:58:40Z] baraneetharan.r: import static org.junit.Assert.assertEquals;

// import static junit.framework.Assert.assertEquals;

******************************************************************************************

JUnit 3.X: junit.framework.Assert

JUnit 4.X: org.junit.Assert

Prefer the newest one, especially when running JDK5 and higher with annotation support.

******************************************************************************************

The old method (of JUnit 3) was to mark the test-classes by extending junit.framework.TestCase. That inherited junit.framework.Assert itself and your test class gained the ability to call the assert methods this way.
Since version 4 of JUnit, the framework uses Annotations for marking tests. So you no longer need to extend TestCase. But that means, the assert methods aren't available. But you can make a static import of the new Assert class. That's why all the assert methods in the new class are static methods. So you can import it this way:

import static org.junit.Assert.*;
After this static import, you can use this methods without prefix.

At the redesign they also moved to the new package org.junit that follows better the normal conventions for package naming.

******************************************************************************************
  

  [2019-04-11T10:42:15Z] baraneetharan.r: Do it Yourself
  

  [2019-04-11T10:42:17Z] baraneetharan.r: Combine two arraylists
find unique values
find common values
Collection&lt;String&gt; listOne = new ArrayList(Arrays.asList("a", "b", "c", "d", "e", "f", "g"));
Collection&lt;String&gt; listTwo = new ArrayList(Arrays.asList("a", "b", "d", "e", "f", "gg", "h"));
  

  [2019-04-11T11:07:50Z] baraneetharan.r: <https://git-scm.com/download/win>
  

  [2019-04-12T04:30:11Z] baraneetharan.r: import java.util.Arrays;
import java.util.List;
import java.util.ArrayList;

class HowForEachWorks1 {
    public static void main(String[] args) {
        ArrayList list1=new ArrayList();
        List&lt;Integer&gt; numberList = Arrays.asList(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);

        for (Integer i : numberList) {
            if ((i &amp; 1)==0) {
                System.out.println(i);
            }

        }
    }

}
  

  [2019-04-12T05:39:55Z] baraneetharan.r: <https://image.slidesharecdn.com/java8-141003090600-phpapp02/95/functional-java-8-in-everyday-life-9-638.jpg?cb=1412327296>
  
    ---------------
    | Attachments |
    ---------------
    
    
    

    
  

  [2019-04-12T06:04:06Z] baraneetharan.r: <https://www.slideshare.net/martyhall/java-8-tutorial-streams-part-1>
  
    ---------------
    | Attachments |
    ---------------
    
    Java 8 Tutorial: Streams Part 1
    https://www.slideshare.net/martyhall/java-8-tutorial-streams-part-1

    
  

  [2019-04-12T06:04:19Z] baraneetharan.r: <https://www.javatpoint.com/java-8-stream>
  
    ---------------
    | Attachments |
    ---------------
    
    Java 8 Stream - javatpoint
    https://www.javatpoint.com/java-8-stream

    
  

  [2019-04-12T06:04:36Z] baraneetharan.r: <https://2.bp.blogspot.com/-tFyvqQwhpFQ/WZp6467TqrI/AAAAAAAAPnY/AfdnCrqViQ4dJQ6jUAXnF-thOTuT-apYQCLcBGAs/s640/What%2Bare%2Bthe%2Bcore%2Bstream%2Boperations%2Bof%2BJava%2B8%2BStream%2B%2BStreams%2Bin%2BJava%2B8.jpg>
  
    ---------------
    | Attachments |
    ---------------
    
    
    

    
  

  [2019-04-12T06:05:08Z] baraneetharan.r: import java.util.*;
import java.util.Arrays;
import java.util.function.Consumer;

class HowForEachWorks {

    public static void main(String[] args) {
        List&lt;String&gt; disneyCharacters = Arrays.asList("Micky", "Donald", "Minnie", "Aurora", "Winnie", "Pluto");

        /*Consumer&lt;String&gt; con = new Consumer&lt;String&gt;() {
            public void accept(String s) {
                System.out.println(s);
            }
        };*/

        //Consumer&lt;String&gt; con = s -&gt; System.out.println(s);
        //disneyCharacters.forEach(con);
        //disneyCharacters.forEach(s-&gt;System.out.println(s));


        // call by method
        disneyCharacters.forEach(System.out::println);

    }
}
```

```
package com.kg.lambdaapp;

import java.util.Arrays;
import java.util.List;
import java.util.ArrayList;

class HowForEachWorks1 {
    public static void main(String[] args) {
        ArrayList list1=new ArrayList();
        List&lt;Integer&gt; numberList = Arrays.asList(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);

        for (Integer i : numberList) {
            if ((i &amp; 1)==0) {
                System.out.println(i);
            }

        }
    }

}
```
  

  [2019-04-12T06:05:41Z] baraneetharan.r: This is classic OOP style of hiding method implementations from the caller.
The caller simply passes a variable to the method which then does something with the value of the variable
and returns another value or produces a side effect as it is in our case.


class LambdaDemo {

    public void printSomething(String something) {
        System.out.println(something);
    }

    public static void main(String[] args) {
        LambdaDemo lambdaDemo = new LambdaDemo();
        String something = "Learning Lambda";
        lambdaDemo.printSomething(something);
    }
}


see an equivalent implementation that uses behavior passing other than variable passing.
To achieve this, we have to create a functional interface that defines that abstracts the behavior instead of a method.
A functional interface is an interface that has only one method:

package com.kg.lambdaapp;

interface Printer {
    void print(String val);
}

class LambdaDemo {

    public void printSomething(String something, Printer printer) {
        //System.out.println(something);
        printer.print(something);
    }

    public static void main(String[] args) {
        LambdaDemo lambdaDemo = new LambdaDemo();
        Printer printer = new Printer() {
            @Override
            public void print(String val) {
                System.out.println(val);
            }
        };
        String something = "Learning Lambda";
        lambdaDemo.printSomething(something, printer);
    }
}

public void print(String toPrint) {
                System.out.println(toPrint);
            }

lambda expressions

package com.kg.lambdaapp;

interface Printer {
    void print(String val);
}

class LambdaDemo {

    public void printSomething(String something, Printer printer) {
        //System.out.println(something);
        printer.print(something);
    }

    public static void main(String[] args) {
        LambdaDemo lambdaDemo = new LambdaDemo();
        Printer printer = (String toPrint) -&gt; {
                System.out.println(toPrint);

        };
        String something = "Learning Lambda";
        lambdaDemo.printSomething(something, printer);
    }
}

(String toPrint) -&gt; {
                System.out.println(toPrint);

        }
  

  [2019-04-12T06:05:55Z] baraneetharan.r: <https://beginnersbook.com/2017/10/java-8-interface-changes-default-method-and-static-method/>
  
    ---------------
    | Attachments |
    ---------------
    
    Java 8 Interface Changes – default method and static method
    https://beginnersbook.com/2017/10/java-8-interface-changes-default-method-and-static-method/

    
  

  [2019-04-15T04:00:40Z] baraneetharan.r: 
  

  [2019-04-15T05:25:20Z] baraneetharan.r: 
  

  [2019-04-15T05:34:19Z] baraneetharan.r: Do it Yourself
  

  [2019-04-15T05:34:20Z] baraneetharan.r: concurrency, parallelism, thread and process
socket vs port

find odd even in single line java
  

  [2019-04-15T09:42:50Z] baraneetharan.r: import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.function.Consumer;
import java.util.function.Predicate;

/**
 * LambdaDemo
 */
public class LambdaDemo1 {
    public static void main(String[] args) {

        List&lt;Integer&gt; numberList = Arrays.asList(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);

        Predicate&lt;Integer&gt; odd=new Predicate&lt;Integer&gt;() {
            @Override
            public boolean test(Integer t) {
                return t%2!=0;
            }
        };

        // Predicate&lt;Integer&gt; odd=x-&gt;x%2!=0;
        // Predicate&lt;Integer&gt; even=x-&gt;x%2==0;

        numberList.stream().filter(odd).forEach(System.out::println);
        numberList.stream().filter(odd.negate()).forEach(System.out::println);
    }


}
  

  [2019-04-15T10:55:52Z] baraneetharan.r: *Comparable*

A comparable object is capable of comparing itself with another object. The class itself must implements the java.lang.Comparable interface in order to be able to compare its instances.

*Comparator*

A comparator object is capable of comparing two different objects. The class is not comparing its instances, but some other class’s instances. This comparator class must implement the java.util.Comparator interface.

<https://www.javatpoint.com/Comparator-interface-in-collection-framework>
<https://www.javatpoint.com/difference-between-comparable-and-comparator>

<https://www.digizol.com/2008/07/java-sorting-comparator-vs-comparable.html>
  
    ---------------
    | Attachments |
    ---------------
    
    Java Comparator - javatpoint
    https://www.javatpoint.com/Comparator-interface-in-collection-framework

    
    Difference between Comparable and Comparator - javatpoint
    https://www.javatpoint.com/difference-between-comparable-and-comparator

    
    Java Sorting: Comparator vs Comparable Tutorial
    https://www.digizol.com/2008/07/java-sorting-comparator-vs-comparable.html

    
  

  [2019-04-16T03:41:55Z] baraneetharan.r: <https://docs.oracle.com/javase/8/docs/api/?java/lang/FunctionalInterface.html>
  

  [2019-04-16T05:45:08Z] baraneetharan.r: JSR
JCP
JEP

Java 8 vs java 9
open jdk vs oracle jdk
Java 8 / 9 features
  

  [2019-04-17T04:10:35Z] baraneetharan.r: Do it Yourself
  

  [2019-04-17T04:10:35Z] baraneetharan.r: id, name, college, department, year, mark1, mark2, mark3

First 3 colleges
Last 3 colleges
College wise toppers
Top 3 departments
Department wise average
  

  [2019-04-17T04:23:40Z] baraneetharan.r: <https://blog.idrsolutions.com/2015/02/java-8-method-references-explained-5-minutes/>
  
    ---------------
    | Attachments |
    ---------------
    
    Java 8 Method References explained in 5 minutes
    https://blog.idrsolutions.com/2015/02/java-8-method-references-explained-5-minutes/

    
  

  [2019-04-17T09:02:35Z] baraneetharan.r: *Spread Syntax*
Take a look at how the spread syntax can spread an array

var parts = ['shoulders', 'knees'];
var lyrics = ['head', ...parts, 'and', 'toes']; // ["head", "shoulders", "knees", "and", "toes"]
  

  [2019-04-17T09:03:30Z] baraneetharan.r: <https://stackoverflow.com/questions/26684562/whats-the-difference-between-map-and-flatmap-methods-in-java-8>
  
    ---------------
    | Attachments |
    ---------------
    
    What's the difference between map and flatMap methods in Java 8?
    https://stackoverflow.com/questions/26684562/whats-the-difference-between-map-and-flatmap-methods-in-java-8

    
  

  [2019-04-17T09:04:12Z] baraneetharan.r: *Java 8 Optional Class*
  

  [2019-04-17T09:04:15Z] baraneetharan.r: <https://www.tutorialspoint.com/java8/java8_optional_class.htm>
<https://beginnersbook.com/2017/10/java-8-optional-class/>
  
    ---------------
    | Attachments |
    ---------------
    
    Java 8 Optional Class
    https://www.tutorialspoint.com/java8/java8_optional_class.htm

    
    Java 8 Optional Class
    https://beginnersbook.com/2017/10/java-8-optional-class/

    
  

  [2019-04-24T04:04:10Z] baraneetharan.r: CAPITALIZATION OF IDENTIFIERS
There are two standard capitalization patterns for identifiers, particularly “multiple
word” identifiers:
camel case: First word begins with a lowercase letter, additional words begin
with uppercase letters (finalTotal)
Pascal case: All words begin with an uppercase letter (FinalTotal)
The code in this chapter uses the following convention for creating identifiers (examples included):
Simple variables – camel case: speed, time, finalTotal
Named constants - all uppercase: PI, FREEZING_POINT
Method names – camel case: myMethod, getInput
Class names – Pascal case: MyClass
Object names – camel case: myObject
The underscore character is not used except for named constants. Occasionally, however,
we’ll use single capital letters for identifiers in quick code fragments.
  

  [2019-04-24T09:00:36Z] baraneetharan.r: <https://github.com/baraneetharan/javatest/blob/master/javatest>
  
    ---------------
    | Attachments |
    ---------------
    
    baraneetharan/javatest
    https://github.com/baraneetharan/javatest/blob/master/javatest

    
  

  [2019-04-24T12:56:08Z] baraneetharan.r: set HTTP_PROXY=<http://10.100.1.124:3128>
set HTTPS_PROXY=<http://10.100.1.124:3128>

git config --global http.proxy 10.100.1.124:3128
git config --global https.proxy 10.100.1.124:3128

npm config set proxy <http://10.100.1.124:3128>
npm config set https-proxy <http://10.100.1.124:3128>
  

  [2019-04-26T13:03:02Z] baraneetharan.r: <https://github.com/baraneetharan/javatest>
  
    ---------------
    | Attachments |
    ---------------
    
    baraneetharan/javatest
    https://github.com/baraneetharan/javatest

    
  

  [2019-04-26T13:04:13Z] baraneetharan.r: git push -f origin &lt;branch&gt;

git rm -r dependency-reduced-pom.xml
git commit -m "Remove dependency-reduced-pom.xml"
git push -u origin master
  

  [2019-04-26T13:04:55Z] baraneetharan.r: 
  

  [2019-04-29T04:44:06Z] sasikumar.b: <https://www.testingexcellence.com/4-different-ways-iterate-map-java/>
  
    ---------------
    | Attachments |
    ---------------
    
    Different Ways to Iterate Through a Map in Java Including Java 8 ForEach
    https://www.testingexcellence.com/4-different-ways-iterate-map-java/

    
  

  [2019-04-29T04:44:21Z] sasikumar.b: <https://www.geeksforgeeks.org/iterate-map-java/>
  
    ---------------
    | Attachments |
    ---------------
    
    How to iterate any Map in Java - GeeksforGeeks
    https://www.geeksforgeeks.org/iterate-map-java/

    
  

  [2019-04-29T04:45:14Z] sasikumar.b: <https://stackoverflow.com/questions/36782231/printing-a-java-map-mapstring-object-how>
  
    ---------------
    | Attachments |
    ---------------
    
    Printing a java map Map - How?
    https://stackoverflow.com/questions/36782231/printing-a-java-map-mapstring-object-how

    
  

  [2019-04-29T05:43:47Z] baraneetharan.r: <https://docstore.mik.ua/orelly/java-ent/jnut/figs/JN3_1101.gif>
<https://javarevisited.blogspot.com/2011/12/read-and-write-text-file-java.html>
<https://www.geeksforgeeks.org/file-handling-in-java-with-crud-operations/>
<http://www.authorstream.com/Presentation/AANILL-2976585-day-io-streams/>
<https://www.mkyong.com/tutorials/java-io-tutorials/>
  

  [2019-04-29T05:57:55Z] baraneetharan.r: <https://www.javatpoint.com/java-file-class>
<https://www.javatpoint.com/java-fileinputstream-class>
<https://www.javatpoint.com/java-fileoutputstream-class>
  
    ---------------
    | Attachments |
    ---------------
    
    Java File Class - javatpoint
    https://www.javatpoint.com/java-file-class

    
    Java FileInputStream Class - javatpoint
    https://www.javatpoint.com/java-fileinputstream-class

    
    Java FileOutputStream Class - javatpoint
    https://www.javatpoint.com/java-fileoutputstream-class

    
  

  [2019-04-29T06:01:38Z] ramya.a: File Read and Write:
  

  [2019-04-29T06:01:42Z] ramya.a: package com.kgisl.data;

import java.io.*;

public class FileRead {
    public static void main(String[] args) throws Exception {
        File f = new File("D:\\Ramya\\ReadFiles.txt");
        BufferedReader br = new BufferedReader(new FileReader(f));
        String s;
        while ((s = br.readLine()) != null) {
            System.out.println(s);
        }

        String str = "File writing here";
        FileWriter fw = new FileWriter("D:\\Ramya\\wirten2.txt");
        for (int i = 0; i &lt; str.length(); i++) {
            fw.write(str);
            System.out.println("Successfully written..");
            fw.close();
        }
    }
}
  

  [2019-04-29T10:10:19Z] jeevitha.yuvaraj: <@UHXJZBPTM> has joined the channel
  

  [2019-04-30T06:58:09Z] baraneetharan.r: <https://stackabuse.com/libraries-for-reading-and-writing-csvs-in-java/>
<https://stackabuse.com/reading-and-writing-csvs-in-java/>
<https://www.journaldev.com/12014/opencsv-csvreader-csvwriter-example>
  
    ---------------
    | Attachments |
    ---------------
    
    Libraries for Reading and Writing CSVs in Java
    https://stackabuse.com/libraries-for-reading-and-writing-csvs-in-java/

    
    Reading and Writing CSVs in Java
    https://stackabuse.com/reading-and-writing-csvs-in-java/

    
    OpenCSV CSVReader CSVWriter Example - JournalDev
    https://www.journaldev.com/12014/opencsv-csvreader-csvwriter-example

    
  

  [2019-04-30T10:46:47Z] baraneetharan.r: import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;

/**
* Scanner1
*/
public class Scanner1 {

   public static void main(String[] args) {
       String file = "sample.txt";
       FileReader fr;
       try {
           fr = new FileReader(file);
           BufferedReader buffer = new BufferedReader(fr);
           String line;
           long length = 0;
           try {
               while ((line = buffer.readLine()) != null) {
                   if (line.isEmpty()) {
                       break;
                   }
                   System.out.println(line);
                   length += line.length();
               }
           } catch (IOException e) {
               // TODO Auto-generated catch block
               e.printStackTrace();
           }
       } catch (FileNotFoundException e) {
           // TODO Auto-generated catch block
           e.printStackTrace();
       }

   }
}







import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;

/**
* Scanner1
*/
public class Scanner1 {

   public static void main(String[] args) {
       String file = "sample.txt";
       FileReader fr;
       try {
           fr = new FileReader(file);
           BufferedReader buffer = new BufferedReader(fr);
           String line;
           long length = 0;
           String[] data1 = null;
           try {
               while ((line = buffer.readLine()) != null) {
                   // if (line.isEmpty()) {
                   // break;
                   // }
                   data1 = line.split(",");
                   for (String var : data1) {
                       System.out.println(var);
                   }
                   length += line.length();
               }

           } catch (IOException e) {
               // TODO Auto-generated catch block
               e.printStackTrace();
           }
       } catch (FileNotFoundException e) {
           // TODO Auto-generated catch block
           e.printStackTrace();
       }

   }
}
  

  [2019-05-02T07:25:14Z] baraneetharan.r: String line;
          long length = 0;
          String[] data1 = null;
          try {
              while ((line = buffer.readLine()) != null) {
                  // if (line.isEmpty()) {
                  // break;
                  // }
                  data1 = line.split(",");
                  for (String var : data1) {
                      System.out.println(var);
                  }
                  length += line.length();
              }
			  
<https://stackabuse.com/reading-and-writing-csvs-in-java/>
<https://www.callicoder.com/assets/images/post/large/apache-poi-classes-and-interfaces.jpg>
<https://www.guru99.com/images/AdvanceSelenium/071514_0711_AllAboutExc5.png>
<https://en.wikipedia.org/wiki/Apache_POI>
<https://poi.apache.org/components/spreadsheet/>
<https://howtodoinjava.com/apache-commons/readingwriting-excel-files-in-java-poi-tutorial/>
  

  [2019-05-02T07:25:23Z] baraneetharan.r: &lt;dependency&gt;
      &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;
      &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt;
      &lt;version&gt;4.1.0&lt;/version&gt;
    &lt;/dependency&gt;
  

  [2019-05-02T07:26:31Z] baraneetharan.r: ApachePOIRead
  

  [2019-05-02T08:51:00Z] baraneetharan.r: new File("D:\\baranee\\java\\mavenprojects\\excelpoi\\src\\main\\resources\\Book1.xlsx"));
new File("src/main/resources/Book1.xlsx"));
enum in java
<https://www.geeksforgeeks.org/enum-in-java/>
cell.getCellType()
  
    ---------------
    | Attachments |
    ---------------
    
    enum in Java - GeeksforGeeks
    https://www.geeksforgeeks.org/enum-in-java/

    
  

  [2019-05-03T04:42:14Z] baraneetharan.r: package com.kgisl.excelpoi;

import java.io.File;
import java.io.FileOutputStream;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 * WriteExcelFile
 */
public class WriteExcelFile {

    public static void main(String[] args) {
        // Blank workbook
        XSSFWorkbook workbook = new XSSFWorkbook();

        // Create a blank sheet
        XSSFSheet sheet = workbook.createSheet("Employee Data");

        // This data needs to be written (Object[])
        Map&lt;String, Object[]&gt; data = new TreeMap&lt;String, Object[]&gt;();
        data.put("1", new Object[] { "ID", "NAME", "LASTNAME", "M1", "M2", "M3" });
        data.put("2", new Object[] { 1, "Amit", "Shukla", 10, 20, 30 });
        data.put("3", new Object[] { 2, "Lokesh", "Gupta", 15, 25, 35 });
        data.put("4", new Object[] { 3, "John", "Adwards", 20, 30, 40 });
        data.put("5", new Object[] { 4, "Brian", "Schultz", 30, 35, 45 });

        // Row header = sheet.createRow(0);
        // header.createCell(4).setCellValue("Total");
        // // Row dataRow = sheet.createRow(1);

        // // dataRow.createCell(4).setCellFormula("A2*B2*C2");

        // // sheet.getRow(17).createCell(4);
        // // sheet.getRow(17).getCell(4).setCellValue("NEWCOLUMN");

        // Iterate over data and write to sheet
        Set&lt;String&gt; keyset = data.keySet();
        int rownum = 0;
        for (String key : keyset) {
            Row row = sheet.createRow(rownum++);
            Object[] objArr = data.get(key);
            int cellnum = 0;

            for (Object obj : objArr) {
                Cell cell = row.createCell(cellnum++);
                if (obj instanceof String)
                    cell.setCellValue((String) obj);
                else if (obj instanceof Integer)
                    cell.setCellValue((Integer) obj);
            }
            // Cell newcell = row.createCell(row.getLastCellNum(), CellType.STRING);
            Cell totcell = row.createCell(row.getLastCellNum(), CellType.NUMERIC);
            if (row.getRowNum() == 0) {
                totcell.setCellValue("Total");
            } else {
                // totcell.setCellFormula("SUM(D2:F2)");
                double m1 = row.getCell(3).getNumericCellValue();
                double m2 = row.getCell(4).getNumericCellValue();
                double m3 = row.getCell(5).getNumericCellValue();
                totcell.setCellValue(m1+m2+m3);;
            }
        }
        try {
            // Write the workbook in file system
            FileOutputStream out = new FileOutputStream(new File("writeexcel.xlsx"));
            workbook.write(out);
            out.close();
            System.out.println("File written successfully on disk.");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
  

  [2019-05-03T09:20:07Z] baraneetharan.r: Conditional Formatting
  

  [2019-05-03T09:20:08Z] baraneetharan.r: public static void formatting(){
        SheetConditionalFormatting sheetCF = sheet.getSheetConditionalFormatting();

        // //Condition 1: Cell Value Is   greater than  70   (Blue Fill)
        // ConditionalFormattingRule rule1 = sheetCF.createConditionalFormattingRule(<http://ComparisonOperator.GT|ComparisonOperator.GT>, "70");
        // PatternFormatting fill1 = rule1.createPatternFormatting();
        // fill1.setFillBackgroundColor(IndexedColors.BLUE.index);
        // fill1.setFillPattern(PatternFormatting.SOLID_FOREGROUND);

        //Condition 2: Cell Value Is  less than      50   (Green Fill)
        ConditionalFormattingRule rule2 = sheetCF.createConditionalFormattingRule(<http://ComparisonOperator.LT|ComparisonOperator.LT>, "40");
        PatternFormatting fill2 = rule2.createPatternFormatting();
        fill2.setFillBackgroundColor(IndexedColors.RED.index);
        fill2.setFillPattern(PatternFormatting.SOLID_FOREGROUND);

        CellRangeAddress[] regions = {
                CellRangeAddress.valueOf("D1:D5"),CellRangeAddress.valueOf("E1:E5"),CellRangeAddress.valueOf("F1:F5")
        };

        sheetCF.addConditionalFormatting(regions,  rule2);

    }
  

  [2019-05-03T12:58:31Z] baraneetharan.r: 
  

  [2019-05-03T12:58:54Z] baraneetharan.r: package com.kgisl.excelpoi;

/**
 * Marks
 */
public class Marks {

    private int id;
    private String name;
    private String college;
    private String department;
    private int year;
    private int mark1;
    private int mark2;
    private int mark3;

    Marks() {
    }

    Marks(int id, String name, String college, String department, int year, int mark1, int mark2, int mark3) {
        this.id = id;
        this.name = name;
        this.college = college;
        this.department = department;
        this.year = year;
        this.mark1 = mark1;
        this.mark2 = mark2;
        this.mark3 = mark3;
    }

    /**
     * @return the id
     */
    public int getId() {
        return id;
    }

    /**
     * @param id the id to set
     */
    public void setId(int id) {
        this.id = id;
    }

    /**
     * @return the name
     */
    public String getName() {
        return name;
    }

    /**
     * @param name the name to set
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * @return the college
     */
    public String getCollege() {
        return college;
    }

    /**
     * @param college the college to set
     */
    public void setCollege(String college) {
        this.college = college;
    }

    /**
     * @return the department
     */
    public String getDepartment() {
        return department;
    }

    /**
     * @param department the department to set
     */
    public void setDepartment(String department) {
        this.department = department;
    }

    /**
     * @return the year
     */
    public int getYear() {
        return year;
    }

    /**
     * @param year the year to set
     */
    public void setYear(int year) {
        this.year = year;
    }

    /**
     * @return the mark1
     */
    public int getMark1() {
        return mark1;
    }

    /**
     * @param mark1 the mark1 to set
     */
    public void setMark1(int mark1) {
        this.mark1 = mark1;
    }

    /**
     * @return the mark2
     */
    public int getMark2() {
        return mark2;
    }

    /**
     * @param mark2 the mark2 to set
     */
    public void setMark2(int mark2) {
        this.mark2 = mark2;
    }

    /**
     * @return the mark3
     */
    public int getMark3() {
        return mark3;
    }

    /**
     * @param mark3 the mark3 to set
     */
    public void setMark3(int mark3) {
        this.mark3 = mark3;
    }

    @Override
    public String toString() {
        return id + " " + name + " " + college + " " + department + " " + year + " " + mark1 + " " + mark2 + " "
                + mark3;
    }
}
  

  [2019-05-03T12:59:30Z] baraneetharan.r: 
  

  [2019-05-03T13:00:11Z] baraneetharan.r: outputfile
  

  [2019-05-06T06:13:36Z] manimekalai.k: // Create headerRow cells
        for (int i = 0; i &lt; columns.length; i++) {
            Cell cell = headerRow.createCell(i);
            cell.setCellValue(columns[i]);
        }

        // sort by result
        markList.sort(Comparator.comparing(Marks::result));
        markList.forEach(System.out::println);

        // Construct data cells
        int rowNum = 1;
  

  [2019-05-06T06:27:05Z] manimekalai.k: // sort by result
        markList.sort(Comparator.comparing(Marks::result));
        // markList.forEach(System.out::println);

        markList.removeIf(x -&gt; x.result().equals("fail"));
        // Construct data cells
        int rowNum = 1;
  

  [2019-05-07T04:57:32Z] baraneetharan.r: <https://i2.wp.com/www.knowledgewala.com/wp-content/uploads/2016/07/JDBC-Architecture.gif?resize=613%2C502>
<http://www.ntu.edu.sg/home/ehchua/programming/java/images/JDBC_Cycle.png>
<http://www.benchresources.net/wp-content/uploads/2016/05/4-Java-JDBC-Database-URL-explanation-diagrammetrically-oracle.png>
<http://www.ntu.edu.sg/home/ehchua/programming/java/jdbc_basic.html>
<https://javaconceptoftheday.com/wp-content/uploads/2015/07/executeQueryVSexecuteUpdateVSexecute.png>
<https://mvnrepository.com/artifact/mysql/mysql-connector-java/8.0.16>
drivermanager vs datasource
create statement vs prepared statement
  

  [2019-05-07T10:21:57Z] baraneetharan.r: <https://www.journaldev.com/1377/java-singleton-design-pattern-best-practices-examples>
  
    ---------------
    | Attachments |
    ---------------
    
    Java Singleton Design Pattern Example Best Practices - JournalDev
    https://www.journaldev.com/1377/java-singleton-design-pattern-best-practices-examples

    
  

  [2019-05-07T10:22:12Z] baraneetharan.r: <http://www.kubikvirrey2.com/wp-content/uploads/2018/10/design-patterns-java-design-pattern-and-implementation-of-singleton-design-pattern-in.png>
  
    ---------------
    | Attachments |
    ---------------
    
    
    

    
  

  [2019-05-08T07:33:48Z] baraneetharan.r: Unit test : 2, Integration test : 0
  

  [2019-05-08T08:40:53Z] giriprasath.j: package com.kgisl.junit;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import com.mysql.cj.jdbc.MysqlDataSource;

import org.apache.commons.dbcp2.BasicDataSource;

/**
 * DataSourceExample
 */
public class DataSourceExample {
    Connection connection = null;
    // BasicDataSource bdSource = new BasicDataSource();
    MysqlDataSource bdSource = new MysqlDataSource();

    DataSourceExample() {
        // Set dataSource Properties

        // bdSource.setDriverClassName("com.mysql.jdbc.Driver");
        // bdSource.setUrl("jdbc:<mysql://localhost:3306/giriprasath%22|mysql://localhost:3306/giriprasath">);
        // bdSource.setUsername("root");
        // bdSource.setPassword("");

        bdSource.setServerName("localhost");
        bdSource.setPortNumber(3306);
        bdSource.setDatabaseName("giriprasath");
        bdSource.setUser("root");
        bdSource.setPassword("");

    }

    public static void main(String[] args) throws SQLException {
        display();
        delete();
        display();
        insert();
        display();
        update();
        display();
    }

    public static void display() throws SQLException {
        DataSourceExample dsExample = new DataSourceExample();
        Connection con = dsExample.createConnection();
        Statement stmt = con.createStatement();
        String query = "SELECT * FROM student";
        ResultSet rs = stmt.executeQuery(query);
        while (rs.next()) {
            System.out.println("Name- " + rs.getString("Name") + ", RollNo- " + rs.getInt("RollNo") + ", Dept- "
                    + rs.getString("Dept") + ", College- " + rs.getString("College"));
        }
        rs.close();
        stmt.close();
        con.close();

    }

    public static void insert() throws SQLException {
        String query = "insert into student values ('Gone Fishing', 3001, 'IT', 'KITE')";
        System.out.println("\nThe SQL statement is: " + query + "\n"); // Echo for debugging
        DataSourceExample dsExample = new DataSourceExample();
        Connection con = dsExample.createConnection();
        Statement stmt = con.createStatement();
        int countInserted = stmt.executeUpdate(query);
        System.out.println(countInserted + " records inserted.\n");

        stmt.close();
        con.close();
    }

    public static void delete() throws SQLException {
        String query = "delete from student where RollNo =3001";
        System.out.println("\nThe SQL statement is: " + query + "\n"); // Echo for debugging
        DataSourceExample dsExample = new DataSourceExample();
        Connection con = dsExample.createConnection();
        Statement stmt = con.createStatement();
        int countDeleted = stmt.executeUpdate(query);
        System.out.println(countDeleted + " records deleted.\n");

        stmt.close();

    }

    public static void update() throws SQLException {
        String query = "update student set Name='GiriPrasath' where RollNo =1001";
        System.out.println("\nThe SQL statement is: " + query + "\n"); // Echo for debugging
        DataSourceExample dsExample = new DataSourceExample();
        Connection con = dsExample.createConnection();
        Statement stmt = con.createStatement();
        int countDeleted = stmt.executeUpdate(query);
        System.out.println(countDeleted + " records updated.\n");

        stmt.close();

    }

    private Connection createConnection() {
        Connection con = null;
        try {

            con = bdSource.getConnection();
        } catch (Exception e) {
            System.out.println("Error Occured " + e.toString());
        }
        return con;
    }
}
  

  [2019-05-08T12:51:07Z] manimekalai.k: public static void multiplesinsertuspreparedstatement() throws SQLException {

    String query = " insert into student (RollNo ,  Name , Course , Address  )"
        + " values (?, ?, ?, ?)";
    List&lt;Student&gt; al = new ArrayList&lt;Student&gt;();
    al.add(new Student(11,"Aaaa","IT","XXXXX"));
    al.add(new Student(12,"Aaaa","IT","XXXXX"));
    al.add(new Student(13,"Aaaa","IT","XXXXX"));

    System.out.println("\nThe SQL statement is: " + query + "\n"); // Echo for debugging
    DataSourceExample dsExample = new DataSourceExample();
    Connection con = dsExample.createConnection();
   PreparedStatement preparedStmt = con.prepareStatement(query);
   int i=0;
   for (Student data : al) {
      preparedStmt.setInt (1, data.getRollno());
      preparedStmt.setString (2, data.getName());
      preparedStmt.setString   (3, data.getCourse());
      preparedStmt.setString(4, data.getAddress());
      i+=preparedStmt.executeUpdate();
   }
      System.out.println(i);

    con.close();
}
  

  [2019-05-08T13:01:58Z] sanjeevi.p: <https://javaconceptoftheday.com/wp-content/uploads/2015/09/StatementVsPreparedStatementVsCallableStatement.png>
  
    ---------------
    | Attachments |
    ---------------
    
    
    

    
  

  [2019-05-09T03:36:46Z] manimekalai.k: 
  

  [2019-05-09T03:37:57Z] manimekalai.k: <https://www.roseindia.net/tutorial/java/jdbc/jdbcdatasourceexample.html>
  
    ---------------
    | Attachments |
    ---------------
    
    JDBC DataSource Example
    https://www.roseindia.net/tutorial/java/jdbc/jdbcdatasourceexample.html

    
  

  [2019-05-09T03:40:31Z] manimekalai.k: <https://docs.oracle.com/javase/7/docs/api/java/sql/ResultSet.html>
  

  [2019-05-09T03:49:08Z] manimekalai.k: List&lt;Object&gt; list = MysqlConnect.getDbCon().resultSetToArrayList(query);
            List&lt;Country&gt; countryList = (List&lt;Country&gt;)(List&lt;?&gt;)list;
  

  [2019-05-09T12:15:58Z] krishnan.u: private LocalDateTime releasedate;

LocalDate releasedate;
        releasedate = LocalDate.of(2015, 06, 26);
  

  [2019-05-09T13:07:43Z] krishnan.u: package com.kgisl.excel;

import java.util.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.opencsv.CSVReader;
import com.mysql.cj.jdbc.MysqlDataSource;

/**
 * CRUD_DB
 */
public class CsvToDB
{
    Connection connection = null;
    // BasicDataSource bdSource = new BasicDataSource();
    MysqlDataSource bdSource = new MysqlDataSource();

    CsvToDB()
    {
        // Set dataSource Properties

        // bdSource.setDriverClassName("com.mysql.jdbc.Driver");
        // bdSource.setUrl("jdbc:<mysql://localhost:3306/giriprasath%22|mysql://localhost:3306/giriprasath">);
        // bdSource.setUsername("root");
        // bdSource.setPassword("");

        bdSource.setServerName("localhost");
        bdSource.setPortNumber(3306);
        bdSource.setDatabaseName("student?allowPublicKeyRetrieval=true&amp;useSSL=false&amp;serverTimezone=UTC");
        bdSource.setUser("root");
        bdSource.setPassword("");

    }

    public static void main(String[] args) throws SQLException, IOException
    {

       display();
        insert();
        System.out.println("after insertion :");
        display();

    }

    public static void display() throws SQLException
     {
        CsvToDB dsExample = new CsvToDB();
        Connection con = dsExample.createConnection();
        Statement stmt = con.createStatement();
        String query = "SELECT * FROM employee1";
        ResultSet rs = stmt.executeQuery(query);
        while (rs.next())
        {
            System.out.println( "RollNo- " + rs.getInt("id") + ", Name- " + rs.getString("name") +", Age- "
                    + rs.getString("age") + ", Country- " + rs.getString("country"));
        }
        rs.close();
        stmt.close();
        con.close();

    }

    public static void insert() throws SQLException, FileNotFoundException
    {
        String query = "insert into employee1 (id,name,age,country)" + "values(?,?,?,?)";
        CsvToDB dsExample = new CsvToDB();
        Connection con = dsExample.createConnection();
        PreparedStatement prstm = con.prepareStatement(query);


		CSVReader reader = new CSVReader(new FileReader("D:\\krishna\\New folder\\1234\\emps.csv"), ',');

        List&lt;Employee&gt; emps = new ArrayList&lt;Employee&gt;();
		//read line by line
		String[] record = null;

        try {
            while ((record = reader.readNext()) != null) {
                Employee emp = new Employee();
                emp.setId(record[0]);
                emp.setName(record[1]);
                emp.setAge(record[2]);
                emp.setCountry(record[3]);
                emps.add(emp);
            }
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
            int i=1;
            for (Employee    var : emps)
            {
            prstm.setString(1, var.getId());
            prstm.setString(2, var.getName());
            prstm.setString(3, var.getAge());
            prstm.setString(4, var.getCountry());
            i+=prstm.executeUpdate();
		    }

            System.out.println(i);
            System.out.println(emps);
		
            try {
            reader.close();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

        }


	
        private Connection createConnection()
        {
            Connection con = null;
            try
            {

                con = bdSource.getConnection();
            }
            catch (Exception e)
            {
                System.out.println("Error Occured " + e.toString());
            }
            return con;

    }
}
  

  [2019-05-13T08:52:07Z] baraneetharan.r: Programming languages race
  

  [2019-05-13T09:12:09Z] baraneetharan.r: 
  

  [2019-05-13T09:12:29Z] baraneetharan.r: <https://github.com/baraneetharan/javatest/blob/master/testMay13th.txt>
  
    ---------------
    | Attachments |
    ---------------
    
    baraneetharan/javatest
    https://github.com/baraneetharan/javatest/blob/master/testMay13th.txt

    
  

  [2019-05-13T09:13:46Z] baraneetharan.r: Create a new maven project and solve your programming problems
  

  [2019-05-14T03:55:44Z] baraneetharan.r: <http://agilelion.com/sites/default/files/field/image/Agile_Pyramid.jpg>
<https://cdn-images-1.medium.com/max/1600/1*u8EkWJKo52kzIKXAQHcxyw.png>
<http://nicocasel.net/blog/wp-content/uploads/2017/06/12-agile-principles.png>
<https://issart.com/blog/wp-content/uploads/2018/01/scrum-vs-kanban-comparison-diagram-common-agile-principles.png>
  
    ---------------
    | Attachments |
    ---------------
    
    
    

    
    
    

    
    
    

    
    
    

    
  

  [2019-05-14T09:11:52Z] baraneetharan.r: Trade
UccCode, TradeDate, Scrip, TradeType, Quantity, TradePrice

BhavCopy
TradeDate, Scrip, ClosingPrice
  

  [2019-05-14T11:46:42Z] baraneetharan.r: <https://github.com/baraneetharan/eBarter>
  
    ---------------
    | Attachments |
    ---------------
    
    baraneetharan/eBarter
    https://github.com/baraneetharan/eBarter

    
  

  [2019-05-14T12:16:59Z] baraneetharan.r: File read and write using opencsv - Bay3 (Amirtha,Meena,Anandraj,Krishnan)
sorting,sum, Avg Stream - Bay4 (Devi,Jajja,Sasikumar,Gowtham)
Brokerage calculation - Bay1 (GopalaKrishnan,Mohana,Jeevitha,Swetha,Prabhakar)
Using property file -Bay5 (GiriPrasath, Sanjeev, Kavin,Kannan )
Compare two arraylists - Bay6 ( Manimegalai,Uma,Banu,Naveen)
JDBC connection - Bay2 (SheinsDiwakar, SasikumarB,Cladis,Ramya)
  

  [2019-05-15T04:06:05Z] sanjeevi.p: 
  

  [2019-05-15T04:06:31Z] sanjeevi.p: 
  

  [2019-05-15T05:57:51Z] manimekalai.k: &lt;dependency&gt;
	  &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;
	  &lt;artifactId&gt;gson&lt;/artifactId&gt;
	  &lt;version&gt;2.2.4&lt;/version&gt;
        &lt;/dependency&gt;
  

  [2019-05-15T05:58:35Z] manimekalai.k: 
  

  [2019-05-15T06:17:15Z] manimekalai.k: 
  

  [2019-05-15T06:56:41Z] manimekalai.k: 
  

  [2019-05-15T06:59:18Z] manimekalai.k: 
  

  [2019-05-16T04:15:18Z] manimekalai.k: id	ucccode	tradedate	scrip	tradetype	quantity	price	Market amount	Brokerage%	brokerage	Gst%	gst	Stt%	stt	stamp duty	sd amt	netamount sell	buy amount
1	 ucccode2	 2019-5-23	 CIPLA	 S	1500	558.9	838350	1.25	10479.38	18	1886	0.017	143	0.001	8.3835	825841.62	850858.38
2	 ucccode2	 2019-5-23	 HDFC	 S	45	1,977.50	88987.5	1.25	1112.34	18	200	0.017	15			87660.16	90314.84
3	 ucccode1	 2019-5-23	 LT	 B	2525	1,350.50	3410012.5	1.25	42625.16	18	7673	0.017	580			3460890.66	3460890.66
4	 ucccode3	 2019-5-23	 MARUTI	 B	1500	6,608.15	9912225	1.25	123902.81	18	22303	0.017	1685			10060115.81	10060115.81
5	 ucccode2	 2019-5-23	 ONGC	 B	1500	163.65	245475	1.25	3068.44	18	552	0.017	42			249137.44	249137.44
6	 ucccode1	 2019-5-23	 GAIL	 B	1500	349.4	524100	1.25	6551.25	18	1179	0.017	89			531919.25	531919.25
7	 ucccode3	 2019-5-23	 CIPLA	 B	1500	551.5	827250	1.25	10340.63	18	1861	0.017	141			839592.63	839592.63
8	 ucccode3	 2019-5-23	 GAIL	 S	1500	341.5	512250	1.25	6403.13	18	1153	0.017	87			504606.87	519893.13
9	 ucccode1	 2019-5-23	 GAIL	 B	1500	343	514500	1.25	6431.25	18	1158	0.017	87			522176.25	522176.25
10	 ucccode1	 2019-5-23	 HDFC	 B	1500	1,978.60	2967900	1.25	37098.75	18	6678	0.017	505			3012181.75	3012181.75
  

  [2019-05-16T06:29:21Z] baraneetharan.r: @Contract note for a person on given date 
Top Buy scrip in a month 
Top Sell scrip in a month 
Top Turnover scrip 
Low Turnover scrip 
Net pay for each person for given date 
Total Brokerage for a day 
Highest Brokerage collection day 
Avg Buy price per scrip 
Avg Sell price per scrip 
Total Brokerage for a person 
Highest Brokerage paid on wich date by a person 
Current holding for a person / day 
Who is holding highest share 
Dynamic Brokerage, GST, STT 
Who is doing tranaction on every day 

  

  [2019-05-16T06:38:43Z] gopalakrishnan.a: 
  

  [2019-05-16T06:49:54Z] gopalakrishnan.a: 
  

  [2019-05-20T11:44:29Z] baraneetharan.r: 
  

  [2019-05-21T09:37:19Z] jeevitha.yuvaraj: 
  

  [2019-05-21T09:42:35Z] jeevitha.yuvaraj: <https://www.tutorialspoint.com/html/html_forms.htm>
<https://www.w3schools.com/html/html_forms.asp>

<https://www.guru99.com/jsp-tutorial.html>
<https://beginnersbook.com/jsp-tutorial-for-beginners/>
  
    ---------------
    | Attachments |
    ---------------
    
    HTML Forms
    https://www.tutorialspoint.com/html/html_forms.htm

    
    HTML Forms
    https://www.w3schools.com/html/html_forms.asp

    
    JSP Tutorial for Beginners: Learn in 7 Days
    https://www.guru99.com/jsp-tutorial.html

    
    JSP tutorial for beginners with examples - Java Server Pages
    https://beginnersbook.com/jsp-tutorial-for-beginners/

    
  

  [2019-05-22T06:11:54Z] baraneetharan.r: <https://www.slideshare.net/rizaman/exploring-the-java-servlet-technology>
<https://www.slideshare.net/martyhall/jsp-and-servlet-tutorial-servlet-basics>
<https://image.slidesharecdn.com/q7m2chapter2-160322015257/95/exploring-the-java-servlet-technology-4-638.jpg?cb=1458611710>
<https://www.codeproject.com/KB/web-cache/cacheinwebfarmandwebgarde/States.JPG>
<https://qph.fs.quoracdn.net/main-qimg-2d824814982ef3568d2690434e64761f.webp>
<https://www.java-forums.org/attachments/ocpjwcd/2632d1326391817t-tutorial-review-http-methods-servlet-api-web-component-developer-exam-a13-httpservletallmethods.jpg>
  

  [2019-05-24T06:42:17Z] mohanapriya.s: <https://maven.apache.org/download.cgi>

MAVEN_HOME
D:\apache-maven-3.6.1

JAVA_HOME
C:\Program Files\Java\jdk1.8.0_121

%MAVEN_HOME%\bin
%JAVA_HOME%\bin
  

  [2019-05-27T05:15:23Z] baraneetharan.r: <https://stackoverflow.com/questions/2047122/requestdispatcher-forward-vs-httpservletresponse-sendredirect>

<https://i.stack.imgur.com/RtckU.png>
&lt;context-param&gt;
       &lt;param-name&gt;user_name&lt;/param-name&gt;
       &lt;param-value&gt;Welcome to SpLessons&lt;/param-value&gt;
    &lt;/context-param&gt;

 ServletContext context = getServletContext();
        String fullname = context.getInitParameter("user_name");


&lt;servlet&gt;
        &lt;servlet-name&gt;DemoServlet&lt;/servlet-name&gt;
        &lt;servlet-class&gt;config2.DemoServlet&lt;/servlet-class&gt;
        &lt;init-param&gt;
        &lt;param-name&gt;splesson&lt;/param-name&gt;
        &lt;param-value&gt;Hey man stop thinking start coding&lt;/param-value&gt;
        &lt;/init-param&gt;
  &lt;/servlet&gt;
 ServletConfig config=getServletConfig();
        String splesson=config.getInitParameter("splesson");
  
    ---------------
    | Attachments |
    ---------------
    
    RequestDispatcher.forward() vs HttpServletResponse.sendRedirect()
    https://stackoverflow.com/questions/2047122/requestdispatcher-forward-vs-httpservletresponse-sendredirect

    
    
    

    
  

  [2019-05-27T10:58:35Z] krishnan.u: 
  

  [2019-05-28T12:19:59Z] krishnan.u: 
  

  [2019-05-28T13:35:33Z] krishnan.u: 
  

  [2019-05-29T04:13:10Z] baraneetharan.r: <https://www.journaldev.com/1945/servletcontextlistener-servlet-listener-example>

Event- something which happened. E.g. Mouse clicks, key down,etc
Event Handler- A callback which is usually called when there is an event
Event Listener- Detect an event and call the event handler

A listener is an object that subscribes for events from a source. Cf. the observer pattern. Usually you can have many listeners subscribing for each type of event, and they are added through addXyzListener methods.
Example: The MouseListener in the Java API.

A handler is an object that is responsible for handling certain events. A typical scenario would be to provide a handler for a specific event/task as an argument to a constructor, or set the handler through a setXyzHandler method. In other words, you usually have one handler for each type of event.
Example: The MemoryHandler in the Java API.

Event Listener- Detect an event and call the event handler
  
    ---------------
    | Attachments |
    ---------------
    
    ServletContextListener Servlet Listener Example - JournalDev
    https://www.journaldev.com/1945/servletcontextlistener-servlet-listener-example

    
  

  [2019-05-29T04:41:01Z] baraneetharan.r: 
  

  [2019-05-29T06:34:42Z] krishnan.u: <https://www.heidisql.com/downloads/releases/HeidiSQL_10.1_64_Portable.zip>

CREATE TABLE trade ( Id int(4), Ucccode varchar(50), Scrip varchar(50), TradeDate varchar(50), TradeType varchar(50), Quantity int(10) , TradePrice int(10));

INSERT INTO trade (Id, Ucccode, Scrip, TradeDate, TradeType, Quantity, TradePrice) VALUES (1, 'ucccode2', 'S', '2019-05-23', 'CIPLA', 1500, 559);
INSERT INTO trade (Id, Ucccode, Scrip, TradeDate, TradeType, Quantity, TradePrice) VALUES (2, 'ucccode2', 'S', '2019-05-23', 'HDFC', 45, 1978);
INSERT INTO trade (Id, Ucccode, Scrip, TradeDate, TradeType, Quantity, TradePrice) VALUES (3, 'ucccode1', 'B', '2019-05-23', 'LT', 2525, 1351);
INSERT INTO trade (Id, Ucccode, Scrip, TradeDate, TradeType, Quantity, TradePrice) VALUES (4, 'ucccode3', 'B', '2019-05-23', 'MARUTI', 150, 6608);
INSERT INTO trade (Id, Ucccode, Scrip, TradeDate, TradeType, Quantity, TradePrice) VALUES (5, 'ucccode2', 'B', '2019-05-23', 'ONGC', 225, 164);
INSERT INTO trade (Id, Ucccode, Scrip, TradeDate, TradeType, Quantity, TradePrice) VALUES (6, 'ucccode1', 'B', '2019-05-23', 'GAIL', 335, 349);
INSERT INTO trade (Id, Ucccode, Scrip, TradeDate, TradeType, Quantity, TradePrice) VALUES (7, 'ucccode3', 'B', '2019-05-23', 'CIPLA', 420, 552);
INSERT INTO trade (Id, Ucccode, Scrip, TradeDate, TradeType, Quantity, TradePrice) VALUES (8, 'ucccode3', 'S', '2019-05-23', 'GAIL', 515, 342);
INSERT INTO trade (Id, Ucccode, Scrip, TradeDate, TradeType, Quantity, TradePrice) VALUES (9, 'ucccode1', 'B', '2019-05-23', 'GAIL', 1005, 343);
INSERT INTO trade (Id, Ucccode, Scrip, TradeDate, TradeType, Quantity, TradePrice) VALUES (10, 'ucccode1', 'B', '2019-05-23', 'HDFC', 780, 1979);

*Create PROCEDURE*

CREATE PROCEDURE trade()
BEGIN
SELECT * FROM trade;
END

*Execute Procedure*
CALL trades
  

  [2019-05-29T13:17:26Z] ramya.a: 
  

  [2019-05-29T13:19:49Z] ramya.a: <https://www.codejava.net/java-ee/servlet/webservlet-annotation-examples>
  
    ---------------
    | Attachments |
    ---------------
    
    WebServlet annotation examples
    https://www.codejava.net/java-ee/servlet/webservlet-annotation-examples

    
  

  [2019-05-30T03:33:04Z] baraneetharan.r: <https://docs.oracle.com/javaee/6/api/javax/servlet/annotation/package-summary.html>
<https://www.tutorialspoint.com/servlets/servlets-annotations.htm>
  
    ---------------
    | Attachments |
    ---------------
    
    Servlets Annotations
    https://www.tutorialspoint.com/servlets/servlets-annotations.htm

    
  

  [2019-05-30T03:41:32Z] baraneetharan.r: <https://www.logicbig.com/tutorials/java-ee-tutorial/java-servlet/servlet-annotations.html>
  

  [2019-05-31T05:01:26Z] naveenkumar.a: *Session Tracking*

*Session* - particular interval of time
*Tracking* - recording of the thing

Session Tracking is remembering and recording of client conversion in span of time. It is also called as session management.



<https://www.sitesbay.com/servlet/images/http-protocol.png>

*Http protocol is stateless*

Http protocol is stateless, that means each *request is considered as the new request*.


If Http is *stateful protocol* for multiple requests given by client to web application single connection will be used between browser and web server across the multiple requests

*Session Tracking Techniques*

Cookies
URL Rewriting
Hidden Form Field
HttpSession

<https://www.sitesbay.com/servlet/images/session-tracking.png>


*Cookies*

Name:&lt;input type="text" name="userName"/&gt; &lt;br/&gt;

*Servlet1*
String n=request.getParameter("userName");
*javax.servlet.http.Cookie*

Cookie ck=new Cookie("uname",n);//creating cookie object
response.addCookie(ck);//adding cookie in the response

form action goes to *'servlet2'*

*Servlet2*
Cookie ck[]=request.getCookies();
ck[0].getValue();
  
    ---------------
    | Attachments |
    ---------------
    
    
    

    
    
    

    
  

  [2019-05-31T08:30:45Z] kavinprasath.g: 
  

  [2019-06-04T03:35:31Z] baraneetharan.r: <http://candidjava.com/tutorial/servlet-jsp-httpsession-login-logout-example/>
  
    ---------------
    | Attachments |
    ---------------
    
    Servlet Jsp HttpSession Login logout example | Http session login logout - Candidjava
    http://candidjava.com/tutorial/servlet-jsp-httpsession-login-logout-example/

    
  

  [2019-06-04T03:36:05Z] baraneetharan.r: <http://java.candidjava.com/tutorial/Servlet-Jsp-HttpSession-Login-logout-example.htm>
  
    ---------------
    | Attachments |
    ---------------
    
    Servlet, Jsp, HttpSession, Login, logout, example, tutorial, download
    http://java.candidjava.com/tutorial/Servlet-Jsp-HttpSession-Login-logout-example.htm

    
  

  [2019-06-04T04:13:30Z] naveenkumar.a: 
  

  [2019-06-06T08:49:16Z] baraneetharan.r: PLSQL PPT
  

  [2019-06-07T12:32:43Z] baraneetharan.r: 
  

  [2019-06-08T04:03:53Z] baraneetharan.r: <https://stackoverflow.com/questions/2422468/how-to-upload-files-to-server-using-jsp-servlet>
<https://www.codejava.net/java-ee/servlet/java-file-upload-example-with-servlet-30-api>
<https://www.baeldung.com/upload-file-servlet>
  
    ---------------
    | Attachments |
    ---------------
    
    How to upload files to server using JSP/Servlet?
    https://stackoverflow.com/questions/2422468/how-to-upload-files-to-server-using-jsp-servlet

    
    Java File Upload Example with Servlet 3.0 API
    https://www.codejava.net/java-ee/servlet/java-file-upload-example-with-servlet-30-api

    
    Uploading Files with Servlets and JSP | Baeldung
    https://www.baeldung.com/upload-file-servlet

    
  

  [2019-06-10T12:43:06Z] baraneetharan.r: <https://www.codejava.net/coding/jsp-servlet-jdbc-mysql-create-read-update-delete-crud-example>
  
    ---------------
    | Attachments |
    ---------------
    
    JSP Servlet JDBC MySQL Create Read Update Delete (CRUD) Example
    https://www.codejava.net/coding/jsp-servlet-jdbc-mysql-create-read-update-delete-crud-example

    
  

  [2019-06-11T04:16:50Z] mohanasankari.g: CREATE PROCEDURE insertuser1
(IN  id INT ,
IN uname VARCHAR(20)
)
BEGIN
INSERT INTO USER VALUES(id,uname);
END;
  

  [2019-06-11T04:17:15Z] mohanasankari.g: CALL insertuser1(12,'aaa');
SELECT * FROM USER;
  

  [2019-06-11T04:17:28Z] mohanasankari.g: CREATE PROCEDURE CountOrderByStatus1(
 IN ucccode VARCHAR(25),
 OUT total INT)
BEGIN
 SELECT count(ucccode)
 INTO total
 FROM trade
 WHERE trade.ucccode = ucccode;
END;
  

  [2019-06-11T04:17:40Z] mohanasankari.g: CALL CountOrderByStatus1('ucccode1',@total);
SELECT @total;
  

  [2019-06-11T04:31:13Z] mohanasankari.g: 
  

  [2019-06-11T08:55:02Z] baraneetharan.r: <https://www.codejava.net/java-se/jdbc/jdbc-examples-for-calling-stored-procedures-mysql>
  
    ---------------
    | Attachments |
    ---------------
    
    JDBC Examples for Calling Stored Procedures (MySQL)
    https://www.codejava.net/java-se/jdbc/jdbc-examples-for-calling-stored-procedures-mysql

    
  

  [2019-06-12T03:22:11Z] baraneetharan.r: <https://www.guru99.com/jsp-tutorial.html>
  
    ---------------
    | Attachments |
    ---------------
    
    JSP Tutorial for Beginners: Learn in 7 Days
    https://www.guru99.com/jsp-tutorial.html

    
  

  [2019-06-14T11:54:17Z] ramya.a: <https://tomcat.apache.org/download-80.cgi>
VSCode --&gt; Tomcat for java extension install
VSCode --&gt; file explorer --&gt; tomcat servers + (add tomcat installation directory)
Run Tomcat server
Target --&gt; Right click on war --&gt; run on tomcat server
VSCode --&gt; file explorer --&gt; tomcat servers --&gt; Expnad --&gt; Open in browser --&gt; <http://localhost:8080/>
Click your Application

<https://stackoverflow.com/questions/5109112/how-to-deploy-a-war-file-in-tomcat-7>
  
    ---------------
    | Attachments |
    ---------------
    
    How to deploy a war file in Tomcat 7
    https://stackoverflow.com/questions/5109112/how-to-deploy-a-war-file-in-tomcat-7

    
  

  [2019-06-17T07:18:46Z] sasikumar.b: <https://spring.io/projects>

<https://dzone.com/articles/why-spring-framework-is-popular>

<https://himanshugpt.files.wordpress.com/2010/07/spring.png?w=503&amp;h=398>

<https://memorynotfound.com/spring-mvc-xml-configuration-example/>

<https://stackoverflow.com/questions/18486660/what-are-the-differences-between-model-modelmap-and-modelandview>
  
    ---------------
    | Attachments |
    ---------------
    
    Spring Projects
    https://spring.io/projects

    
    Why Is the Spring Framework so Popular? - DZone Java
    https://dzone.com/articles/why-spring-framework-is-popular

    
    
    

    
    Spring MVC XML Configuration Example
    https://memorynotfound.com/spring-mvc-xml-configuration-example/

    
    What are the differences between Model, ModelMap, and ModelAndView?
    https://stackoverflow.com/questions/18486660/what-are-the-differences-between-model-modelmap-and-modelandview

    
  

  [2019-06-19T07:15:37Z] baraneetharan.r: <https://www.baeldung.com/spring-requestmapping>
  
    ---------------
    | Attachments |
    ---------------
    
    Spring @RequestMapping | Baeldung
    https://www.baeldung.com/spring-requestmapping

    
  

  [2019-06-20T06:20:53Z] baraneetharan.r: <https://www.w3schools.com/xml/ajax_xmlhttprequest_create.asp>
<https://www.w3schools.com/tags/ref_httpmessages.asp>
<https://www.codejava.net/frameworks/spring/spring-mvc-with-jdbctemplate-example>
  
    ---------------
    | Attachments |
    ---------------
    
    AJAX The XMLHttpRequest Object
    https://www.w3schools.com/xml/ajax_xmlhttprequest_create.asp

    
    HTTP Messages
    https://www.w3schools.com/tags/ref_httpmessages.asp

    
    Spring MVC with JdbcTemplate Example
    https://www.codejava.net/frameworks/spring/spring-mvc-with-jdbctemplate-example

    
  

  [2019-06-21T03:28:24Z] baraneetharan.r: <https://dzone.com/articles/spring-mvc-example-for-user-registration-and-login-1>
  
    ---------------
    | Attachments |
    ---------------
    
    Spring MVC Example for User Registration and Login - DZone Web Dev
    https://dzone.com/articles/spring-mvc-example-for-user-registration-and-login-1

    
  

  [2019-06-21T10:20:39Z] ajay.kuttysankaran: <https://stackoverflow.com/questions/17444410/where-is-the-exact-location-of-spring-config-file-and-web-xml>
  
    ---------------
    | Attachments |
    ---------------
    
    Where is the exact location of spring config file and web.xml?
    https://stackoverflow.com/questions/17444410/where-is-the-exact-location-of-spring-config-file-and-web-xml

    
  

  [2019-06-21T10:48:35Z] ajay.kuttysankaran: 
  

  [2019-06-21T12:21:47Z] baraneetharan.r: <https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/jdbc/core/JdbcTemplate.html>
  

  [2019-06-25T06:16:05Z] baraneetharan.r: 
  

  [2019-06-25T08:47:16Z] baraneetharan.r: <https://www.baeldung.com/bootstraping-a-web-application-with-spring-and-java-based-configuration>
<https://www.baeldung.com/spring-xml-vs-java-config>
<https://stackoverflow.com/questions/47552835/the-type-webmvcconfigureradapter-is-deprecated>
<https://stackoverflow.com/questions/27539610/order-of-loading-contextconfiglocation-in-web-xml-of-spring-servlet-project>
<https://stackoverflow.com/questions/3652090/difference-between-applicationcontext-xml-and-spring-servlet-xml-in-spring-frame>
  
    ---------------
    | Attachments |
    ---------------
    
    Bootstrap a Web Application with Spring 5 | Baeldung
    https://www.baeldung.com/bootstraping-a-web-application-with-spring-and-java-based-configuration

    
    Spring: web.xml vs Initializer | Baeldung
    https://www.baeldung.com/spring-xml-vs-java-config

    
    The type WebMvcConfigurerAdapter is deprecated
    https://stackoverflow.com/questions/47552835/the-type-webmvcconfigureradapter-is-deprecated

    
    Order of loading contextConfigLocation in web.xml of Spring Servlet project
    https://stackoverflow.com/questions/27539610/order-of-loading-contextconfiglocation-in-web-xml-of-spring-servlet-project

    
    Difference between applicationContext.xml and spring-servlet.xml in Spring Framework
    https://stackoverflow.com/questions/3652090/difference-between-applicationcontext-xml-and-spring-servlet-xml-in-spring-frame

    
  

  [2019-06-27T03:58:16Z] baraneetharan.r: package com.kgisl.springbeanscope;

import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import org.springframework.stereotype.Component;

/**
 * GreetingService
 */
@Component
// @Scope("singleton")
// @Scope("prototype")
@Scope(value="request", proxyMode =ScopedProxyMode.TARGET_CLASS)
public class GreetingService {

    public String greet(){
        return "Hello";
    }
}



package com.kgisl.springbeanscope;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

/**
 * HelloController
 */
@RestController
@RequestMapping("/")
public class HelloController {

    @Autowired
    private GreetingService greetingService;
    @GetMapping
    public String getall() {
        String myGreet=greetingService.greet();
        System.out.println(greetingService);
        return "HelloController "+myGreet;
    }

}




package com.kgisl.springbeanscope;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

/**
 * HelloController
 */
@RestController
@RequestMapping("/home")
public class HomeController {

    @Autowired
    private GreetingService greetingService;
    @GetMapping
    public String getall() {
        String myGreet=greetingService.greet();
        System.out.println(greetingService);
        return "HomeController "+myGreet;
    }
    @PutMapping
    public String put() {
        String myGreet=greetingService.greet();
        System.out.println(greetingService);
        return "HomeController "+myGreet;
    }
    @DeleteMapping
    public String delete() {
        String myGreet=greetingService.greet();
        System.out.println(greetingService);
        return "HomeController "+myGreet;
    }

}
  

  [2019-06-27T03:58:29Z] baraneetharan.r: <https://www.concretepage.com/spring/spring-bean-scopes>
  
    ---------------
    | Attachments |
    ---------------
    
    Spring Bean Scopes
    https://www.concretepage.com/spring/spring-bean-scopes

    
  

  [2019-06-27T11:56:53Z] supriya.sanjay: <https://www.javatpoint.com/spring-tutorial-dependency-injection-by-constructor>
  
    ---------------
    | Attachments |
    ---------------
    
    Spring Constructor injection - javatpoint
    https://www.javatpoint.com/spring-tutorial-dependency-injection-by-constructor

    
  

  [2019-06-27T11:57:01Z] supriya.sanjay: <https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/BeanFactory.html>
  

  [2019-07-01T10:31:44Z] baraneetharan.r: &lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;

&lt;head&gt;
   &lt;meta charset="UTF-8"&gt;
   &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
   &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt;
   &lt;title&gt;Document&lt;/title&gt;

   &lt;script src="country.js"&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;body onload="app.FetchAll()"&gt;
   &lt;form action="javascript:void(0);" method="POST" onsubmit="app.Add()"&gt;
       &lt;input type="text" id="countryName" placeholder="New country"&gt;
       &lt;input type="submit" id="submit" value="Add"&gt;
   &lt;/form&gt;
   &lt;!-- &lt;div id="countriesList"&gt;&lt;/div&gt; --&gt;
   &lt;table&gt;
           &lt;tr&gt;
             &lt;th&gt;Name&lt;/th&gt;
           &lt;/tr&gt;
             &lt;tbody id="countriesList"&gt;
             &lt;/tbody&gt;
         &lt;/table&gt;

&lt;/body&gt;

&lt;/html&gt;
  

  [2019-07-01T10:31:52Z] baraneetharan.r: var app = new function () {
    this.countries = ['France', 'Germany', 'England', 'Spain', 'Belgium', 'Italy', 'Portugal', 'Irland', 'Luxembourg'];
    // this.countries = [];

    this.FetchAll = function () {
        alert("this.countries.length =" + this.countries.length);
        // this.data += '&lt;table&gt;&lt;tr&gt;&lt;th&gt;Name&lt;/th&gt;&lt;/tr&gt;';
        var data = '';
        if (this.countries.length &gt; 0) {
            for (i = 0; i &lt; this.countries.length; i++) {

                data += '&lt;tr&gt;';
                data += '&lt;td&gt;' + this.countries[i] + '&lt;/td&gt;';
                data += '&lt;td&gt;&lt;button onclick="app.Edit(' + i + ')"&gt;Edit&lt;/button&gt;&lt;/td&gt;';
                data += '&lt;td&gt;&lt;button onclick="app.Delete(' + i + ')"&gt;Delete&lt;/button&gt;&lt;/td&gt;';
                data += '&lt;/tr&gt;';
            }
            // this.data += '&lt;table&gt;';
            console.log(data);
            document.getElementById("countriesList").innerHTML = data;
        }
    };

    this.Edit = function (item) {
        document.getElementById('submit').value = "Update"
        alert(this.countries[item]);
        document.getElementById('countryName').value = this.countries[item];
        this.countries.splice(0, 1, document.getElementById('countryName').value);
        app.FetchAll();
    };

    this.Delete = function (item) {
        alert(this.countries[item]);
        this.countries.splice(item, 1);
        app.FetchAll();
    };

    this.Add = function () {
        document.getElementById('countryName').value;
        // alert(document.getElementById('countryName').value);
        this.countries.push(document.getElementById('countryName').value);

        app.FetchAll();
    };
}

 // app.FetchAll();
  

  [2019-07-01T11:30:41Z] naveenkumar.a: ====================================country.html==================&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;

&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt;
  &lt;title&gt;Document&lt;/title&gt;

  &lt;script src="country.js"&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;body onload="app.FetchAll()"&gt;
  &lt;form action="javascript:void(0);" method="POST" onsubmit="app.AddorUpdate()"&gt;
      &lt;input type="text" id="countryName" placeholder="New country"&gt;
      &lt;input type="submit" id="submit" value="Add"&gt;
  &lt;/form&gt;
  &lt;!-- &lt;div id="countriesList"&gt;&lt;/div&gt; --&gt;
  &lt;table&gt;
          &lt;tr&gt;
            &lt;th&gt;Name&lt;/th&gt;
          &lt;/tr&gt;
            &lt;tbody id="countriesList"&gt;
            &lt;/tbody&gt;
        &lt;/table&gt;

&lt;/body&gt;

&lt;/html&gt;


===================================country.js====================
var app = new function () {
  this.countries = ['France', 'Germany', 'England', 'Spain', 'Belgium', 'Italy', 'Portugal', 'Irland', 'Luxembourg'];
  // this.countries = [];
  this.updateItem="";

  this.FetchAll = function () {
    // alert("this.countries.length =" + this.countries.length);
    // this.data += '&lt;table&gt;&lt;tr&gt;&lt;th&gt;Name&lt;/th&gt;&lt;/tr&gt;';
    var data = '';
    if (this.countries.length &gt; 0) {
      for (i = 0; i &lt; this.countries.length; i++) {

        data += '&lt;tr&gt;';
        data += '&lt;td&gt;' + this.countries[i] + '&lt;/td&gt;';
        data += '&lt;td&gt;&lt;button onclick="app.Edit(' + i + ')"&gt;Edit&lt;/button&gt;&lt;/td&gt;';
        data += '&lt;td&gt;&lt;button onclick="app.Delete(' + i + ')"&gt;Delete&lt;/button&gt;&lt;/td&gt;';
        data += '&lt;/tr&gt;';
      }
      // this.data += '&lt;table&gt;';
      console.log(data);
      document.getElementById("countriesList").innerHTML = data;
    }
  };

  this.Edit = function (item) {
    this.updateItem=item;
    document.getElementById('submit').value = "Update";
    document.getElementById('countryName').value = this.countries[item];
  };

  this.Delete = function (item) {
    alert(this.countries[item]);
    this.countries.splice(item, 1);
    app.FetchAll();
  };

  this.Add = function () {
    document.getElementById('countryName').value;
    // alert(document.getElementById('countryName').value);
    this.countries.push(document.getElementById('countryName').value);

    app.FetchAll();
  };
  this.AddorUpdate = function () {
    var action = document.getElementById('submit').value;
    if (action != "Update") {
      document.getElementById('countryName').value;
      this.countries.push(document.getElementById('countryName').value);
    }
    else {
      var updateCountry = document.getElementById('countryName').value;
      alert(updateCountry);
      this.countries.splice(this.updateItem, 1, updateCountry);
      this.updateItem="";
      document.getElementById('submit').value = "add";

    }


    app.FetchAll();
  };
}

// app.FetchAll();
  

  [2019-07-02T07:36:51Z] mohanasankari.g: <http://dummy.restapiexample.com/>

<https://www.w3schools.com/js/js_ajax_http.asp>
<https://www.w3schools.com/xml/xml_http.asp>
<https://gist.github.com/EtienneR/2f3ab345df502bd3d13e>
<https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop/related?hl=en>
<https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS>
<https://chrome.google.com/webstore/detail/allow-control-allow-origi/nlfbmbojpeacfghkpbjhddihlkkiljbi/related?hl=en>

*://*/*
<https://www.google.com/search?q=cors>
  

  [2019-07-02T09:18:56Z] mohanasankari.g: =============================emp.html
&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt;
    &lt;title&gt;Document&lt;/title&gt;
    &lt;script src="emp.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;input type="text" name="name" id="name"&gt;
    &lt;input type="text" name="salary" id="salary"&gt;
    &lt;input type="text" name="age" id="age"&gt;
    &lt;input type="submit" value="submit" onclick="app.add()"&gt;
&lt;/body&gt;
&lt;/html&gt;





===================================emp.js



var app = new function () {
    this.add = function () {
        // {"name":"test","salary":"123","age":"23"}

        var data = {};
        data.name = document.getElementById("name").value;
        data.salary = document.getElementById("salary").value;
        data.age = document.getElementById("age").value;
        var json = JSON.stringify(data);
        alert(json);
        console.log(json);

        // Post a user
        var xhttp = new XMLHttpRequest();
        xhttp.open("POST", "<http://dummy.restapiexample.com/api/v1/create>", true);
        xhttp.send(json);
        xhttp.onreadystatechange = function () {
            if (this.readyState == 4 &amp;&amp; this.status == 200) {
                // Typical action to be performed when the document is ready:
                // document.getElementById("demo").innerHTML = xhttp.responseText;
            }
        };

    };
}
  

  [2019-07-02T09:56:53Z] krishnan.u: 
  

  [2019-07-03T05:51:39Z] baraneetharan.r: <https://start.spring.io/>
<https://stackoverflow.com/questions/33619532/configuration-using-annotation-springbootapplication>
<https://stackoverflow.com/questions/35005158/what-is-the-difference-between-componentscan-and-enableautoconfiguration-in-sp>
<https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html>
  
    ---------------
    | Attachments |
    ---------------
    
    Configuration using annotation @SpringBootApplication
    https://stackoverflow.com/questions/33619532/configuration-using-annotation-springbootapplication

    
    What is the difference between @ComponentScan and @EnableAutoConfiguration in Spring Boot?
    https://stackoverflow.com/questions/35005158/what-is-the-difference-between-componentscan-and-enableautoconfiguration-in-sp

    
  

  [2019-07-03T07:08:05Z] baraneetharan.r: 
  

  [2019-07-03T11:24:47Z] baraneetharan.r: 
  

  [2019-07-04T05:23:24Z] mohanasankari.g: 
  

  [2019-07-04T11:49:02Z] supriya.sanjay: <https://www.boraji.com/spring-mvc-5-static-resources-handling-example>
  
    ---------------
    | Attachments |
    ---------------
    
    Spring MVC 5 - Static resources handling example | BORAJI.COM
    https://www.boraji.com/spring-mvc-5-static-resources-handling-example

    
  

  [2019-07-04T11:49:24Z] supriya.sanjay: package com.memorynotfound.controller;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.ServletRegistration;

import org.springframework.web.context.ContextLoaderListener;
import org.springframework.web.context.support.AnnotationConfigWebApplicationContext;
import org.springframework.web.servlet.DispatcherServlet;
import org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;

public class MvcWebApplicationInitializer extends AbstractAnnotationConfigDispatcherServletInitializer {
   public void onStartup(ServletContext servletContext) throws ServletException
   {
     AnnotationConfigWebApplicationContext context = new AnnotationConfigWebApplicationContext();
     context.scan("com.memorynotfound");
     servletContext.addListener(new ContextLoaderListener(context));

     ServletRegistration.Dynamic dispatcher = servletContext.addServlet("mvc", new DispatcherServlet(context));
     dispatcher.setLoadOnStartup(1);
     dispatcher.addMapping("/");
   }

   @Override
   protected Class&lt;?&gt;[] getRootConfigClasses() {
      return null;
   }

   @Override
   protected Class&lt;?&gt;[] getServletConfigClasses() {
      return new Class[] { MvcWebConfig.class };
   }

   @Override
   protected String[] getServletMappings() {
      return new String[] { "/" };
   }

}
  

  [2019-07-04T11:49:34Z] supriya.sanjay: package com.memorynotfound.controller;

import java.util.concurrent.TimeUnit;

import javax.sql.DataSource;

// import com.kgisl.springjson.dao.ContactDAO;
// import com.kgisl.springjson.dao.ContactDAOImpl;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.CacheControl;
import org.springframework.jdbc.datasource.DriverManagerDataSource;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
import org.springframework.web.servlet.config.annotation.ViewResolverRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;

@Configuration
@EnableWebMvc
@ComponentScan("com.memorynotfound")
public class MvcWebConfig implements WebMvcConfigurer {

   // @Override
   public void configureViewResolvers(ViewResolverRegistry registry) {
      registry.jsp("/WEB-INF/view/", ".jsp");
   }

   /**
    * Static Resource (CSS or JS) mapping
    */
   // @Override
   public void addResourceHandlers(ResourceHandlerRegistry registry) {

      // Register resource handler for CSS and JS
      registry.addResourceHandler("/resources/**").addResourceLocations("classpath:/statics/", "D:/statics/")
            .setCacheControl(CacheControl.maxAge(2, TimeUnit.HOURS).cachePublic());

      // Register resource handler for images

      registry.addResourceHandler("/images/**").addResourceLocations("/WEB-INF/images/")
            .setCacheControl(CacheControl.maxAge(2, TimeUnit.HOURS).cachePublic());
   }

   @Bean
   public DataSource getDataSource() {
       DriverManagerDataSource dataSource = new DriverManagerDataSource();
       dataSource.setDriverClassName("com.mysql.jdbc.Driver");
       dataSource.setUrl("jdbc:<mysql://localhost:3306/contactdb%22|mysql://localhost:3306/contactdb">);
       dataSource.setUsername("root");
       dataSource.setPassword("");

       return dataSource;
   }

   // @Bean
   // public ContactDAO getContactDAO() {
   //     return new ContactDAOImpl(getDataSource());
   // }
}
  

  [2019-07-04T12:38:06Z] baraneetharan.r: 
  

  [2019-07-05T07:31:19Z] baraneetharan.r: <http://hibernate.org/orm/documentation/5.3/>
<https://docs.jboss.org/hibernate/orm/5.3/userguide/html_single/Hibernate_User_Guide.html>
<https://www.slideshare.net/intellibitz/hibernate-developer-reference>
<https://github.com/baraneetharan/hibernatexml>
<https://www.objectdb.com/api/java/jpa/annotations>
  
    ---------------
    | Attachments |
    ---------------
    
    Hibernate Developer Reference
    https://www.slideshare.net/intellibitz/hibernate-developer-reference

    
    baraneetharan/hibernatexml
    https://github.com/baraneetharan/hibernatexml

    
    JPA 2 Annotations - The Complete Reference (JavaDoc)
    https://www.objectdb.com/api/java/jpa/annotations

    
  

  [2019-07-10T03:56:47Z] baraneetharan.r: <https://bushansirgur.in/complete-crud-application-in-spring-mvc-and-hibernate-xml-configuration/>
  
    ---------------
    | Attachments |
    ---------------
    
    Complete CRUD Application in Spring MVC and Hibernate [XML Configuration] - B2 Tech
    https://bushansirgur.in/complete-crud-application-in-spring-mvc-and-hibernate-xml-configuration/

    
  

  [2019-07-15T03:59:09Z] baraneetharan.r: <https://gist.github.com/baraneetharan/9f510cedab43983ba1cf47f3db1d01aa>
  

  [2019-07-16T11:16:23Z] baraneetharan.r: <https://netsurfingzone.com/wp-content/uploads/2018/10/jpa1.png>
  
    ---------------
    | Attachments |
    ---------------
    
    
    

    
  

  [2019-07-17T13:10:12Z] supriya.sanjay: <https://www.javaguides.net/2018/11/spring-mvc-5-hibernate-5-jsp-mysql-crud-tutorial.html>
  
    ---------------
    | Attachments |
    ---------------
    
    Spring MVC 5 + Hibernate 5 + JSP + MySQL CRUD Tutorial
    https://www.javaguides.net/2018/11/spring-mvc-5-hibernate-5-jsp-mysql-crud-tutorial.html

    
  

  [2019-07-17T13:10:23Z] supriya.sanjay: <https://www.javaguides.net/2018/11/spring-mvc-5-spring-data-jpa-hibernate-jsp-mysql-tutorial.html>
  
    ---------------
    | Attachments |
    ---------------
    
    Spring MVC 5 + Spring Data JPA + Hibernate 5 + JSP + MySQL Tutorial
    https://www.javaguides.net/2018/11/spring-mvc-5-spring-data-jpa-hibernate-jsp-mysql-tutorial.html

    
  

  [2019-07-17T13:11:07Z] supriya.sanjay: 
  
